[
    {
        "id": "33556e98e7501abf",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4d6542c2a87f4380",
        "type": "tab",
        "label": "MQTT Aedes Broker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ede7465224a02eb",
        "type": "tab",
        "label": "System / Publishing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c19ab6e0657fcd70",
        "type": "tab",
        "label": "Alle System / Subscriping",
        "disabled": false,
        "info": "node-red-contrib-aedes\nnode-red-contrib-cpu",
        "env": []
    },
    {
        "id": "2b0de4698f35c235",
        "type": "tab",
        "label": "Shelly1 / Subscriping",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a18bee2e207edef3",
        "type": "tab",
        "label": "Shelly2 / Subscriping",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "57793960cf4cb040",
        "type": "tab",
        "label": "Raumklima / Subscriping",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1d4f578bef439a70",
        "type": "tab",
        "label": "compare",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddd61edf8d8f5ce2",
        "type": "tab",
        "label": "openweather",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b6a2ad0c72d43d34",
        "type": "tab",
        "label": "OW2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b74e16d31657d5a",
        "type": "tab",
        "label": "YR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f04b5aab4dbbe0ce",
        "type": "tab",
        "label": "Weatherstack",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "01666d2621fc3afa",
        "type": "tab",
        "label": "weatherbit",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e0f5a1e129ae9af8",
        "type": "tab",
        "label": "WeatherAPI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c68bf3193e71610e",
        "type": "tab",
        "label": "mysql",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "75ec988a5e12b304",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "bd5857c13bc1e1e4",
        "type": "tab",
        "label": "Flow 6",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "265d26a9b0b7bbe2",
        "type": "tab",
        "label": "Flow 4",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8688ffe19f3ee733",
        "type": "tab",
        "label": "GEO",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5790cdc8bcaea24e",
        "type": "tab",
        "label": "Time",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "85f8934d68b2149c",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d01c02834d8a7616",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b4a87c66d7a3665f",
        "type": "ui_tab",
        "name": "Hello",
        "icon": "",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ddf98fc90e5bf8d6",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#064165",
                "baseFont": "Courier,monospace",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "raspihell",
                "default": "#4B7930",
                "baseColor": "#f1f1f1",
                "baseFont": "Courier,monospace",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#f1f1f1",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#f1f1f1",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#bababa",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#303030",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#f1f1f1",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#404040",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "base-font": {
                    "value": "Courier,monospace"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 24,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "d77c24919d5307b6",
        "type": "ui_group",
        "name": "CPU-Temperatur",
        "tab": "b4a87c66d7a3665f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3841f615c819f28b",
        "type": "ui_group",
        "name": "CPU-Auslastung",
        "tab": "b4a87c66d7a3665f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "95934c44be359fb7",
        "type": "ui_tab",
        "name": "Raspberry Pi 421",
        "icon": "fa-server",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "648e040fbcc0a63e",
        "type": "ui_group",
        "name": "RAM-Auslastung",
        "tab": "95934c44be359fb7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8536a9c0ef59e1eb",
        "type": "ui_group",
        "name": "RAM-Auslastung",
        "tab": "b4a87c66d7a3665f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d42cba2fbf496d29",
        "type": "ui_group",
        "name": "CPU Auslastung",
        "tab": "95934c44be359fb7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c7ab99f798cdf0f",
        "type": "ui_group",
        "name": "CPU Temperatur",
        "tab": "95934c44be359fb7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7177e1bbce7a0779",
        "type": "ui_group",
        "name": "Wind",
        "tab": "5052abf10d1685d7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e70d0760bcc08d3a",
        "type": "ui_group",
        "name": "Himmel",
        "tab": "5052abf10d1685d7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "28f7dbdd3547c09e",
        "type": "ui_group",
        "name": "Temperatur",
        "tab": "5052abf10d1685d7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f697df7ca894247c",
        "type": "ui_group",
        "name": "LÃ¼ftfeuchtigkeit",
        "tab": "5052abf10d1685d7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f136cc64cd7db2e1",
        "type": "ui_group",
        "name": "info",
        "tab": "5052abf10d1685d7",
        "order": 7,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "325d7857240a0cc6",
        "type": "ui_group",
        "name": "Luftdruck",
        "tab": "5052abf10d1685d7",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5052abf10d1685d7",
        "type": "ui_tab",
        "name": "Weather",
        "icon": "fa-sun-o",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e7bef4fac1dad829",
        "type": "mqtt-broker",
        "name": "",
        "broker": "guteswetter.ddns.net",
        "port": "1883",
        "clientid": "mqtt_raspi421",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6f08daeb3892d9d2",
        "type": "ui_tab",
        "name": "Raspberry Farm",
        "icon": "fa-server",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "95082877e495bc4d",
        "type": "ui_group",
        "name": "CPU Temperatur",
        "tab": "6f08daeb3892d9d2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4fb2731161c030c4",
        "type": "ui_group",
        "name": "CPU Auslastung",
        "tab": "6f08daeb3892d9d2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7a1fd158c2b52cdd",
        "type": "ui_group",
        "name": "RAM Auslastung",
        "tab": "6f08daeb3892d9d2",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a9c83617a1d0cec3",
        "type": "ui_tab",
        "name": "Details",
        "icon": "fa-thermometer-half",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "47b711e5f8cfcf96",
        "type": "ui_group",
        "name": "Shelly H&T.25 Indoor",
        "tab": "a9c83617a1d0cec3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0fb03d12c9eac6b4",
        "type": "ui_tab",
        "name": "BÃ¼ro",
        "icon": "fa-thermometer-half",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f313c8705833350a",
        "type": "ui_group",
        "name": "Sensoren",
        "tab": "0fb03d12c9eac6b4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "77910d3a38071c05",
        "type": "ui_group",
        "name": "Aktion",
        "tab": "0fb03d12c9eac6b4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "109d33547ff0a425",
        "type": "ui_group",
        "name": "Einstellungen",
        "tab": "0fb03d12c9eac6b4",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3df4cdeccd180e87",
        "type": "ui_group",
        "name": "Shelly H&T.39 Outdoor",
        "tab": "a9c83617a1d0cec3",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4421ea5d2f4fae8e",
        "type": "ui_group",
        "name": "openweather.org",
        "tab": "d1dcec789102c3a3",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e15626a66ed17914",
        "type": "ui_tab",
        "name": "MQTT",
        "icon": "code",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "91cc8953bf58cd38",
        "type": "ui_group",
        "name": "Last Messages",
        "tab": "e15626a66ed17914",
        "order": 1,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fd4c240a0b136832",
        "type": "ui_group",
        "name": "Ãbersicht",
        "tab": "0fb03d12c9eac6b4",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fd5052c6399ba750",
        "type": "ui_group",
        "name": "MQTT Messages",
        "tab": "b4a87c66d7a3665f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d1dcec789102c3a3",
        "type": "ui_tab",
        "name": "Hidden",
        "icon": "dashboard",
        "order": 11,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "9cbad506a0556217",
        "type": "ui_group",
        "name": "hidden",
        "tab": "d1dcec789102c3a3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3da97eba3f6cdd7",
        "type": "ui_group",
        "name": "openweather.org",
        "tab": "fd4b7bc6be096b7c",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c55d5c476c4905d6",
        "type": "ui_tab",
        "name": "GEO",
        "icon": "fa-earth",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a07f814318e1219d",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "c55d5c476c4905d6",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "0e8da3195e8b5a32",
        "type": "ui_group",
        "name": "YR",
        "tab": "fd4b7bc6be096b7c",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b00580b1b424ac78",
        "type": "ui_group",
        "name": "YR",
        "tab": "d1dcec789102c3a3",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "12b21ddaf27bd62f",
        "type": "ui_group",
        "name": "Timer 10 Minuten",
        "tab": "b4a87c66d7a3665f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fd4b7bc6be096b7c",
        "type": "ui_tab",
        "name": "Forecast",
        "icon": "fa-sun-o",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "69fad70e826d02b4",
        "type": "ui_group",
        "name": "Aktuell",
        "tab": "8e5d7269710e10a7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8e5d7269710e10a7",
        "type": "ui_tab",
        "name": "App-Vergleich",
        "icon": "fa-sun-o",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3bc48255336fdd1e",
        "type": "ui_group",
        "name": "Niederschlag",
        "tab": "5052abf10d1685d7",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "179277ed4e2f8253",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "test",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "76bb316eac9392d7",
        "type": "MySQLdatabase",
        "name": "",
        "host": "guteswetter.ddns.net",
        "port": "3306",
        "db": "test",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "1e891a877d42f1b8",
        "type": "ui_spacer",
        "z": "2b74e16d31657d5a",
        "name": "spacer",
        "group": "0e8da3195e8b5a32",
        "order": 13,
        "width": 6,
        "height": 1
    },
    {
        "id": "57316acf0db89fb6",
        "type": "ui_group",
        "name": "MySQL",
        "tab": "d1dcec789102c3a3",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b154e9481e5e0664",
        "type": "ui_group",
        "name": "Summe",
        "tab": "8e5d7269710e10a7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b923ae493cecb90a",
        "type": "ui_link",
        "name": "Raspberry Pi 422",
        "link": "http://raspi422.sanberlin.com:1882/",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 8
    },
    {
        "id": "3e0b974a4b41a619",
        "type": "ui_group",
        "name": "Info",
        "tab": "b4a87c66d7a3665f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "17f048e0c1969eec",
        "type": "ui_group",
        "name": "Best",
        "tab": "8e5d7269710e10a7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4718aa4a8f0d3cd5",
        "type": "cpu",
        "z": "33556e98e7501abf",
        "name": "",
        "msgCore": true,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": true,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "1ec925bf704c346c"
            ]
        ]
    },
    {
        "id": "3f42e79e8ac85ff8",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d77c24919d5307b6",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0086b3",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 240,
        "wires": []
    },
    {
        "id": "1ec925bf704c346c",
        "type": "switch",
        "z": "33556e98e7501abf",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "overall",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 930,
        "y": 320,
        "wires": [
            [
                "3f42e79e8ac85ff8",
                "4a89edd44df67331",
                "29f4349408fba474"
            ],
            [
                "b31fee1a06546600",
                "3fc649e48cf088e5",
                "c42340eb39f6d4c9"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "d0621049cc48f97e",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 3,
        "width": "6",
        "height": "4",
        "label": "akzeptabel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "40",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#fff70f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b31fee1a06546600",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "3841f615c819f28b",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 300,
        "wires": []
    },
    {
        "id": "3fc649e48cf088e5",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "niedrig",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "f81dbd64c34a3507"
            ]
        ]
    },
    {
        "id": "24edfbebf40ea35d",
        "type": "inject",
        "z": "33556e98e7501abf",
        "name": "5 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "57f62c04748ae258",
                "4718aa4a8f0d3cd5"
            ]
        ]
    },
    {
        "id": "4a89edd44df67331",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "optimal",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "d0621049cc48f97e"
            ]
        ]
    },
    {
        "id": "f81dbd64c34a3507",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "mittel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "40",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "57f62c04748ae258",
        "type": "Memory",
        "z": "33556e98e7501abf",
        "name": "mem",
        "scale": "Byte",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "738766d64012cead",
                "b52d52dbfb6806b8",
                "bf7732921d1ac471"
            ]
        ]
    },
    {
        "id": "cb9a9e86376a8470",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "8536a9c0ef59e1eb",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "className": "",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "baaebb1403d3f0e0",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "niedrig",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "738766d64012cead",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "totalmem",
        "func": "// GET VARIABLEN\nlet gb = flow.get('gb') || 0;\n\n// FUNKTION\nconst totalmem = msg.payload.totalmem;\nconst k = 1024;\nconst kb = Math.floor(totalmem / k);\nconst mb = Math.floor(kb / 1000);\nconst ggb = Math.floor(mb / 1000);\ngb = mb.toFixed(2);\n\n// SET VARIABLEN\nflow.set('gb', gb);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = gb;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "32c7344a264318ff"
            ]
        ]
    },
    {
        "id": "b52d52dbfb6806b8",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "freemem",
        "func": "msg.payload = msg.payload.freemem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "bf7732921d1ac471",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "memusage",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 300,
        "wires": [
            [
                "cb9a9e86376a8470",
                "baaebb1403d3f0e0",
                "5899a5d31010319e",
                "d28dccb7d7cdf41e"
            ]
        ]
    },
    {
        "id": "5899a5d31010319e",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "akzetabel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "60",
        "ymax": "80",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 720,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d28dccb7d7cdf41e",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "className": "",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "29f4349408fba474",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0086b3",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 200,
        "wires": []
    },
    {
        "id": "c42340eb39f6d4c9",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 340,
        "wires": []
    },
    {
        "id": "32c7344a264318ff",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "648e040fbcc0a63e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gesamtspeicher",
        "format": "{{value}} MB",
        "layout": "row-spread",
        "className": "",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "cfce94819107376c",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 710,
        "y": 460,
        "wires": []
    },
    {
        "id": "344253603e176b93",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 1410,
        "y": 380,
        "wires": []
    },
    {
        "id": "8e8f9e4f11908432",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 1470,
        "y": 160,
        "wires": []
    },
    {
        "id": "4983a072c93c3fdc",
        "type": "aedes broker",
        "z": "4d6542c2a87f4380",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 370,
        "y": 120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c0090cd98f35aa7b",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "Broker / Server",
        "info": "",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "b16d6369307ce61c",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 240,
        "wires": [
            [
                "81310dbbf406eec4",
                "2b5ce76ecbde3793"
            ]
        ]
    },
    {
        "id": "4bb5553ee39dacaf",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "91cc8953bf58cd38",
        "order": 1,
        "width": "19",
        "height": "12",
        "name": "moreInfos",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 320,
        "wires": []
    },
    {
        "id": "60bfac4f931bcae2",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "View MQTT",
        "info": "",
        "x": 1230,
        "y": 280,
        "wires": []
    },
    {
        "id": "81310dbbf406eec4",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "payloadOpject",
        "func": "// GET VARIABLEN\nlet payloadOpject = flow.get('payloadOpject') || 0;\npayloadOpject = msg.payload;\nlet payloadOpjectLenght = msg.payload.length;\n\nlet payloadTopic = msg.topic;\nlet payloadId = msg._msgid;\n\nconst date = new Date();\nconst now = Date.now();\nconst d = str_pad(date.getDate());\nconst m = str_pad(date.getMonth());\nconst y = date.getFullYear();\n\nconst ho = str_pad(date.getHours());\nconst mi = str_pad(date.getMinutes());\nconst se = str_pad(date.getSeconds());\n\nconst datum = `${ho}:${mi}:${se} ${d}.${m}.${y}`;\n\n// FUNKTION\nfunction str_pad(n) {\n    return String(\"00\" + n).slice(-2);\n}\n\n\nif(payloadTopic.substring(0, 1) === \"$\") {\n    return;\n} else {\n    //payloadOpject = `${payloadOpject[payloadOpjectLenght - 1]}`;\n\n    //payloadOpject = { \"msg\" : {\"_msgid\" : \"\" + payloadId, \"time\" : \"\" + now, \"date\": \"\" +  datum, \"topic\" : \"\" + payloadTopic, \"value\" : \"\" + payloadOpject }};\n    //payloadOpject = {\"_msgid\" : \"\" + payloadId, \"time\" : \"\" + now, \"date\": \"\" +  datum, \"topic\" : \"\" + payloadTopic, \"value\" : \"\" + payloadOpject };\n    payloadOpject = `${ho}:${mi}:${se} ${d}.${m}.${y}<br><span style=\"font-weight:700;\">${payloadTopic} : ${payloadOpject}</span><br>`;\n\n    //payloadOpject = [\"_msgid\" => \"\" + payloadId, \"time\" => \"\" + now, \"date\" => \"\" +  datum, \"topic\" => \"\" + payloadTopic, \"value\" : \"\" + payloadOpject + \"\"];\n    //payloadOpject = payloadId;\n}\n\n// SET VARIABLEN\nflow.set('payloadOpject', payloadOpject);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = payloadOpject;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 240,
        "wires": [
            [
                "cf1dc2f0db746c6a",
                "8e0cafe4907b0296"
            ]
        ]
    },
    {
        "id": "cf1dc2f0db746c6a",
        "type": "file",
        "z": "4d6542c2a87f4380",
        "name": "",
        "filename": "test.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "900d03ef24f3b7e9"
            ]
        ]
    },
    {
        "id": "900d03ef24f3b7e9",
        "type": "file in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "filename": "test.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": true,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "757af0859acbc835",
                "2f6de4757945de2c",
                "8097638255f06150"
            ]
        ]
    },
    {
        "id": "3f2d18c5d6d35607",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "fd5052c6399ba750",
        "order": 1,
        "width": "6",
        "height": "4",
        "name": "lastInfos",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1220,
        "y": 240,
        "wires": []
    },
    {
        "id": "8e0cafe4907b0296",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 200,
        "wires": []
    },
    {
        "id": "8bfde98df3e35425",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "View hello",
        "info": "",
        "x": 1220,
        "y": 200,
        "wires": []
    },
    {
        "id": "757af0859acbc835",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "// GET VARIABLEN\nlet displayLastMessages = flow.get('displayLastMessages') || 0;\nlet content = \"\";\n\n// FUNKTION\nlet splitArray = msg.payload.split(\"\\n\")\nsplitArray = splitArray.reverse();\n\nfor(let i=0; i<= splitArray.length && i <= 3; i++) {\n    content += splitArray[i] + \"<br>\";\n}\n\ndisplayLastMessages = content + \"<br>\";\n\n// SET VARIABLEN\nflow.set('displayLastMessages', displayLastMessages);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = displayLastMessages;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 240,
        "wires": [
            [
                "3f2d18c5d6d35607"
            ]
        ]
    },
    {
        "id": "c80bc74c4f73d64e",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 380,
        "wires": []
    },
    {
        "id": "2b5ce76ecbde3793",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 200,
        "wires": []
    },
    {
        "id": "e237e40ec833b851",
        "type": "inject",
        "z": "4d6542c2a87f4380",
        "name": "Delete",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "41f6319ff6666204"
            ]
        ]
    },
    {
        "id": "6f821e33969ab8fa",
        "type": "file",
        "z": "4d6542c2a87f4380",
        "name": "",
        "filename": "test.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "c80bc74c4f73d64e"
            ]
        ]
    },
    {
        "id": "41f6319ff6666204",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "// GET VARIABLEN\nlet displayLastMessages = flow.get('displayLastMessages') || 0;\n\n// FUNKTION\nconst date = new Date(msg.topic);\nconst now = Date.now();\nconst d = str_pad(date.getDate());\nconst m = str_pad(date.getMonth());\nconst y = date.getFullYear();\n\nconst ho = str_pad(date.getHours());\nconst mi = str_pad(date.getMinutes());\nconst se = str_pad(date.getSeconds());\n\nconst datum = `${ho}:${mi}:${se} ${d}.${m}.${y}`;\n\n// FUNKTION\nfunction str_pad(n) {\n    return String(\"00\" + n).slice(-2);\n}\n\n\ndisplayLastMessages = `clear\n${datum}`;\n\n// SET VARIABLEN\nflow.set('displayLastMessages', displayLastMessages);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = displayLastMessages;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 380,
        "wires": [
            [
                "6f821e33969ab8fa"
            ]
        ]
    },
    {
        "id": "2f6de4757945de2c",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "// GET VARIABLEN\nlet displayLastMessages = flow.get('displayLastMessages') || 0;\nlet content = \"\";\n\n// FUNKTION\nlet splitArray = msg.payload.split(\"\\n\")\nsplitArray = splitArray.reverse();\n\nfor(let i=0; i<= splitArray.length && i <= 10; i++) {\n    content += splitArray[i] + \"<br>\";\n}\n\ndisplayLastMessages = content + \"<br>\";\n\n// SET VARIABLEN\nflow.set('displayLastMessages', displayLastMessages);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = displayLastMessages;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 320,
        "wires": [
            [
                "4bb5553ee39dacaf"
            ]
        ]
    },
    {
        "id": "8097638255f06150",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 200,
        "wires": []
    },
    {
        "id": "9a4708663dafeaa3",
        "type": "inject",
        "z": "5ede7465224a02eb",
        "name": "10 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "287a1ea66d95c2c7",
                "3780e1bc0d971f35"
            ]
        ]
    },
    {
        "id": "34f46addedbd3305",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/cpu_temp",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "b46e74bf1c377b22",
        "type": "comment",
        "z": "5ede7465224a02eb",
        "name": "Publishing / Client",
        "info": "",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "287a1ea66d95c2c7",
        "type": "cpu",
        "z": "5ede7465224a02eb",
        "name": "",
        "msgCore": true,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": true,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "cbb315ac2483b026"
            ]
        ]
    },
    {
        "id": "cbb315ac2483b026",
        "type": "switch",
        "z": "5ede7465224a02eb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "overall",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "34f46addedbd3305"
            ],
            [
                "327b58207a35d790"
            ]
        ]
    },
    {
        "id": "327b58207a35d790",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/cpu_workload",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1070,
        "y": 240,
        "wires": []
    },
    {
        "id": "3780e1bc0d971f35",
        "type": "Memory",
        "z": "5ede7465224a02eb",
        "name": "mem",
        "scale": "Byte",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "748641b2eaa9af38"
            ]
        ]
    },
    {
        "id": "748641b2eaa9af38",
        "type": "function",
        "z": "5ede7465224a02eb",
        "name": "memusage",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "29071382b9740d10"
            ]
        ]
    },
    {
        "id": "29071382b9740d10",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/memusage",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "5b06de80608f8113",
        "type": "comment",
        "z": "5ede7465224a02eb",
        "name": "Request",
        "info": "",
        "x": 380,
        "y": 220,
        "wires": []
    },
    {
        "id": "8f90f846ba1b5d96",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "e6b41a712a5cd8c1",
                "fab62ff9bfceb810"
            ]
        ]
    },
    {
        "id": "5c0489c09ab45987",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "Subscriping / Client",
        "info": "",
        "x": 470,
        "y": 100,
        "wires": []
    },
    {
        "id": "9d242ae5d2f82771",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "fa9cadd0bcacdec6",
                "6c28125c0707ebad"
            ]
        ]
    },
    {
        "id": "fbc81dc17699807e",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "8cfc9c3c4633b1ab",
                "c3115a085f02f184"
            ]
        ]
    },
    {
        "id": "c4e2fc57fe38410f",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "e838a2703f711576",
                "72e13f9c3d2c7cff"
            ]
        ]
    },
    {
        "id": "e6b41a712a5cd8c1",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "95082877e495bc4d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "50",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8cfc9c3c4633b1ab",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "4fb2731161c030c4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fa9cadd0bcacdec6",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "95082877e495bc4d",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "50",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e838a2703f711576",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "4fb2731161c030c4",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b7de483894bdc19d",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "d17d0c5fb6a4aadd",
                "b6ee285a685df77c"
            ]
        ]
    },
    {
        "id": "adceaed30f7d69aa",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 660,
        "wires": [
            [
                "aad49b282797489c",
                "1b1ba23637d451cf"
            ]
        ]
    },
    {
        "id": "d17d0c5fb6a4aadd",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "7a1fd158c2b52cdd",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "aad49b282797489c",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "7a1fd158c2b52cdd",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "e56cfeb3afc6556b",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "dff1076054031ec0"
            ]
        ]
    },
    {
        "id": "dff1076054031ec0",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "ba7b0debdac47663",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 500,
        "wires": [
            [
                "93a3a2163ae9c3b7"
            ]
        ]
    },
    {
        "id": "93a3a2163ae9c3b7",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 500,
        "wires": []
    },
    {
        "id": "42b78bb9c985b481",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "CPU Temperatur",
        "info": "",
        "x": 260,
        "y": 160,
        "wires": []
    },
    {
        "id": "9830416d71c79a07",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "CPU Auslastung",
        "info": "",
        "x": 260,
        "y": 380,
        "wires": []
    },
    {
        "id": "def029ac22388b6c",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "RAM Auslastung",
        "info": "",
        "x": 260,
        "y": 600,
        "wires": []
    },
    {
        "id": "d264d61f3e87a567",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 720,
        "wires": [
            [
                "3365407b33ec14ca"
            ]
        ]
    },
    {
        "id": "3365407b33ec14ca",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 720,
        "wires": []
    },
    {
        "id": "a9d6a5576193a102",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 940,
        "y": 200,
        "wires": [
            [
                "9c68af542462c3d1"
            ]
        ]
    },
    {
        "id": "9c68af542462c3d1",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 200,
        "wires": []
    },
    {
        "id": "94cf2a3007d316ef",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "View",
        "info": "",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "fab62ff9bfceb810",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "95082877e495bc4d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "6c28125c0707ebad",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "95082877e495bc4d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "c3115a085f02f184",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "4fb2731161c030c4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 340,
        "wires": []
    },
    {
        "id": "72e13f9c3d2c7cff",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "4fb2731161c030c4",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 420,
        "wires": []
    },
    {
        "id": "b6ee285a685df77c",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "7a1fd158c2b52cdd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "1b1ba23637d451cf",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "7a1fd158c2b52cdd",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 620,
        "wires": []
    },
    {
        "id": "e0a50c76a7165c64",
        "type": "mqtt in",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "12fcb78387cb0a94",
                "ab29f728c8a38e86",
                "4119c23bf9b5516c"
            ]
        ]
    },
    {
        "id": "2eed0b6d99fcd784",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "min",
        "info": "",
        "x": 170,
        "y": 140,
        "wires": []
    },
    {
        "id": "09c20f80f79ccad4",
        "type": "mqtt in",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 420,
        "y": 200,
        "wires": [
            [
                "b8e53c23ef402cfd",
                "3f7782b5626adf56",
                "120f2f1d8e95dba4"
            ]
        ]
    },
    {
        "id": "12fcb78387cb0a94",
        "type": "ui_chart",
        "z": "2b0de4698f35c235",
        "name": "temperature_chart",
        "group": "47b711e5f8cfcf96",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "30",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b8e53c23ef402cfd",
        "type": "ui_chart",
        "z": "2b0de4698f35c235",
        "name": "humidity_chart",
        "group": "47b711e5f8cfcf96",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "30",
        "ymax": "70",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1a7ba28724818c68",
        "type": "mqtt in",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/battery",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 410,
        "y": 300,
        "wires": [
            [
                "8589c17f9b3d62c4"
            ]
        ]
    },
    {
        "id": "8589c17f9b3d62c4",
        "type": "ui_text",
        "z": "2b0de4698f35c235",
        "group": "47b711e5f8cfcf96",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Batterie",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 980,
        "y": 300,
        "wires": []
    },
    {
        "id": "ab29f728c8a38e86",
        "type": "ui_text",
        "z": "2b0de4698f35c235",
        "group": "47b711e5f8cfcf96",
        "order": 2,
        "width": "5",
        "height": "1",
        "name": "",
        "label": "Temperatur",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "3f7782b5626adf56",
        "type": "ui_text",
        "z": "2b0de4698f35c235",
        "group": "47b711e5f8cfcf96",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1000,
        "y": 200,
        "wires": []
    },
    {
        "id": "fb0dc07b56434ffb",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "Subscriping / Client",
        "info": "",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "62f1ac4a5e918181",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "View DETAILS",
        "info": "",
        "x": 800,
        "y": 60,
        "wires": []
    },
    {
        "id": "4119c23bf9b5516c",
        "type": "ui_gauge",
        "z": "2b0de4698f35c235",
        "name": "temperature_gauge",
        "group": "47b711e5f8cfcf96",
        "order": 1,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "18",
        "max": "25",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "19",
        "seg2": "24",
        "className": "",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "120f2f1d8e95dba4",
        "type": "ui_gauge",
        "z": "2b0de4698f35c235",
        "name": "humidity_gauge",
        "group": "47b711e5f8cfcf96",
        "order": 4,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "0",
        "max": "100",
        "colors": [
            "#d78c00",
            "#00b500",
            "#d78c00"
        ],
        "seg1": "40",
        "seg2": "60",
        "className": "",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "06380607cd6a272b",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "555b6c8895f2e873",
                "e270c3519662fd0c",
                "c5445ed8a2ea7289",
                "e85244b4ddfc1d02",
                "b7319d4ebc3c204a"
            ]
        ]
    },
    {
        "id": "f1fcb1f8728c3d62",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "min",
        "info": "",
        "x": 190,
        "y": 220,
        "wires": []
    },
    {
        "id": "89bc955e5219630f",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 280,
        "wires": [
            [
                "7a819a67cd513009",
                "29a3a296bce7def4",
                "bddeb7059c265b86",
                "3979967d0dae94eb"
            ]
        ]
    },
    {
        "id": "555b6c8895f2e873",
        "type": "ui_chart",
        "z": "a18bee2e207edef3",
        "name": "",
        "group": "3df4cdeccd180e87",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7a819a67cd513009",
        "type": "ui_chart",
        "z": "a18bee2e207edef3",
        "name": "",
        "group": "3df4cdeccd180e87",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "115ae5c65c1e694c",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/battery",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "98b264a5149b7ee4"
            ]
        ]
    },
    {
        "id": "98b264a5149b7ee4",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Batterie",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1000,
        "y": 380,
        "wires": []
    },
    {
        "id": "e270c3519662fd0c",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 2,
        "width": "5",
        "height": "1",
        "name": "",
        "label": "Temperatur",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "29a3a296bce7def4",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 280,
        "wires": []
    },
    {
        "id": "847906caeef6409a",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "Subscriping / Client",
        "info": "",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "8be6124d9bcfff9b",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "View",
        "info": "",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "c5445ed8a2ea7289",
        "type": "ui_gauge",
        "z": "a18bee2e207edef3",
        "name": "temperature_gauge",
        "group": "3df4cdeccd180e87",
        "order": 1,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "-20",
        "max": "50",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "30",
        "className": "",
        "x": 770,
        "y": 160,
        "wires": []
    },
    {
        "id": "bddeb7059c265b86",
        "type": "ui_gauge",
        "z": "a18bee2e207edef3",
        "name": "humidity_gauge",
        "group": "3df4cdeccd180e87",
        "order": 4,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "0",
        "max": "100",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#d78c09"
        ],
        "seg1": "40",
        "seg2": "60",
        "className": "",
        "x": 760,
        "y": 340,
        "wires": []
    },
    {
        "id": "e85244b4ddfc1d02",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "ht_current_temp",
        "func": "// GET VARIABLEN\nlet ht_current_temp = global.get('ht_current_temp') || 0;\n\n// FUNKTION\nht_current_temp = msg.payload;\nht_current_temp = `{\n    \"ht_temp\": ${ht_current_temp}, \n    \"time\": ${Date.now()}\n}`;\n\n// SET VARIABLEN\nglobal.set('ht_current_temp', ht_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ht_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 80,
        "wires": [
            [
                "9d7c8d3fdd553439"
            ]
        ]
    },
    {
        "id": "9d7c8d3fdd553439",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 80,
        "wires": []
    },
    {
        "id": "b7319d4ebc3c204a",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "3979967d0dae94eb",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "ht_current_humidity",
        "func": "// GET VARIABLEN\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\n\n// FUNKTION\nht_current_humidity = msg.payload;\nht_current_humidity = `{\n    \"ht_humidity\": ${ht_current_humidity}, \n    \"time\": ${Date.now()}\n}`;\n\n// SET VARIABLEN\nglobal.set('ht_current_humidity', ht_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ht_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "f88a29e93cc4d27a"
            ]
        ]
    },
    {
        "id": "f88a29e93cc4d27a",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 320,
        "wires": []
    },
    {
        "id": "e7299a5add4d6ea4",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "GLOBAL",
        "info": "",
        "x": 1000,
        "y": 40,
        "wires": []
    },
    {
        "id": "a2bce3ae11c4d366",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "GLOBAL",
        "info": "",
        "x": 1220,
        "y": 300,
        "wires": []
    },
    {
        "id": "5b5d0a70099fd93e",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 120,
        "wires": [
            [
                "b3d00498ea201d99"
            ]
        ]
    },
    {
        "id": "b3d00498ea201d99",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempShellyIn",
        "func": "// GET VARIABLEN\nlet tempShellyIn = flow.get('tempShellyIn') || 0;\n\n// FUNKTION\ntempShellyIn = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('tempShellyIn', tempShellyIn);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempShellyIn;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 120,
        "wires": [
            [
                "6634bb0f0e2e9363"
            ]
        ]
    },
    {
        "id": "cd2a8311e40517cc",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Subscriping / Client",
        "info": "",
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "6634bb0f0e2e9363",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "f313c8705833350a",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Temperatur",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 120,
        "wires": []
    },
    {
        "id": "84523a1396e6d03d",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View BÃ¼ro / Sensoren",
        "info": "",
        "x": 1140,
        "y": 40,
        "wires": []
    },
    {
        "id": "9d9bd0341f96dc79",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "8990030f0a6e2172"
            ]
        ]
    },
    {
        "id": "8990030f0a6e2172",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humidityShellyIn",
        "func": "// GET VARIABLEN\nlet humidityShellyIn = flow.get('humidityShellyIn') || 0;\n\n// FUNKTION\nhumidityShellyIn = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('humidityShellyIn', humidityShellyIn);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humidityShellyIn;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "b63a48150f69f422"
            ]
        ]
    },
    {
        "id": "b63a48150f69f422",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "f313c8705833350a",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1120,
        "y": 180,
        "wires": []
    },
    {
        "id": "c03ea592379723b8",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Indoor",
        "info": "",
        "x": 130,
        "y": 120,
        "wires": []
    },
    {
        "id": "464f1737e87f6c5e",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Outdoor",
        "info": "",
        "x": 120,
        "y": 260,
        "wires": []
    },
    {
        "id": "81a12677bbe161a5",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "f313c8705833350a",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "Shelly H&T:25 Indoor",
        "label": "",
        "format": "Shelly H&T:25 Indoor",
        "layout": "row-spread",
        "className": "highlight",
        "x": 1140,
        "y": 80,
        "wires": []
    },
    {
        "id": "55a7bddb23a88bf5",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "15e0044873a3d4af"
            ]
        ]
    },
    {
        "id": "c5bb9049c423a50c",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "df16d84580440999"
            ]
        ]
    },
    {
        "id": "15e0044873a3d4af",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempShellyOut",
        "func": "// GET VARIABLEN\nlet tempShellyOut = flow.get('tempShellyOut') || 0;\n\n// FUNKTION\ntempShellyOut = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('tempShellyOut', tempShellyOut);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempShellyOut;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 260,
        "wires": [
            [
                "6ee5a36ea0efccdc"
            ]
        ]
    },
    {
        "id": "df16d84580440999",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humidityShellyOut",
        "func": "// GET VARIABLEN\nlet humidityShellyOut = flow.get('humidityShellyOut') || 0;\n\n// FUNKTION\nhumidityShellyOut = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('humidityShellyOut', humidityShellyOut);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humidityShellyOut;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "b3de4605c89df9be"
            ]
        ]
    },
    {
        "id": "6ee5a36ea0efccdc",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "f313c8705833350a",
        "order": 7,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Temperatur",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 260,
        "wires": []
    },
    {
        "id": "b3de4605c89df9be",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "f313c8705833350a",
        "order": 9,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1120,
        "y": 320,
        "wires": []
    },
    {
        "id": "f338fe45175cf589",
        "type": "inject",
        "z": "57793960cf4cb040",
        "name": "Refresh 5 min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1840,
        "y": 520,
        "wires": [
            [
                "89593913f94d8d50"
            ]
        ]
    },
    {
        "id": "9a64495a9019bb8d",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "airFunction",
        "func": "// GET VARIABLEN\nlet air = flow.get('air') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet aussentemperatur = flow.get('aussentemperatur');\nlet tempOptMin = flow.get('tempOptMin');\nlet tempOptMax = flow.get('tempOptMax');\nlet tempOptimal = flow.get('tempOptimal');\nlet tempShellyOut = flow.get('tempShellyOut');\n\n\ntempShellyIn = Math.round(tempShellyIn);\n\nair =\"\";\n//air = `${air} ${tempShellyIn} tempShellyIn<br>`;\n\n\n// FUNKTION\n//if(tempShellyIn > (aussentemperatur + 1)) {\nif(tempShellyIn > tempShellyOut) {\n    //air = `${air}Indoor wÃ¤rmer als Outdoor<br>`;\n} else {\n    //air = `${air}Indoor kÃ¤lter als Outdoor<br>`;\n}\n\nlet toleranzMin = tempOptimal - 0.5;\nlet toleranzMax = tempOptimal + 0.5;\n\nif(tempShellyIn >= toleranzMin && tempShellyIn <= toleranzMax) {\n    air = `${air} Optimal<br>`;\n} else {\n    if(tempShellyIn <= toleranzMin) {\n        air = `${air} zu kalt<br>`;\n    }\n    if(tempShellyIn >= toleranzMax) {\n        air = `${air} ${(tempShellyIn - tempOptimal)}Â°C zu warm<br>`;\n        \n        /*air `${air} Maximale Temperatur erreicht<br>`;\n        \n        if((tempShellyIn - tempOptMax) == 0) {\n            air `${air} Maximale Temperatur erreicht<br>`;\n        }\n        \n        if((tempShellyIn - tempOptMax) > 0) {\n            air = `${air} ${(tempShellyIn - tempOptMax)}Â°C Ã¼ber max<br>`;\n        } else {\n            air = `${air} ${(tempShellyIn - tempOptMax)}Â°C unter max<br>`;\n        }\n        */\n\n        //air = `${air} Optimal-Out: + ${parseInt((tempShellyOut - tempOptimal))}Â°C<br>`;\n    }\n}\n\nif(tempShellyIn == tempOptMin) {\n    //air = `${air} optimal<br>`;\n} else {\n    if(tempShellyIn < tempOptMin) {\n       // air = `${air} kÃ¤lter<br>`;\n    } else {\n        //air = `${air} wÃ¤rmer<br>`;\n    }\n}\n\n// SET VARIABLEN\nflow.set('air', air);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = air;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 520,
        "wires": [
            [
                "3531b5a878c3b77e"
            ]
        ]
    },
    {
        "id": "4482ec7cc37f503e",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Querys",
        "info": "",
        "x": 2150,
        "y": 480,
        "wires": []
    },
    {
        "id": "34d115291537db70",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "109d33547ff0a425",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Raumtemperatur",
        "label": "",
        "format": "Raumtemperatur",
        "layout": "row-right",
        "className": "",
        "x": 990,
        "y": 520,
        "wires": []
    },
    {
        "id": "d65c78d3549c2544",
        "type": "ui_button",
        "z": "57793960cf4cb040",
        "name": "",
        "group": "77910d3a38071c05",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "#333333",
        "bgcolor": "#f1f1f1",
        "className": "",
        "icon": "fa-refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1860,
        "y": 560,
        "wires": [
            [
                "89593913f94d8d50"
            ]
        ]
    },
    {
        "id": "408dad2a2665199f",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "heatFunction",
        "func": "// GET VARIABLEN\nlet heat = flow.get('heat') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempOptMin = flow.get('tempOptMin');\n\nif(tempShellyIn < tempOptMin) {\n    heat = `ON`;\n} else {\n    heat = `OFF`;\n}\n\n// SET VARIABLEN\nflow.set('heat', heat);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = heat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 780,
        "wires": [
            [
                "1f25efe46aa0c109"
            ]
        ]
    },
    {
        "id": "cfa922ca1860d291",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "coolFunction",
        "func": "// GET VARIABLEN\nlet cool = flow.get('cool') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempOptMax = flow.get('tempOptMax');\n\nif(tempShellyIn > tempOptMax) {\n    cool = `ON`;\n} else {\n    cool = `OFF`;\n}\n\n// SET VARIABLEN\nflow.set('cool', cool);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = cool;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 840,
        "wires": [
            [
                "b7e3eb092c8afd59"
            ]
        ]
    },
    {
        "id": "5dc196fdbc199c20",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View",
        "info": "",
        "x": 2590,
        "y": 440,
        "wires": []
    },
    {
        "id": "5b06a5ea4e174989",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View BÃ¼ro / Einstellungen",
        "info": "",
        "x": 1010,
        "y": 480,
        "wires": []
    },
    {
        "id": "a8e4edbe29e73d20",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "INIT",
        "info": "",
        "x": 1870,
        "y": 480,
        "wires": []
    },
    {
        "id": "f03b54235ba650a9",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Automatik",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2160,
        "y": 940,
        "wires": [
            [
                "d2889382e4e412bf"
            ]
        ]
    },
    {
        "id": "30f0cb5853e0e1bb",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "fanFunction",
        "func": "// GET VARIABLEN\nlet fan = flow.get('fan') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempOptimal = flow.get('tempOptimal');\n\nif(tempShellyIn > tempOptimal) {\n    fan = `ON`;\n} else {\n    fan = `OFF`;\n}\n\n// SET VARIABLEN\nflow.set('fan', fan);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = fan;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 720,
        "wires": [
            [
                "3d4d2bfb2f0e664c"
            ]
        ]
    },
    {
        "id": "3531b5a878c3b77e",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "9cbad506a0556217",
        "order": 3,
        "width": "6",
        "height": "2",
        "name": "Raumtemperatur",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2630,
        "y": 520,
        "wires": []
    },
    {
        "id": "d11d022fac665a72",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "AutomatikText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2620,
        "y": 940,
        "wires": []
    },
    {
        "id": "a76fb86be235ad64",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "109d33547ff0a425",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Luftfeuchtigkeit",
        "label": "",
        "format": "Luftfeuchtigkeit",
        "layout": "row-right",
        "className": "",
        "x": 780,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3531a585bb588f0b",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Optimal (min)",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "humOptMin",
        "topicType": "str",
        "format": "{{value}} %",
        "min": "10",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 940,
        "y": 1040,
        "wires": [
            [
                "02b3522635911736"
            ]
        ]
    },
    {
        "id": "553aa2f3be33a760",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Optimal (max)",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "humOptMax",
        "topicType": "str",
        "format": "{{value}} %",
        "min": "50",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 940,
        "y": 1100,
        "wires": [
            [
                "02b3522635911736"
            ]
        ]
    },
    {
        "id": "101a274e9ce108da",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "9cbad506a0556217",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Luftfeuchtigkeit HEAD",
        "label": "",
        "format": "Luftfeuchtigkeit",
        "layout": "row-spread",
        "className": "",
        "x": 2640,
        "y": 1000,
        "wires": []
    },
    {
        "id": "51ee03b0a43f28f3",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "9cbad506a0556217",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Raumtemperatur HEAD",
        "label": "",
        "format": "Raumtemperatur",
        "layout": "row-spread",
        "className": "",
        "x": 2650,
        "y": 480,
        "wires": []
    },
    {
        "id": "502867c52637f172",
        "type": "inject",
        "z": "57793960cf4cb040",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 970,
        "y": 940,
        "wires": [
            [
                "c52930d12bf43200",
                "77806b06bc1b722b",
                "0173eec5b2cb08a5"
            ]
        ]
    },
    {
        "id": "5009c86b8ab61be9",
        "type": "file",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/temp-opt.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1430,
        "y": 720,
        "wires": [
            [
                "89593913f94d8d50"
            ]
        ]
    },
    {
        "id": "89593913f94d8d50",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/temp-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 1670,
        "y": 720,
        "wires": [
            [
                "3d96d94b7bc78887"
            ]
        ]
    },
    {
        "id": "3d96d94b7bc78887",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 720,
        "wires": [
            [
                "b354eb74069e8659",
                "a441e577d61e9344",
                "ea3326085ff76cb9",
                "5074335dcb1b056b",
                "9a64495a9019bb8d",
                "30f0cb5853e0e1bb",
                "cfa922ca1860d291",
                "2239392598a8b639",
                "408dad2a2665199f"
            ]
        ]
    },
    {
        "id": "b354eb74069e8659",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMinSetMin",
        "func": "let tempOptMinSetMin = flow.get('tempOptMinSetMin') || 0;\nlet tempOptMin = flow.get('tempOptMin');\n\ntempOptMinSetMin = msg.payload.tempOptMin;\n\n// GET\nmsg.topic = `tempOptMinSetMin`;\nmsg = {ui_control:{min:tempOptMinSetMin},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 520,
        "wires": [
            [
                "3cdfce106b7593a1",
                "06faba20d2e7f5ab"
            ]
        ]
    },
    {
        "id": "c52930d12bf43200",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/temp-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 370,
        "y": 720,
        "wires": [
            [
                "9cb59bce5f9998f7"
            ]
        ]
    },
    {
        "id": "9cb59bce5f9998f7",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 720,
        "wires": [
            [
                "ac6e59ef3fdf1dec",
                "6eb47d415a008681",
                "9bd53567d0267263"
            ]
        ]
    },
    {
        "id": "ac6e59ef3fdf1dec",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMin",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin');\n\n// FUNKTION\ntempOptMin = msg.payload.tempOptMin.toString();\n\n// SET VARIABLEN\nflow.set('tempOptMin', tempOptMin);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempOptMin;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 620,
        "wires": [
            [
                "b9e27f0eb9265380"
            ]
        ]
    },
    {
        "id": "6eb47d415a008681",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptimal",
        "func": "// GET VARIABLEN\nlet tempOptimal = flow.get('tempOptimal');\n\n// FUNKTION\ntempOptimal = msg.payload.tempOptimal;\n\n// SET VARIABLEN\nflow.set('tempOptimal', tempOptimal);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempOptimal;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 720,
        "wires": [
            [
                "3cdfce106b7593a1"
            ]
        ]
    },
    {
        "id": "9bd53567d0267263",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMax",
        "func": "// GET VARIABLEN\nlet tempOptMax = flow.get('tempOptMax');\n\n// FUNKTION\ntempOptMax = msg.payload.tempOptMax;\n\n// SET VARIABLEN\nflow.set('tempOptMax', tempOptMax);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempOptMax;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 820,
        "wires": [
            [
                "06faba20d2e7f5ab"
            ]
        ]
    },
    {
        "id": "b9e27f0eb9265380",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "min",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}} Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 950,
        "y": 620,
        "wires": [
            [
                "207e8ff7f304f3db"
            ]
        ]
    },
    {
        "id": "3cdfce106b7593a1",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Optimal",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptimal",
        "topicType": "str",
        "format": "{{value}} Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 960,
        "y": 720,
        "wires": [
            [
                "207e8ff7f304f3db"
            ]
        ]
    },
    {
        "id": "06faba20d2e7f5ab",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "max",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}} Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 950,
        "y": 820,
        "wires": [
            [
                "207e8ff7f304f3db"
            ]
        ]
    },
    {
        "id": "207e8ff7f304f3db",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "jsonData",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin');\nlet tempOptimal = flow.get('tempOptimal');\nlet tempOptMax = flow.get('tempOptMax');\n\nlet topicMsg = msg.topic;\nlet payloadMsg = msg.payload;\n\nif(topicMsg == `tempOptMin`) {\n    tempOptMin = payloadMsg;\n    flow.set('tempOptMin', tempOptMin);\n}\nif(topicMsg == `tempOptimal`) {\n    tempOptimal = payloadMsg;\n    flow.set('tempOptimal', tempOptimal);\n}\nif(topicMsg == `tempOptMax`) {\n    tempOptMax = payloadMsg;\n    flow.set('tempOptMax', tempOptMax);\n}\n\nmsg.payload = { \n    \"tempOptMin\": tempOptMin,\n    \"tempOptimal\": tempOptimal,\n    \"tempOptMax\": tempOptMax\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 720,
        "wires": [
            [
                "5009c86b8ab61be9"
            ]
        ]
    },
    {
        "id": "dde444e2ce33e246",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "INIT",
        "info": "",
        "x": 110,
        "y": 680,
        "wires": []
    },
    {
        "id": "31be7d63b9089a7a",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "CHANGE",
        "info": "",
        "x": 960,
        "y": 580,
        "wires": []
    },
    {
        "id": "de41108948e78393",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "WRITE",
        "info": "",
        "x": 1390,
        "y": 680,
        "wires": []
    },
    {
        "id": "c418d7603a2de13f",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "READ",
        "info": "",
        "x": 330,
        "y": 680,
        "wires": []
    },
    {
        "id": "821315912e4723f3",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "GET",
        "info": "",
        "x": 550,
        "y": 680,
        "wires": []
    },
    {
        "id": "0997f4e035e8bbc3",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "SET",
        "info": "",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "a22b37fb9e0da153",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "READ",
        "info": "",
        "x": 1630,
        "y": 680,
        "wires": []
    },
    {
        "id": "4843e97074090fa6",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "GET",
        "info": "",
        "x": 1870,
        "y": 680,
        "wires": []
    },
    {
        "id": "a441e577d61e9344",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMaxSetMax",
        "func": "let tempOptMaxSetMax = flow.get('tempOptMaxSetMax') || 0;\nlet tempOptMax = flow.get('tempOptMax');\n\ntempOptMaxSetMax = msg.payload.tempOptMax;\n\n// GET\nmsg.topic = `tempOptMinSetMax`;\nmsg = {ui_control:{max:tempOptMaxSetMax},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 520,
        "wires": [
            [
                "b9e27f0eb9265380",
                "3cdfce106b7593a1"
            ]
        ]
    },
    {
        "id": "ea3326085ff76cb9",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptimalSetMax",
        "func": "let tempOptimalSetMax = flow.get('tempOptimalSetMax') || 0;\nlet tempOptimal = flow.get('tempOptimal');\n\ntempOptimalSetMax = msg.payload.tempOptimal;\n\n// GET\nmsg.topic = `tempOptimalSetMax`;\nmsg = {ui_control:{max:tempOptimalSetMax},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 880,
        "wires": [
            [
                "b9e27f0eb9265380"
            ]
        ]
    },
    {
        "id": "5074335dcb1b056b",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptimalSetMin",
        "func": "let tempOptimalSetMin = flow.get('tempOptimalSetMin') || 0;\nlet tempOptimal = flow.get('tempOptimal');\n\ntempOptimalSetMin = msg.payload.tempOptimal;\n\n// GET\nmsg.topic = `tempOptimalSetMin`;\nmsg = {ui_control:{min:tempOptimalSetMin},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 880,
        "wires": [
            [
                "06faba20d2e7f5ab"
            ]
        ]
    },
    {
        "id": "5893fa80a86d8997",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "MinMax Values",
        "info": "",
        "x": 1240,
        "y": 480,
        "wires": []
    },
    {
        "id": "2239392598a8b639",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "windowFunction",
        "func": "// GET VARIABLEN\nlet window = flow.get('window') || \"close\";\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempShellyOut = flow.get('tempShellyOut');\nlet tempOptimal = flow.get('tempOptimal');\nlet tempOptMax = flow.get('tempOptMax');\n\nlet humidityShellyIn = flow.get('humidityShellyIn');\nlet humidityShellyOut = flow.get('humidityShellyOut');\nlet humOptMin = flow.get('humOptMin');\nlet humOptMax = flow.get('humOptMax');\n\nlet auto = flow.get('auto');\n\nif((tempShellyIn > tempOptimal && tempShellyOut < tempShellyIn) || (humidityShellyIn <= humOptMin && humidityShellyOut > humidityShellyIn)) {\n    window = `OPEN`;\n} else {\n    window = `CLOSE`;\n}\n\n// SET VARIABLEN\nflow.set('window', window);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 660,
        "wires": [
            [
                "ad88d90edccb7cc9"
            ]
        ]
    },
    {
        "id": "2d04652077f7ad55",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "MinMax Values",
        "info": "",
        "x": 1240,
        "y": 920,
        "wires": []
    },
    {
        "id": "80621926fa77eb86",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "floatGet",
        "info": "",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "fba15539e262637f",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "floatGet",
        "info": "",
        "x": 730,
        "y": 580,
        "wires": []
    },
    {
        "id": "ad88d90edccb7cc9",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Window",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "OPEN",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "CLOSE",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2420,
        "y": 660,
        "wires": [
            [
                "1aa621ce7c1dc16e"
            ]
        ]
    },
    {
        "id": "1aa621ce7c1dc16e",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "WindowText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2610,
        "y": 660,
        "wires": []
    },
    {
        "id": "3d4d2bfb2f0e664c",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "FAN",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2410,
        "y": 720,
        "wires": [
            [
                "fec63e0a68230078"
            ]
        ]
    },
    {
        "id": "fec63e0a68230078",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "FanText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2600,
        "y": 720,
        "wires": []
    },
    {
        "id": "b7e3eb092c8afd59",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "COOL",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2410,
        "y": 840,
        "wires": [
            [
                "a0485724e00c16a5"
            ]
        ]
    },
    {
        "id": "a0485724e00c16a5",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "CoolText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2600,
        "y": 840,
        "wires": []
    },
    {
        "id": "1f25efe46aa0c109",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "HEAT",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2410,
        "y": 780,
        "wires": [
            [
                "af332d37cddac6f3"
            ]
        ]
    },
    {
        "id": "af332d37cddac6f3",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "HeatText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2600,
        "y": 780,
        "wires": []
    },
    {
        "id": "d38d20c4e5e09d1c",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "CHANGE",
        "info": "",
        "x": 2420,
        "y": 620,
        "wires": []
    },
    {
        "id": "7579cd212cbb0811",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View BÃ¼ro / Aktion",
        "info": "",
        "x": 2630,
        "y": 620,
        "wires": []
    },
    {
        "id": "77806b06bc1b722b",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "b93a1930e0971425"
            ]
        ]
    },
    {
        "id": "b93a1930e0971425",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 1080,
        "wires": [
            [
                "9497d84bc3bac2bd",
                "28e73ea122524dc7"
            ]
        ]
    },
    {
        "id": "9497d84bc3bac2bd",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptMin",
        "func": "// GET VARIABLEN\nlet humOptMin = flow.get('humOptMin');\n\n// FUNKTION\nhumOptMin = msg.payload.humOptMin;\n\n// SET VARIABLEN\nflow.set('humOptMin', humOptMin);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humOptMin;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1040,
        "wires": [
            [
                "3531a585bb588f0b"
            ]
        ]
    },
    {
        "id": "28e73ea122524dc7",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptMin",
        "func": "// GET VARIABLEN\nlet humOptMin = flow.get('humOptMax');\n\n// FUNKTION\nhumOptMax = msg.payload.humOptMax;\n\n// SET VARIABLEN\nflow.set('humOptMax', humOptMax);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humOptMax;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1100,
        "wires": [
            [
                "553aa2f3be33a760"
            ]
        ]
    },
    {
        "id": "fb52bbc5f5fb095e",
        "type": "inject",
        "z": "57793960cf4cb040",
        "name": "Install",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1360,
        "wires": [
            [
                "b5eb7268d92372c9"
            ]
        ]
    },
    {
        "id": "b5eb7268d92372c9",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "jsonData",
        "func": "// GET VARIABLEN\nlet humOptMin = 40;\nlet humOptMax = 60;\n\nmsg.payload = { \n    \"humOptMin\": humOptMin,\n    \"humOptMax\": humOptMax\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1360,
        "wires": [
            [
                "437246e113845d99",
                "f0d01e10c4e02922"
            ]
        ]
    },
    {
        "id": "437246e113845d99",
        "type": "file",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "7d9b403af118e35c",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "SET",
        "info": "",
        "x": 1170,
        "y": 1040,
        "wires": []
    },
    {
        "id": "02b3522635911736",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "jsonData",
        "func": "// GET VARIABLEN\nlet humOptMin = flow.get('humOptMin');\nlet humOptMax = flow.get('humOptMax');\n\nlet topicMsg = msg.topic;\nlet payloadMsg = msg.payload;\n\nif(topicMsg == `humOptMin`) {\n    humOptMin = payloadMsg;\n    flow.set('humOptMin', humOptMin);\n}\nif(topicMsg == `humOptMax`) {\n    humOptMax = payloadMsg;\n    flow.set('humOptMax', humOptMax);\n}\n\nmsg.payload = { \n    \"humpOptMin\": humOptMin, \n    \"humOptMax\": humOptMax\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1080,
        "wires": [
            [
                "fafaa8146d9b9160"
            ]
        ]
    },
    {
        "id": "d866291ec8c0c78c",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "WRITE",
        "info": "",
        "x": 1390,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fafaa8146d9b9160",
        "type": "file",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1430,
        "y": 1080,
        "wires": [
            [
                "d25966aceca4dabe"
            ]
        ]
    },
    {
        "id": "af11184a9c85db2a",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "READ",
        "info": "",
        "x": 1630,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d25966aceca4dabe",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 1670,
        "y": 1080,
        "wires": [
            [
                "d35f4b5ee96401ee"
            ]
        ]
    },
    {
        "id": "d35f4b5ee96401ee",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 1080,
        "wires": [
            [
                "189859288271d759",
                "285e215e4b66f23e"
            ]
        ]
    },
    {
        "id": "b0042c57d41b3ee1",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "GET",
        "info": "",
        "x": 1870,
        "y": 1040,
        "wires": []
    },
    {
        "id": "189859288271d759",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptSetMin",
        "func": "let humOptSetMin = flow.get('humOptSetMin') || 0;\n\nhumOptSetMin = msg.payload.humpOptMin;\n\n// GET\nmsg.topic = `humOptSetMin`;\nmsg = {ui_control:{min:humOptSetMin},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 1180,
        "wires": [
            [
                "553aa2f3be33a760"
            ]
        ]
    },
    {
        "id": "f0d01e10c4e02922",
        "type": "debug",
        "z": "57793960cf4cb040",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1500,
        "wires": []
    },
    {
        "id": "285e215e4b66f23e",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptSetMax",
        "func": "let humOptSetMax = flow.get('humOptSetMax') || 0;\n\nhumOptSetMax = msg.payload.humOptMax;\n\n// GET\nmsg.topic = `humOptSetMax`;\nmsg = {ui_control:{max:humOptSetMax},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 1240,
        "wires": [
            [
                "3531a585bb588f0b"
            ]
        ]
    },
    {
        "id": "d2889382e4e412bf",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "",
        "func": "let auto = flow.get('auto') || \"ON\";\n\nauto = msg.payload;\n\n// SET VARIABLEN\nflow.set('auto', auto);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = auto;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 940,
        "wires": [
            [
                "d11d022fac665a72"
            ]
        ]
    },
    {
        "id": "0173eec5b2cb08a5",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "",
        "func": "let auto = flow.get('auto') || \"ON\";\n\nauto = msg.payload;\n\n// SET VARIABLEN\nflow.set('auto', auto);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = auto;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 940,
        "wires": [
            [
                "f03b54235ba650a9"
            ]
        ]
    },
    {
        "id": "e499c1809c02b4ef",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "f313c8705833350a",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "Shelly H&T:39 Outdoor",
        "layout": "row-spread",
        "className": "highlight",
        "x": 1090,
        "y": 220,
        "wires": []
    },
    {
        "id": "da9233d9bf4e959d",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "60 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1590,
        "y": 1220,
        "wires": [
            [
                "caaf2e59f24610e5",
                "ca13951db7e9d464",
                "d909af704fafeb3e",
                "83b22c960a55c55c"
            ]
        ]
    },
    {
        "id": "9d7ea4fa13613473",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 1080,
        "wires": []
    },
    {
        "id": "caaf2e59f24610e5",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "compare_temp",
        "func": "let ow_current_temp = global.get('ow_current_temp') || 0;\nlet yr_current_temp = global.get('yr_current_temp') || 0;\nlet ht_current_temp = global.get('ht_current_temp') || 0;\nlet wb_current_temp = global.get('wb_current_temp') || 0;\nlet wa_current_temp = global.get('wa_current_temp') || 0;\nlet ws_current_temp = global.get('ws_current_temp') || 0;\n\nlet ht_temp = context.get('ht_temp') || 0.00;\nht_temp = JSON.parse(ht_current_temp).ht_temp;\n\nlet ow_temp = context.get('ow_temp') || 0.00;\now_temp = JSON.parse(ow_current_temp).ow_temp;\n\nlet yr_temp = context.get('yr_temp') || 0.00;\nyr_temp = JSON.parse(yr_current_temp).yr_temp;\n\nlet wb_temp = context.get('wb_temp') || 0.00;\nwb_temp = JSON.parse(wb_current_temp).wb_temp;\n\nlet wa_temp = context.get('wa_temp') || 0.00;\nwa_temp = JSON.parse(wa_current_temp).wa_temp;\n\nlet ws_temp = context.get('ws_temp') || 0.00;\nws_temp = JSON.parse(ws_current_temp).ws_temp;\n\nlet sum_temp = flow.get('sum_temp') || 0.00;\n\nlet sum_diff_ow = 0.00;\nlet sum_diff_yr = 0.00;\nlet sum_diff_wb = 0.00;\n\nif(ht_temp < ow_temp) {\n    sum_diff_ow = parseFloat(ow_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_ow = parseFloat(ht_temp) - parseFloat(ow_temp);\n}\nsum_diff_ow = sum_diff_ow.toFixed(2);\n\nif(ht_temp < yr_temp) {\n    sum_diff_yr = parseFloat(yr_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_yr = parseFloat(ht_temp) - parseFloat(yr_temp);\n}\nsum_diff_yr = sum_diff_yr.toFixed(2);\n\nif(ht_temp < wb_temp) {\n    sum_diff_wb = parseFloat(wb_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_wb = parseFloat(ht_temp) - parseFloat(wb_temp);\n}\nsum_diff_wb = sum_diff_wb.toFixed(2);\n\n//let compare_array = [\"qw\", \"yr\", \"wb\", \"wa\", \"ws\"];\n//let compare_array = [[`${sum_diff_ow}`: `ow`], [`${sum_diff_yr}`: `yr`], [`${sum_diff_wb}`: `wb`]];\nlet compare_array = [`${sum_diff_ow}`, `${sum_diff_yr}`, `${sum_diff_wb}`];\ncompare_array.sort();\n\nlet best_temp = compare_array[0];\n\n\nfor(const array of compare_array) {\n    \n}\n\nlet result = `Gleich`;\n\nif(sum_diff_ow > sum_diff_yr) {\n    result = `YR is better @temperature`;\n} else {\n    result = `OW is better @temperature`;\n}\n\nsum_temp = result;\n\n// SET VARIABLEN\nflow.set('sum_temp', sum_temp);\n\nmsg.payload = compare_array;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1160,
        "wires": [
            [
                "04b1bfa40160fbdb",
                "055bef0700c31b58"
            ]
        ]
    },
    {
        "id": "ca13951db7e9d464",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "yr_current_temp",
        "func": "let yr_current_temp = global.get('yr_current_temp') || 0;\nmsg.payload = yr_current_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1260,
        "wires": [
            [
                "9e8635dee0212362"
            ]
        ]
    },
    {
        "id": "9e8635dee0212362",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 1260,
        "wires": []
    },
    {
        "id": "04b1bfa40160fbdb",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "9cbad506a0556217",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "ow_current_temp",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2030,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d909af704fafeb3e",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ht_current_temp",
        "func": "let ht_current_temp = global.get('ht_current_temp') || 0;\nmsg.payload = ht_current_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1320,
        "wires": [
            [
                "123517904650a311"
            ]
        ]
    },
    {
        "id": "123517904650a311",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 1340,
        "wires": []
    },
    {
        "id": "055bef0700c31b58",
        "type": "file",
        "z": "1d4f578bef439a70",
        "name": "",
        "filename": "data/better",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2030,
        "y": 1080,
        "wires": [
            [
                "9d7ea4fa13613473"
            ]
        ]
    },
    {
        "id": "53b00ceaaf63d0fa",
        "type": "file",
        "z": "1d4f578bef439a70",
        "name": "",
        "filename": "data/better",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1770,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "7736859d99157187",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "clear",
        "payloadType": "str",
        "x": 1570,
        "y": 1520,
        "wires": [
            [
                "53b00ceaaf63d0fa"
            ]
        ]
    },
    {
        "id": "83b22c960a55c55c",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "compare_humidity",
        "func": "let ow_current_humidity = global.get('ow_current_humidity') || 0;\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\nlet ws_current_humidity = global.get('ws_current_humidity') || 0;\n\n\n\nlet ht_humidity = context.get('ht_humidity') || 0.00;\nht_humidity = JSON.parse(ht_current_humidity).ht_humidity;\n\nlet ow_humidity = context.get('ow_humidity') || 0.00;\now_humidity = JSON.parse(ow_current_humidity).ow_humidity;\n\nlet yr_humidity = context.get('yr_humidity') || 0.00;\nyr_humidity = JSON.parse(yr_current_humidity).yr_humidity;\n\nlet sum_humidity = flow.get('sum_humidity') || 0.00;\n\nlet sum_diff_ow = 0.00;\nlet sum_diff_yr = 0.00;\n\nif(ht_humidity < ow_humidity) {\n    sum_diff_ow = parseFloat(ow_humidity) - parseFloat(ht_humidity);\n    sum_diff_ow = sum_diff_ow.toFixed(2);\n} else {\n    sum_diff_ow = parseFloat(ht_humidity) - parseFloat(ow_humidity);\n    sum_diff_ow = sum_diff_ow.toFixed(2);\n}\n\nif(ht_humidity < yr_humidity) {\n    sum_diff_yr = parseFloat(yr_humidity) - parseFloat(ht_humidity);\n    sum_diff_yr = sum_diff_ow.toFixed(2);\n} else {\n    sum_diff_yr = parseFloat(ht_humidity) - parseFloat(yr_humidity);\n    sum_diff_yr = sum_diff_yr.toFixed(2);\n}\n\nlet result = `Gleich`;\n\nif(sum_diff_ow > sum_diff_yr) {\n    result = `YR is better @humidity`;\n} else {\n    result = `OW is better @humidity`;\n}\n\nsum_humidity = result;\n\n// SET VARIABLEN\nflow.set('sum_humidity', sum_humidity);\n\nmsg.payload = sum_humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1811,
        "y": 1053,
        "wires": [
            [
                "332febf949cefb51",
                "055bef0700c31b58"
            ]
        ]
    },
    {
        "id": "332febf949cefb51",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2c00ea89b8b821c3",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "compare_temp",
        "func": "let ow_current_temp = global.get('ow_current_temp') || 0;\nlet yr_current_temp = global.get('yr_current_temp') || 0;\nlet ht_current_temp = global.get('ht_current_temp') || 0;\nlet wb_current_temp = global.get('wb_current_temp') || 0;\nlet wa_current_temp = global.get('wa_current_temp') || 0;\nlet ws_current_temp = global.get('ws_current_temp') || 0;\n\nlet ht_temp = context.get('ht_temp') || 0.00;\nht_temp = JSON.parse(ht_current_temp).ht_temp;\n\nlet ow_temp = context.get('ow_temp') || 0.00;\now_temp = JSON.parse(ow_current_temp).ow_temp;\n\nlet yr_temp = context.get('yr_temp') || 0.00;\nyr_temp = JSON.parse(yr_current_temp).yr_temp;\n\nlet wb_temp = context.get('wb_temp') || 0.00;\nwb_temp = JSON.parse(wb_current_temp).wb_temp;\n\nlet wa_temp = context.get('wa_temp') || 0.00;\nwa_temp = JSON.parse(wa_current_temp).wa_temp;\n\nlet ws_temp = context.get('ws_temp') || 0.00;\nws_temp = JSON.parse(ws_current_temp).ws_temp;\n\nlet sum_temp = flow.get('sum_temp') || 0.00;\n\nlet sum_diff_ow = 0.00;\nlet sum_diff_yr = 0.00;\nlet sum_diff_wb = 0.00;\nlet sum_diff_wa = 0.00;\nlet sum_diff_ws = 0.00;\n\nlet sql = \"\";\n\n//\n// DIFFERENZ\n//\n\n// OW\nif(ht_temp < ow_temp) {\n    sum_diff_ow = parseFloat(ow_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_ow = parseFloat(ht_temp) - parseFloat(ow_temp);\n}\nsum_diff_ow = sum_diff_ow.toFixed(2);\n//sql = \"INSERT INTO `compare` (`fk_offerer`, temp`) VALUE (`2`, \" + sum_diff_ow + \"`)\";\n\n// YR\nif(ht_temp < yr_temp) {\n    sum_diff_yr = parseFloat(yr_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_yr = parseFloat(ht_temp) - parseFloat(yr_temp);\n}\nsum_diff_yr = sum_diff_yr.toFixed(2);\n//sql = \"INSERT INTO `compare` (`fk_offerer`, temp`) VALUE (`1`, \" + sum_diff_yr + \"`)\";\n\n// WB\nif(ht_temp < wb_temp) {\n    sum_diff_wb = parseFloat(wb_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_wb = parseFloat(ht_temp) - parseFloat(wb_temp);\n}\nsum_diff_wb = sum_diff_wb.toFixed(2);\n\n\n// WA\nif(ht_temp < wa_temp) {\n    sum_diff_wa = parseFloat(wa_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_wa = parseFloat(ht_temp) - parseFloat(wa_temp);\n}\nsum_diff_wa = sum_diff_wa.toFixed(2);\n\n// WS\ndiff(ht_temp, ws_temp);\nif(ht_temp < ws_temp) {\n    sum_diff_ws = parseFloat(ws_temp) - parseFloat(ht_temp);\n} else {\n    sum_diff_ws = parseFloat(ht_temp) - parseFloat(ws_temp);\n}\nsum_diff_ws = sum_diff_ws.toFixed(2);\n\nfunction diff(ht_temp, e_temp) {\n    let sum_diff = 0.00;\n    if(ht_temp < e_temp) {\n        sum_diff = parseFloat(e_temp) - parseFloat(ht_temp);\n    } else {\n        sum_diff = parseFloat(ht_temp) - parseFloat(e_temp);\n    }\n    sum_diff = sum_diff.toFixed(2);\n    \n    return sum_diff;\n}\n\nlet compare_array = [`${sum_diff_ow}:ow`, `${sum_diff_yr}:yr`, `${sum_diff_wb}:wb`, `${sum_diff_wa}:wa`]; // , `${sum_diff_ws}:ws`\ncompare_array.sort();\n\ncompare_json = JSON.stringify(compare_array);\n\nlet best_temp = compare_array[0];\n\nlet best_view = ``;\n\nfor(const item of compare_array) {\n    //let sql = \"INSERT INTO `compare` (``) VALUE ()\";\n    best_view = `${best_view} ${item}<br>`\n}\n\nlet result = `Gleich`;\n\nif(sum_diff_ow > sum_diff_yr) {\n    result = `YR is better @temperature`;\n} else {\n    result = `OW is better @temperature`;\n}\n\nsum_temp = result;\n\n// SET VARIABLEN\nflow.set('sum_temp', sum_temp);\n\nmsg.payload = best_view;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 420,
        "wires": [
            [
                "d51a4b9c09cabdaf",
                "7bc03fb5756079ee"
            ]
        ]
    },
    {
        "id": "d51a4b9c09cabdaf",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 380,
        "wires": []
    },
    {
        "id": "7bc03fb5756079ee",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 9,
        "width": 6,
        "height": 2,
        "name": "compare",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1320,
        "y": 420,
        "wires": []
    },
    {
        "id": "a2929aa3bfaa77b5",
        "type": "cronplus",
        "z": "1d4f578bef439a70",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 5 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 420,
        "wires": [
            [
                "4b58273a5fd13622",
                "160bc2c253e330da",
                "2acf2cb380509aa0",
                "272e0c826330d7ad",
                "93d646275d131c50"
            ]
        ]
    },
    {
        "id": "a1ce1c5da22fa799",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 690,
        "y": 320,
        "wires": [
            [
                "433d18d1385be86f"
            ]
        ]
    },
    {
        "id": "1575ecc850d22e82",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "getSQL Query",
        "func": "msg.topic = \"SELECT co.id, co.temp, co.humi, co.wann, of.oname FROM `compare` AS `co` JOIN `offerer` AS `of` ON co.fk_offerer = of.id ORDER BY co.wann desc LIMIT 0, 5\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 140,
        "wires": [
            [
                "c04a2b38cefc8ce8"
            ]
        ]
    },
    {
        "id": "8023677ba3cc0c1a",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "SELECT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT",
        "payload": "",
        "payloadType": "date",
        "x": 1320,
        "y": 300,
        "wires": [
            [
                "0820cc5c91585b59"
            ]
        ]
    },
    {
        "id": "433d18d1385be86f",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 320,
        "wires": []
    },
    {
        "id": "0820cc5c91585b59",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "getSQL OffererName",
        "func": "msg.topic = \"SELECT of.oname, of.id FROM `compare` AS `co` JOIN `offerer` AS `of` ON co.fk_offerer = of.id\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 300,
        "wires": [
            [
                "74419285bf30eeb3"
            ]
        ]
    },
    {
        "id": "160bc2c253e330da",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "compare_yr",
        "func": "let ht_current_temp = global.get('ht_current_temp') || 0;\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\n\nlet yr_current_temp = global.get('yr_current_temp') || 0;\nlet yr_current_hum = global.get('yr_current_hum') || 0;\n\n// H&T \nlet ht_temp = context.get('ht_temp') || 0.00;\nht_temp = JSON.parse(ht_current_temp).ht_temp;\n\nlet ht_hum = context.get('ht_hum') || 0.00;\nht_hum = JSON.parse(ht_current_humidity).ht_humidity;\n\n\n// YR\nlet yr_temp = context.get('yr_temp') || 0.00;\nyr_temp = JSON.parse(yr_current_temp).yr_temp;\n\nlet yr_hum = context.get('yr_hum') || 0.00;\nyr_hum = JSON.parse(yr_current_hum).yr_hum;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'err';\nlet hum = 'err';\n\n// TEMP\nif(ht_temp == yr_temp) {\n    temp = 'opt';\n} else if(ht_temp < yr_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(yr_temp) - parseFloat(ht_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(ht_temp) - parseFloat(yr_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(ht_hum == yr_hum) {\n    hum = 'opt';\n} else if(ht_hum < yr_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(yr_hum) - parseFloat(ht_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(ht_hum) - parseFloat(yr_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare` (`fk_offerer`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('1', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "7ab7db44b6ddb470",
                "a1ce1c5da22fa799"
            ]
        ]
    },
    {
        "id": "acb3198dedd3783b",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "57316acf0db89fb6",
        "order": 1,
        "width": "6",
        "height": "12",
        "name": "Hello ",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1330,
        "y": 140,
        "wires": []
    },
    {
        "id": "e1de6f0e840f98d2",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "1575ecc850d22e82"
            ]
        ]
    },
    {
        "id": "04745591f40f1168",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 80,
        "wires": []
    },
    {
        "id": "1fa51fa7edb685a3",
        "type": "json",
        "z": "1d4f578bef439a70",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 950,
        "y": 140,
        "wires": [
            [
                "65fcdc6df28b582b",
                "ac18cd73c3619f43"
            ]
        ]
    },
    {
        "id": "65fcdc6df28b582b",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 80,
        "wires": []
    },
    {
        "id": "ac18cd73c3619f43",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\nlet limit = 10;\n\nfor(let i=0; i < list.length && i < limit; i++) {\n    content = `${content} ${list[i].oname} `;\n    content = `${content} ${list[i].temp}Â°C `;\n    content = `${content} ${list[i].humi}%<br>`;\n    content = `${content} ${list[i].wann}<br><br>`;\n    content = `${content}<br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 140,
        "wires": [
            [
                "cc07d441c671b26e",
                "acb3198dedd3783b"
            ]
        ]
    },
    {
        "id": "cc07d441c671b26e",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 80,
        "wires": []
    },
    {
        "id": "2ad49ab9068f7ee5",
        "type": "ui_button",
        "z": "1d4f578bef439a70",
        "name": "",
        "group": "57316acf0db89fb6",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "REFRESH",
        "tooltip": "",
        "color": "#333333",
        "bgcolor": "#f1f1f1",
        "className": "",
        "icon": "fa-refresh",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "1575ecc850d22e82"
            ]
        ]
    },
    {
        "id": "4b58273a5fd13622",
        "type": "mqtt out",
        "z": "1d4f578bef439a70",
        "name": "",
        "topic": "/data/cron/compare",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 470,
        "y": 420,
        "wires": []
    },
    {
        "id": "c04a2b38cefc8ce8",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 690,
        "y": 140,
        "wires": [
            [
                "04745591f40f1168",
                "1fa51fa7edb685a3"
            ]
        ]
    },
    {
        "id": "2acf2cb380509aa0",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "compare_wb",
        "func": "let ht_current_temp = global.get('ht_current_temp') || 0;\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\n\nlet wb_current_temp = global.get('wb_current_temp') || 0;\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\n\n// H&T \nlet ht_temp = context.get('ht_temp') || 0.00;\nht_temp = JSON.parse(ht_current_temp).ht_temp;\n\nlet ht_hum = context.get('ht_hum') || 0.00;\nht_hum = JSON.parse(ht_current_humidity).ht_humidity;\n\n// WB\nlet wb_temp = context.get('wb_temp') || 0.00;\nwb_temp = JSON.parse(wb_current_temp).wb_temp;\n\nlet wb_hum = context.get('wb_hum') || 0.00;\nwb_hum = JSON.parse(wb_current_humidity).wb_hum;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(ht_temp < wb_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(wb_temp) - parseFloat(ht_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(ht_temp) - parseFloat(wb_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(ht_hum < wb_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(wb_hum) - parseFloat(ht_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(ht_hum) - parseFloat(wb_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nmsg.payload = wb_current_humidity;\n\nlet sql = \"INSERT INTO `compare` (`fk_offerer`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('3', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "a1ce1c5da22fa799"
            ]
        ]
    },
    {
        "id": "74419285bf30eeb3",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 1730,
        "y": 300,
        "wires": [
            [
                "e53bba7a070a307b"
            ]
        ]
    },
    {
        "id": "e53bba7a070a307b",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 300,
        "wires": []
    },
    {
        "id": "820b0bef76ec5b7a",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "new Date",
        "func": "// GET VARIABLEN\nlet fct = flow.get('fct') || 0;\n\n// FUNKTION\nfunction fctDate() {\n    const date = new Date();\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n}\n\n// SET VARIABLEN\nflow.set('fct', fct);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = fct;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1319.8958740234375,
        "y": 227.88888549804688,
        "wires": [
            []
        ]
    },
    {
        "id": "fae9f079a2b8d368",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "Data from YR",
        "func": "msg.topic = \"SELECT co.temp, co.humi FROM `offerer` AS `of` JOIN `compare` AS `co` ON co.fk_offerer = of.id WHERE of.id = '1'\";\nmsg.payload = `yr`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 600,
        "wires": [
            [
                "cc1f9e91fb15704d"
            ]
        ]
    },
    {
        "id": "cc1f9e91fb15704d",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 690,
        "y": 600,
        "wires": [
            [
                "e5735c253215580a"
            ]
        ]
    },
    {
        "id": "6778413ff7d0347b",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "SELECT",
        "info": "",
        "x": 440,
        "y": 560,
        "wires": []
    },
    {
        "id": "0986faabdd1757f1",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "INSERT",
        "info": "",
        "x": 440,
        "y": 220,
        "wires": []
    },
    {
        "id": "e5735c253215580a",
        "type": "json",
        "z": "1d4f578bef439a70",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 850,
        "y": 600,
        "wires": [
            [
                "f1ae7b919f0199f3",
                "8c6943e466803077"
            ]
        ]
    },
    {
        "id": "f1ae7b919f0199f3",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_temp",
        "func": "let list = msg.payload;\nlet sum_temp = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_temp = sum_temp + list[i].temp;\n}\n\nmsg.payload = sum_temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 600,
        "wires": [
            [
                "eb632af350b3479f"
            ]
        ]
    },
    {
        "id": "eb632af350b3479f",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "yr Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 600,
        "wires": []
    },
    {
        "id": "d50d8d8b4c320df8",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "Data from OW",
        "func": "msg.topic = \"SELECT co.temp, co.humi FROM `offerer` AS `of` JOIN `compare` AS `co` ON co.fk_offerer = of.id WHERE of.id = '2'\";\nmsg.payload = `ow`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 740,
        "wires": [
            [
                "11b3a89c2ade0cf6"
            ]
        ]
    },
    {
        "id": "11b3a89c2ade0cf6",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 690,
        "y": 740,
        "wires": [
            [
                "786814dc7316b7d0"
            ]
        ]
    },
    {
        "id": "786814dc7316b7d0",
        "type": "json",
        "z": "1d4f578bef439a70",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 850,
        "y": 740,
        "wires": [
            [
                "d360d58dcc6067b1",
                "1a594964e8c9190c"
            ]
        ]
    },
    {
        "id": "d360d58dcc6067b1",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_temp",
        "func": "let list = msg.payload;\nlet sum_temp = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_temp = sum_temp + list[i].temp;\n}\n\nmsg.payload = sum_temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 740,
        "wires": [
            [
                "ab79c01a40212049"
            ]
        ]
    },
    {
        "id": "ab79c01a40212049",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "ow Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 740,
        "wires": []
    },
    {
        "id": "ce663d490a9d53e2",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "Data from WB",
        "func": "msg.topic = \"SELECT co.temp, co.humi FROM `offerer` AS `of` JOIN `compare` AS `co` ON co.fk_offerer = of.id WHERE of.id = '3'\";\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 880,
        "wires": [
            [
                "d9f357fad6cf14c4"
            ]
        ]
    },
    {
        "id": "d9f357fad6cf14c4",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 690,
        "y": 880,
        "wires": [
            [
                "2dd56b7adb3baf65"
            ]
        ]
    },
    {
        "id": "2dd56b7adb3baf65",
        "type": "json",
        "z": "1d4f578bef439a70",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 850,
        "y": 880,
        "wires": [
            [
                "0e1d682b7076b4a2",
                "930f75dff6478e42"
            ]
        ]
    },
    {
        "id": "0e1d682b7076b4a2",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_temp",
        "func": "let list = msg.payload;\nlet sum_temp = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_temp = sum_temp + list[i].temp;\n}\n\nmsg.payload = sum_temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 880,
        "wires": [
            [
                "a314c034f6f9530b"
            ]
        ]
    },
    {
        "id": "a314c034f6f9530b",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "wb Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 880,
        "wires": []
    },
    {
        "id": "a8efc2ec3377f365",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "Data from Wa",
        "func": "msg.topic = \"SELECT co.temp, co.humi FROM `offerer` AS `of` JOIN `compare` AS `co` ON co.fk_offerer = of.id WHERE of.id = '4'\";\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "3e836ec43fbdd070"
            ]
        ]
    },
    {
        "id": "3e836ec43fbdd070",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 690,
        "y": 1020,
        "wires": [
            [
                "62203e5de6dcba2a"
            ]
        ]
    },
    {
        "id": "62203e5de6dcba2a",
        "type": "json",
        "z": "1d4f578bef439a70",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "f478aea88e481551",
                "fcdd78f0590b49f5"
            ]
        ]
    },
    {
        "id": "f478aea88e481551",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_temp",
        "func": "let list = msg.payload;\nlet sum_temp = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_temp = sum_temp + list[i].temp;\n}\n\nmsg.payload = sum_temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1020,
        "wires": [
            [
                "8b9d90a70baeebf7"
            ]
        ]
    },
    {
        "id": "8b9d90a70baeebf7",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "wa Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 1020,
        "wires": []
    },
    {
        "id": "cea68ce5a6412d33",
        "type": "cronplus",
        "z": "1d4f578bef439a70",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 7 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 1240,
        "wires": [
            [
                "fae9f079a2b8d368",
                "d50d8d8b4c320df8",
                "ce663d490a9d53e2",
                "a8efc2ec3377f365",
                "1571e5fdf7683fda",
                "e0614b0248e5e899",
                "f9c480d7379e0a5d",
                "2eb1ffff38d0ae5d",
                "56ef8f49d0ddb582",
                "7b2d5ded0cde0274",
                "34b081fe11537ffe",
                "cc3e06f39e9a97c1",
                "cd0d8a10616b7292",
                "18a35be8bdf41f13",
                "82363997206438b5",
                "b89c8fa23d693692"
            ]
        ]
    },
    {
        "id": "778cf9d1db7aa2b7",
        "type": "cronplus",
        "z": "1d4f578bef439a70",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 8 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 920,
        "y": 420,
        "wires": [
            [
                "2c00ea89b8b821c3"
            ]
        ]
    },
    {
        "id": "100f0a61ae452994",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "SELECT",
        "info": "",
        "x": 440,
        "y": 100,
        "wires": []
    },
    {
        "id": "7ab7db44b6ddb470",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 260,
        "wires": []
    },
    {
        "id": "314ec4e220e74bf2",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "160bc2c253e330da"
            ]
        ]
    },
    {
        "id": "bc7b16974b084c0c",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2040,
        "wires": [
            [
                "2eb1ffff38d0ae5d"
            ]
        ]
    },
    {
        "id": "7cfb4eaa0fc211ab",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "GLOBAL",
        "info": "",
        "x": 1800,
        "y": 980,
        "wires": []
    },
    {
        "id": "272e0c826330d7ad",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "compare_ow",
        "func": "let ht_current_temp = global.get('ht_current_temp') || 0;\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\n\nlet ow_current_temp = global.get('ow_current_temp') || 0;\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// H&T \nlet ht_temp = context.get('ht_temp') || 0.00;\nht_temp = JSON.parse(ht_current_temp).ht_temp;\n\nlet ht_hum = context.get('ht_hum') || 0.00;\nht_hum = JSON.parse(ht_current_humidity).ht_humidity;\n\n// OW\nlet ow_temp = context.get('ow_temp') || 0.00;\now_temp = JSON.parse(ow_current_temp).ow_temp;\n\nlet ow_hum = context.get('ow_hum') || 0.00;\now_hum = JSON.parse(ow_current_humidity).ow_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(ht_temp < ow_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(ow_temp) - parseFloat(ht_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(ht_temp) - parseFloat(ow_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(ht_hum < ow_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(ow_hum) - parseFloat(ht_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(ht_hum) - parseFloat(ow_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare` (`fk_offerer`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('2', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 300,
        "wires": [
            [
                "a1ce1c5da22fa799"
            ]
        ]
    },
    {
        "id": "93d646275d131c50",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "compare_wa",
        "func": "let ht_current_temp = global.get('ht_current_temp') || 0;\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\n\nlet wa_current_temp = global.get('wa_current_temp') || 0;\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\n\n// H&T \nlet ht_temp = context.get('ht_temp') || 0.00;\nht_temp = JSON.parse(ht_current_temp).ht_temp;\n\nlet ht_hum = context.get('ht_hum') || 0.00;\nht_hum = JSON.parse(ht_current_humidity).ht_humidity;\n\n// WB\nlet wa_temp = context.get('wa_temp') || 0.00;\nwa_temp = JSON.parse(wa_current_temp).wa_temp;\n\nlet ab_hum = context.get('wa_hum') || 0.00;\nwa_hum = JSON.parse(wa_current_humidity).wa_hum;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(ht_temp < wa_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(wa_temp) - parseFloat(ht_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(ht_temp) - parseFloat(wa_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(ht_hum < wa_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(wa_hum) - parseFloat(ht_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(ht_hum) - parseFloat(wa_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nmsg.payload = wa_current_humidity;\n\nlet sql = \"INSERT INTO `compare` (`fk_offerer`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('4', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 380,
        "wires": [
            [
                "a1ce1c5da22fa799"
            ]
        ]
    },
    {
        "id": "8c6943e466803077",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_humi",
        "func": "let list = msg.payload;\nlet sum_humi = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_humi = sum_humi + list[i].humi;\n}\n\nmsg.payload = sum_humi.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 640,
        "wires": [
            [
                "920ae7dd896c77d8"
            ]
        ]
    },
    {
        "id": "920ae7dd896c77d8",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "yr Humi",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 640,
        "wires": []
    },
    {
        "id": "4aa435da97ccd579",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "yr Text",
        "label": "yr",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1190,
        "y": 560,
        "wires": []
    },
    {
        "id": "dcbdd6280b9822d5",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "ow Text",
        "label": "openweather",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 700,
        "wires": []
    },
    {
        "id": "e82b0f1bb8148b54",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "ow Humi",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 780,
        "wires": []
    },
    {
        "id": "1a594964e8c9190c",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_humi",
        "func": "let list = msg.payload;\nlet sum_humi = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_humi = sum_humi + list[i].humi;\n}\n\nmsg.payload = sum_humi.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "e82b0f1bb8148b54"
            ]
        ]
    },
    {
        "id": "0938e678d87e7890",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "wb Text",
        "label": "weatherbit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 840,
        "wires": []
    },
    {
        "id": "930f75dff6478e42",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_humi",
        "func": "let list = msg.payload;\nlet sum_humi = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_humi = sum_humi + list[i].humi;\n}\n\nmsg.payload = sum_humi.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 920,
        "wires": [
            [
                "ed80c1c68ac0a9a7"
            ]
        ]
    },
    {
        "id": "ed80c1c68ac0a9a7",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "wb Humi",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 920,
        "wires": []
    },
    {
        "id": "7ea91d63fd43c79d",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "wa Text",
        "label": "Weather-API",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 980,
        "wires": []
    },
    {
        "id": "fcdd78f0590b49f5",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_humi",
        "func": "let list = msg.payload;\nlet sum_humi = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_humi = sum_humi + list[i].humi;\n}\n\nmsg.payload = sum_humi.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1060,
        "wires": [
            [
                "f2842fff306adb3a"
            ]
        ]
    },
    {
        "id": "f2842fff306adb3a",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "wa Humi",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1200.8958740234375,
        "y": 1061.3333740234375,
        "wires": []
    },
    {
        "id": "692de8ab5ec6abbb",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "CONNECTION",
        "info": "",
        "x": 720,
        "y": 100,
        "wires": []
    },
    {
        "id": "1571e5fdf7683fda",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ht_current_temp",
        "func": "// GET VARIABLEN\nlet ht_current_temp = global.get('ht_current_temp') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(ht_current_temp).ht_temp.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1260,
        "wires": [
            [
                "3dd2079be91cdf7a"
            ]
        ]
    },
    {
        "id": "3dd2079be91cdf7a",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "shelly HT Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c19570d69bf294cf",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "shelly Text",
        "label": "",
        "format": "shelly HT",
        "layout": "row-left",
        "className": "",
        "x": 1210,
        "y": 1220,
        "wires": []
    },
    {
        "id": "e0614b0248e5e899",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ht_current_humidity",
        "func": "// GET VARIABLEN\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(ht_current_humidity).ht_humidity.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1300,
        "wires": [
            [
                "fc28ebc730b722b6"
            ]
        ]
    },
    {
        "id": "fc28ebc730b722b6",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "shelly HT Humi",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1220,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f9c480d7379e0a5d",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "FirstDate",
        "func": "msg.topic = \"SELECT `wann` FROM `compare` ORDER BY wann asc LIMIT 1\";\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1140,
        "wires": [
            [
                "85d46aa21626487c"
            ]
        ]
    },
    {
        "id": "0bc06c6741a7b54f",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "time1",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nconst date = new Date(msg.payload[0].wann);\n\nlet d = date.getDate(msg.payload);\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours(msg.payload);\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1140,
        "wires": [
            [
                "c5acd9f29bba6521"
            ]
        ]
    },
    {
        "id": "85d46aa21626487c",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 690,
        "y": 1140,
        "wires": [
            [
                "c1ebb20907919a8f"
            ]
        ]
    },
    {
        "id": "c1ebb20907919a8f",
        "type": "json",
        "z": "1d4f578bef439a70",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 850,
        "y": 1140,
        "wires": [
            [
                "0bc06c6741a7b54f"
            ]
        ]
    },
    {
        "id": "c5acd9f29bba6521",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "b154e9481e5e0664",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "Messung seit",
        "label": "Messung seit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1210,
        "y": 1140,
        "wires": []
    },
    {
        "id": "b451728d5aa7ab35",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "From global",
        "info": "",
        "x": 450,
        "y": 1220,
        "wires": []
    },
    {
        "id": "57c211920ccab842",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestTemp YR",
        "func": "msg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(temp) as yr_sum_temp FROM `compare` WHERE `fk_offerer` = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1960,
        "wires": [
            [
                "e6b8937bb7b97d09"
            ]
        ]
    },
    {
        "id": "e6b8937bb7b97d09",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 1960,
        "wires": [
            [
                "3b8d8ae0327a2440"
            ]
        ]
    },
    {
        "id": "bdc07533684ad417",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "offerer",
        "func": "msg.headers = {\"query\": \"offerer\"};\n\n//msg.topic = \"SELECT co.temp, co.humi FROM `offerer` AS `of` JOIN `compare` AS `co` ON co.fk_offerer = of.id WHERE of.id = '1'\";\nmsg.topic = \"SELECT * FROM `compare`\";\nmsg.topic = \"SELECT SUM(temp) as yr_sum_temp FROM `compare` WHERE `fk_offerer` = '1'\";\nmsg.payload = `best-temp`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "c8b693118c6b34be",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestTemp OW",
        "func": "msg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(temp) as ow_sum_temp FROM `compare` WHERE `fk_offerer` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2080,
        "wires": [
            [
                "7082accc6a271ff9"
            ]
        ]
    },
    {
        "id": "7082accc6a271ff9",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2080,
        "wires": [
            [
                "78fe95e68225d67a"
            ]
        ]
    },
    {
        "id": "78fe95e68225d67a",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\n\n// FUNKTION\now_sum_temp = msg.payload[0].ow_sum_temp;\now_sum_temp = ow_sum_temp.toFixed(2);\now_sum_temp = `${ow_sum_temp}:${msg.headers.sum}`;\n// ow_sum_temp = [`${msg.headers.sum}`, `${ow_sum_temp}`];\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_sum_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "e9648f30642ea89e",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "SUM Array Temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\n\n// FUNKTION\nlet best_temp = [`${yr_sum_temp}`, `${ow_sum_temp}`, `${wb_sum_temp}`, `${wa_sum_temp}`]\nbest_temp = best_temp.sort();\nbest_temp = best_temp[0];\nbest_temp_items = best_temp.split(\":\");\n\nlet sql = \"SELECT `cname` FROM `offerer` WHERE `id` = '\" + best_temp_items[1] + \"'\";\n\n// VARIABLEN UEBERGEBEN\nmsg.headers = {\"value\": \"\" + best_temp_items[0] + \"\"};\nmsg.topic = sql;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2540,
        "wires": [
            [
                "f64726d7710c5112"
            ]
        ]
    },
    {
        "id": "3b8d8ae0327a2440",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = `${yr_sum_temp}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_sum_temp;\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "43c47f14412df02c",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "Set FLOAT",
        "info": "",
        "x": 920,
        "y": 1920,
        "wires": []
    },
    {
        "id": "d33c8a65637753db",
        "type": "comment",
        "z": "1d4f578bef439a70",
        "name": "Get FLOAT",
        "info": "",
        "x": 450,
        "y": 2500,
        "wires": []
    },
    {
        "id": "c226c9943afbadd8",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestTemp WB",
        "func": "msg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT SUM(temp) as wb_sum_temp FROM `compare` WHERE `fk_offerer` = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2200,
        "wires": [
            [
                "3b07316de278ee8d"
            ]
        ]
    },
    {
        "id": "3b07316de278ee8d",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2200,
        "wires": [
            [
                "dd9960ac814e66f8"
            ]
        ]
    },
    {
        "id": "dd9960ac814e66f8",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wb_sum_temp",
        "func": "// GET VARIABLEN\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\n\n// FUNKTION\nwb_sum_temp = msg.payload[0].wb_sum_temp;\nwb_sum_temp = wb_sum_temp.toFixed(2);\nwb_sum_temp = `${wb_sum_temp}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_temp', wb_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_sum_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "68d675e6af29e3f9",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestTemp WA",
        "func": "msg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT SUM(temp) as wa_sum_temp FROM `compare` WHERE `fk_offerer` = '4'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2320,
        "wires": [
            [
                "250851997d393513"
            ]
        ]
    },
    {
        "id": "250851997d393513",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2320,
        "wires": [
            [
                "cd1ce437769d128e"
            ]
        ]
    },
    {
        "id": "cd1ce437769d128e",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wa_sum_temp",
        "func": "// GET VARIABLEN\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\n\nlet result = flow.get('result') || [];\nresult.push(\"\" + msg.headers.sum + \"\");\n\n// FUNKTION\nwa_sum_temp = msg.payload[0].wa_sum_temp;\nwa_sum_temp = wa_sum_temp.toFixed(2);\nwa_sum_temp = `${wa_sum_temp}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_temp', wa_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_sum_temp;\nmsg.topic = result;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2320,
        "wires": [
            [
                "d69e303761bf7f5c"
            ]
        ]
    },
    {
        "id": "45ae5679c699dc1e",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 2820,
        "wires": [
            [
                "e381493ec3a7ca94"
            ]
        ]
    },
    {
        "id": "c88bf8f613f47ff7",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 2840,
        "wires": []
    },
    {
        "id": "e381493ec3a7ca94",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_ow",
        "func": "// GET VARIABLEN\nlet result = flow.get('result') || [];\n\n// SET VARIABLEN\nflow.set('result', result);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2800,
        "wires": [
            [
                "c88bf8f613f47ff7",
                "565fb46aa537afd3"
            ]
        ]
    },
    {
        "id": "565fb46aa537afd3",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_ow",
        "func": "// GET VARIABLEN\nlet result = flow.get('result') || [];\n\nresult[\"yr\"] = [\"1\"];\n\n// SET VARIABLEN\nflow.set('result', result);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2880,
        "wires": [
            [
                "c930184bbf47eb23",
                "5da1369cde61d1ca"
            ]
        ]
    },
    {
        "id": "a38a66b5307f46fc",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 3080,
        "wires": []
    },
    {
        "id": "c930184bbf47eb23",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "sum_ow",
        "func": "// GET VARIABLEN\nlet result = flow.get('result');\n\n//result.push(\"ow\" => \"2\");\n\n// SET VARIABLEN\nflow.set('result', result);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2940,
        "wires": [
            [
                "a38a66b5307f46fc"
            ]
        ]
    },
    {
        "id": "5da1369cde61d1ca",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 3040,
        "wires": []
    },
    {
        "id": "2eb1ffff38d0ae5d",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "result [ ]",
        "func": "// GET VARIABLEN\nlet result = flow.get('result') || [];\n\n// SET VARIABLEN\nflow.set('result', result);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 2100,
        "wires": [
            [
                "57c211920ccab842",
                "c8b693118c6b34be",
                "c226c9943afbadd8",
                "68d675e6af29e3f9",
                "e6c82e8fd7c0afcd",
                "da88d820fc25860d",
                "99e3f1b9b46ae4ba",
                "e43991a4649f2193"
            ]
        ]
    },
    {
        "id": "d69e303761bf7f5c",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 2320,
        "wires": []
    },
    {
        "id": "1144564e830925c9",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1460,
        "y": 2160,
        "wires": [
            [
                "46ee8b7213a13f47"
            ]
        ]
    },
    {
        "id": "46ee8b7213a13f47",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "result [ ]",
        "func": "// GET VARIABLEN\nlet result = flow.get('result') || [];\n\nresult = [];\n\n// SET VARIABLEN\nflow.set('result', result);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2160,
        "wires": [
            [
                "522ab5639839985c"
            ]
        ]
    },
    {
        "id": "522ab5639839985c",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1870,
        "y": 2160,
        "wires": []
    },
    {
        "id": "f64726d7710c5112",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2540,
        "wires": [
            [
                "ae0e705a7cabaa80",
                "294205c1b7280ae8"
            ]
        ]
    },
    {
        "id": "ae0e705a7cabaa80",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "17f048e0c1969eec",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "best Temp Name",
        "label": "",
        "format": "{{msg.payload[0].cname}}",
        "layout": "row-left",
        "className": "",
        "x": 950,
        "y": 2500,
        "wires": []
    },
    {
        "id": "294205c1b7280ae8",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "17f048e0c1969eec",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "best Temp Value",
        "label": "",
        "format": "{{headers.value}}Â°C",
        "layout": "row-left",
        "className": "",
        "x": 940,
        "y": 2540,
        "wires": []
    },
    {
        "id": "183497bd772a0cc3",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "17f048e0c1969eec",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "best Temp",
        "label": "Temperatur",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 930,
        "y": 2460,
        "wires": []
    },
    {
        "id": "8867c6bc60cb9a76",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "SUM Array Hum",
        "func": "// GET VARIABLEN\nlet yr_sum_humidity = flow.get('yr_sum_humidity') || 0;\nlet ow_sum_humidity = flow.get('ow_sum_humidity') || 0;\nlet wb_sum_humidity = flow.get('wb_sum_humidity') || 0;\nlet wa_sum_humidity = flow.get('wa_sum_humidity') || 0;\n\n// FUNKTION\nlet best_humidity = [`${yr_sum_humidity}`, `${ow_sum_humidity}`, `${wb_sum_humidity}`, `${wa_sum_humidity}`]\nbest_humidity = best_humidity.sort();\nbest_humidity = best_humidity[0];\nbest_humidity_items = best_humidity.split(\":\");\n\nlet sql = \"SELECT `cname` FROM `offerer` WHERE `id` = '\" + best_humidity_items[1] + \"'\";\n\n// VARIABLEN UEBERGEBEN\nmsg.headers = {\"value\": \"\" + best_humidity_items[0] + \"\"};\nmsg.topic = sql;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2600,
        "wires": [
            [
                "7c09fb1f0f123b12"
            ]
        ]
    },
    {
        "id": "7c09fb1f0f123b12",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2600,
        "wires": [
            [
                "e4b78a4f37e6166a",
                "2c21bfb8d910e716"
            ]
        ]
    },
    {
        "id": "c1f6c8f61ec781c4",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "17f048e0c1969eec",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "best Humidity",
        "label": "Luftfeuchtigkeit",
        "format": "",
        "layout": "row-right",
        "className": "",
        "x": 940,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e4b78a4f37e6166a",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "17f048e0c1969eec",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "best Humidity Value",
        "label": "",
        "format": "{{headers.value}}%",
        "layout": "row-left",
        "className": "",
        "x": 950,
        "y": 2680,
        "wires": []
    },
    {
        "id": "e6c82e8fd7c0afcd",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestHum YR",
        "func": "msg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(humi) as yr_sum_humidity FROM `compare` WHERE `fk_offerer` = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2020,
        "wires": [
            [
                "67e58d34bfcdb1d5"
            ]
        ]
    },
    {
        "id": "67e58d34bfcdb1d5",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2020,
        "wires": [
            [
                "f75b0bc7b858f26d"
            ]
        ]
    },
    {
        "id": "f75b0bc7b858f26d",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "yr_sum_humidity",
        "func": "// GET VARIABLEN\nlet yr_sum_humidity = flow.get('yr_sum_humidity') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_humidity = msg.payload[0].yr_sum_humidity;\nyr_sum_humidity = yr_sum_humidity.toFixed(2);\nyr_sum_humidity = `${yr_sum_humidity}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_humidity', yr_sum_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_sum_humidity;\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 957.0069580078125,
        "y": 2020.888916015625,
        "wires": [
            []
        ]
    },
    {
        "id": "df1716c960528e3c",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ow_sum_humidity",
        "func": "// GET VARIABLEN\nlet ow_sum_humidity = flow.get('ow_sum_humidity') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\now_sum_humidity = msg.payload[0].ow_sum_humidity;\now_sum_humidity = ow_sum_humidity.toFixed(2);\now_sum_humidity = `${ow_sum_humidity}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_humidity', ow_sum_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_sum_humidity;\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "d89a92883862b4d9",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2140,
        "wires": [
            [
                "df1716c960528e3c"
            ]
        ]
    },
    {
        "id": "da88d820fc25860d",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestHum OW",
        "func": "msg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(humi) as ow_sum_humidity FROM `compare` WHERE `fk_offerer` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2140,
        "wires": [
            [
                "d89a92883862b4d9"
            ]
        ]
    },
    {
        "id": "99e3f1b9b46ae4ba",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestHum WB",
        "func": "msg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT SUM(humi) as wb_sum_humidity FROM `compare` WHERE `fk_offerer` = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2260,
        "wires": [
            [
                "1683c7692a62b3ee"
            ]
        ]
    },
    {
        "id": "1683c7692a62b3ee",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2260,
        "wires": [
            [
                "17c83e1e75c55dc6"
            ]
        ]
    },
    {
        "id": "17c83e1e75c55dc6",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wb_sum_humidity",
        "func": "// GET VARIABLEN\nlet wb_sum_humidity = flow.get('wb_sum_humidity') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwb_sum_humidity = msg.payload[0].wb_sum_humidity;\nwb_sum_humidity = wb_sum_humidity.toFixed(2);\nwb_sum_humidity = `${wb_sum_humidity}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_humidity', wb_sum_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_sum_humidity;\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "e43991a4649f2193",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "bestHum WA",
        "func": "msg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT SUM(humi) as wa_sum_humidity FROM `compare` WHERE `fk_offerer` = '4'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2380,
        "wires": [
            [
                "ca292c66598faa28"
            ]
        ]
    },
    {
        "id": "ca292c66598faa28",
        "type": "mysql",
        "z": "1d4f578bef439a70",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 670,
        "y": 2380,
        "wires": [
            [
                "b460913273ec3307"
            ]
        ]
    },
    {
        "id": "b460913273ec3307",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wa_sum_humidity",
        "func": "// GET VARIABLEN\nlet wa_sum_humidity = flow.get('wa_sum_humidity') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwa_sum_humidity = msg.payload[0].wa_sum_humidity;\nwa_sum_humidity = wa_sum_humidity.toFixed(2);\nwa_sum_humidity = `${wa_sum_humidity}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_humidity', wa_sum_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_sum_humidity;\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "2c21bfb8d910e716",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "17f048e0c1969eec",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "best Humidity Name",
        "label": "",
        "format": "{{msg.payload[0].cname}}",
        "layout": "row-left",
        "className": "",
        "x": 960,
        "y": 2640,
        "wires": []
    },
    {
        "id": "85b214bcea354e68",
        "type": "cronplus",
        "z": "1d4f578bef439a70",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 8 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 240,
        "y": 2560,
        "wires": [
            [
                "e9648f30642ea89e",
                "8867c6bc60cb9a76"
            ]
        ]
    },
    {
        "id": "56ef8f49d0ddb582",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "yr_current_temp",
        "func": "// GET VARIABLEN\nlet yr_current_temp = global.get('yr_current_temp') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(yr_current_temp).yr_temp.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1400,
        "wires": [
            [
                "5d93323a35708bd0"
            ]
        ]
    },
    {
        "id": "e2248d0c737823a8",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "YR",
        "label": "",
        "format": "YR",
        "layout": "row-left",
        "className": "",
        "x": 1190,
        "y": 1360,
        "wires": []
    },
    {
        "id": "5d93323a35708bd0",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "YR Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ace722ddea31a291",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "YR Humidity",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1210,
        "y": 1440,
        "wires": []
    },
    {
        "id": "7b2d5ded0cde0274",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "yr_current_humidity",
        "func": "// GET VARIABLEN\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(yr_current_humidity).yr_humidity.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1440,
        "wires": [
            [
                "ace722ddea31a291"
            ]
        ]
    },
    {
        "id": "34b081fe11537ffe",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ow_current_temp",
        "func": "// GET VARIABLEN\nlet ow_current_temp = global.get('ow_current_temp') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(ow_current_temp).ow_temp.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "4b7754bd0a444045"
            ]
        ]
    },
    {
        "id": "fb6c6b7897b0344b",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "OW Text",
        "label": "",
        "format": "openweather",
        "layout": "row-left",
        "className": "",
        "x": 1200,
        "y": 1500,
        "wires": []
    },
    {
        "id": "4b7754bd0a444045",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "OW Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3894471be7c10518",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "OW Humidity",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1210,
        "y": 1580,
        "wires": []
    },
    {
        "id": "cc3e06f39e9a97c1",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ow_current_humidity",
        "func": "// GET VARIABLEN\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(ow_current_humidity).ow_humidity.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1580,
        "wires": [
            [
                "3894471be7c10518"
            ]
        ]
    },
    {
        "id": "6ef8838da01682d6",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "WB Text",
        "label": "",
        "format": "weatherbit",
        "layout": "row-left",
        "className": "",
        "x": 1200,
        "y": 1640,
        "wires": []
    },
    {
        "id": "cd0d8a10616b7292",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wb_current_temp",
        "func": "// GET VARIABLEN\nlet wb_current_temp = global.get('wb_current_temp') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(wb_current_temp).wb_temp.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1680,
        "wires": [
            [
                "de7b71e8454fba4f"
            ]
        ]
    },
    {
        "id": "18a35be8bdf41f13",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wb_current_humidity",
        "func": "// GET VARIABLEN\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(wb_current_humidity).wb_hum.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1720,
        "wires": [
            [
                "c3a16ce53b4b11d7"
            ]
        ]
    },
    {
        "id": "de7b71e8454fba4f",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "WB Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c3a16ce53b4b11d7",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "WB Humidity",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1210,
        "y": 1720,
        "wires": []
    },
    {
        "id": "8f60d3f0d09145df",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "WA Text",
        "label": "",
        "format": "Weather-API",
        "layout": "row-left",
        "className": "",
        "x": 1200,
        "y": 1780,
        "wires": []
    },
    {
        "id": "9fad6f551ce55bf5",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "WA Temp",
        "label": "",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 1820,
        "wires": []
    },
    {
        "id": "dcdb55b6648d7787",
        "type": "ui_text",
        "z": "1d4f578bef439a70",
        "group": "69fad70e826d02b4",
        "order": 4,
        "width": "3",
        "height": 1,
        "name": "WA Humidity",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1210,
        "y": 1860,
        "wires": []
    },
    {
        "id": "82363997206438b5",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wa_current_temp",
        "func": "// GET VARIABLEN\nlet wa_current_temp = global.get('wa_current_temp') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(wa_current_temp).wa_temp.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1820,
        "wires": [
            [
                "9fad6f551ce55bf5"
            ]
        ]
    },
    {
        "id": "b89c8fa23d693692",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "wa_current_humidity",
        "func": "// GET VARIABLEN\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = JSON.parse(wa_current_humidity).wa_hum.toFixed(2);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1860,
        "wires": [
            [
                "dcdb55b6648d7787"
            ]
        ]
    },
    {
        "id": "fe429e63b8f3651b",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = [`${msg.headers.sum}`, `${yr_sum_temp}`];\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_sum_temp;\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1129.8958740234375,
        "y": 1925.666748046875,
        "wires": [
            [
                "7aa51147d4196d96"
            ]
        ]
    },
    {
        "id": "7aa51147d4196d96",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1920,
        "wires": []
    },
    {
        "id": "3faf76cab38c4e03",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1960,
        "wires": [
            [
                "c8b693118c6b34be",
                "57c211920ccab842"
            ]
        ]
    },
    {
        "id": "6c7e05e58b5723b2",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\n\n\nlet sortable = [];\nsortable.push(yr_sum_temp);\nsortable.push(ow_sum_temp);\n\n\nsortable.sort(function(a, b) {\n    return a[1] - b[1];\n});\n\nresult = sortable;\n\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2020,
        "wires": [
            [
                "8f47b12482f37dfa"
            ]
        ]
    },
    {
        "id": "8f47b12482f37dfa",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 2020,
        "wires": []
    },
    {
        "id": "2ed676c4d508c660",
        "type": "inject",
        "z": "1d4f578bef439a70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1160,
        "y": 2080,
        "wires": [
            [
                "6c7e05e58b5723b2"
            ]
        ]
    },
    {
        "id": "bb2ec096db6514be",
        "type": "function",
        "z": "1d4f578bef439a70",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\n\n// FUNKTION\now_sum_temp = msg.payload[0].ow_sum_temp;\now_sum_temp = ow_sum_temp.toFixed(2);\now_sum_temp = [`${msg.headers.sum}`, `${ow_sum_temp}`];\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_sum_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1343.8958740234375,
        "y": 2097.666748046875,
        "wires": [
            [
                "6fdce5e399ee434a"
            ]
        ]
    },
    {
        "id": "6fdce5e399ee434a",
        "type": "debug",
        "z": "1d4f578bef439a70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 2080,
        "wires": []
    },
    {
        "id": "48277557288d1e06",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys_sunrise",
        "func": "// GET VARIABLEN\nlet sys_sunrise = flow.get('sys_sunrise') || 0;\n\n// FUNKTION\nsys_sunrise = msg.payload.sunrise;\n\n// SET VARIABLEN\nflow.set('sys_sunrise', sys_sunrise);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys_sunrise;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1060,
        "wires": [
            [
                "3d10a8765ff07baa"
            ]
        ]
    },
    {
        "id": "328a9c2fcddea503",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys_sunset",
        "func": "// GET VARIABLEN\nlet sys_sunset = flow.get('sys_sunset') || 0;\n\n// FUNKTION\nsys_sunset = msg.payload.sunset;\n\n// SET VARIABLEN\nflow.set('sys_sunset', sys_sunset);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys_sunset;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1100,
        "wires": [
            [
                "f00a189b5d453d95"
            ]
        ]
    },
    {
        "id": "5a649fac7fc948a7",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys",
        "func": "// GET VARIABLEN\nlet sys = flow.get('sys') || 0;\n\n// FUNKTION\nsys = msg.payload.sys;\n\n// SET VARIABLEN\nflow.set('sys', sys);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1020,
        "wires": [
            [
                "48277557288d1e06",
                "328a9c2fcddea503"
            ]
        ]
    },
    {
        "id": "db8196e2a58b061e",
        "type": "http request",
        "z": "ddd61edf8d8f5ce2",
        "name": "Berlin",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?q=Berlin&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 800,
        "wires": [
            [
                "7d78cb4c0a316aa1",
                "c3bbe56e3fd921aa",
                "812ee0d99229456e",
                "5a649fac7fc948a7",
                "88ded4fad3d03744",
                "2ceb1d162a097e37",
                "dd580be66d435bae",
                "85c23d534094847b",
                "a38fa710235fcae4"
            ]
        ]
    },
    {
        "id": "812ee0d99229456e",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main",
        "func": "// GET VARIABLEN\nlet main = flow.get('main') || 0;\n\n// FUNKTION\nmain = msg.payload.main;\n\n// SET VARIABLEN\nflow.set('main', main);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "6fbc41ee6e77ea24",
                "56ab50748b931c65",
                "35eb680bd848b9b7"
            ]
        ]
    },
    {
        "id": "7d78cb4c0a316aa1",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather",
        "func": "// GET VARIABLEN\nlet weather = flow.get('weather') || 0;\n\n// FUNKTION\nweather = msg.payload.weather[0];\n\n// SET VARIABLEN\nflow.set('weather', weather);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 620,
        "wires": [
            [
                "aad5ed3437dd4c01",
                "1e6515eec4565317",
                "83dd913f9d5c4ff9"
            ]
        ]
    },
    {
        "id": "c3bbe56e3fd921aa",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind",
        "func": "// GET VARIABLEN\nlet wind = flow.get('wind') || 0;\n\n// FUNKTION\nwind = msg.payload.wind;\n\n// SET VARIABLEN\nflow.set('wind', wind);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 740,
        "wires": [
            [
                "6d6970e4b24398db",
                "b279c1e1495b48da"
            ]
        ]
    },
    {
        "id": "2ceb1d162a097e37",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all",
        "func": "// GET VARIABLEN\nlet clouds_all = flow.get('clouds_all') || 0;\n\n// FUNKTION\nclouds_all = msg.payload.clouds.all;\n\n// SET VARIABLEN\nflow.set('clouds_all', clouds_all);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = clouds_all;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 860,
        "wires": [
            [
                "cf40801eef0ad09e"
            ]
        ]
    },
    {
        "id": "88ded4fad3d03744",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "name",
        "func": "// GET VARIABLEN\nlet name = flow.get('name') || 0;\n\n// FUNKTION\nname = msg.payload.name;\n\n// SET VARIABLEN\nflow.set('name', name);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = name;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 980,
        "wires": [
            [
                "46e6fbeff51aefe7"
            ]
        ]
    },
    {
        "id": "dd580be66d435bae",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord",
        "func": "// GET VARIABLEN\nlet coord = flow.get('coord') || 0;\n\n// FUNKTION\ncoord = msg.payload.coord;\n\n// SET VARIABLEN\nflow.set('coord', coord);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "2330772a5a5ed9ec",
                "297b168802b4a64a"
            ]
        ]
    },
    {
        "id": "dfce64c56dfea1a6",
        "type": "inject",
        "z": "ddd61edf8d8f5ce2",
        "name": "60 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 60,
        "y": 440,
        "wires": [
            [
                "db8196e2a58b061e",
                "3a20fb083ad87a15"
            ]
        ]
    },
    {
        "id": "6fbc41ee6e77ea24",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity",
        "func": "// GET VARIABLEN\nlet main_humidity = flow.get('main_humidity') || 0;\n\n// FUNKTION\nmain_humidity = msg.payload.humidity;\n\n// SET VARIABLEN\nflow.set('main_humidity', main_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 340,
        "wires": [
            [
                "37615a29a00329cb",
                "c88a615761a0bce4",
                "a3cf79842064010e",
                "088ee34d32558547",
                "00a21318c440bff0",
                "c1494e790faf4240"
            ]
        ]
    },
    {
        "id": "56ab50748b931c65",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp",
        "func": "// GET VARIABLEN\nlet main_temp = flow.get('main_temp') || 0;\n\n// FUNKTION\nmain_temp = msg.payload.temp;\n\n// SET VARIABLEN\nflow.set('main_temp', main_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 220,
        "wires": [
            [
                "7338a014aa5d7a30",
                "fba9e3d4b7a32d7c",
                "66f5f701db52321e",
                "9d8316e460c6d437",
                "4a7792fb4da6f19c",
                "695e88344f943e79"
            ]
        ]
    },
    {
        "id": "35eb680bd848b9b7",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure",
        "func": "// GET VARIABLEN\nlet main_pressure = flow.get('main_pressure') || 0;\n\n// FUNKTION\nmain_pressure = msg.payload.pressure;\n\n// SET VARIABLEN\nflow.set('main_pressure', main_pressure);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_pressure;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 380,
        "wires": [
            [
                "67dd73ff2b4ac974",
                "70373dc283a85ab4"
            ]
        ]
    },
    {
        "id": "aad5ed3437dd4c01",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_main",
        "func": "// GET VARIABLEN\nlet weather_main = flow.get('weather_main') || 0;\n\n// FUNKTION\nweather_main = msg.payload.main;\n\n// SET VARIABLEN\nflow.set('weather_main', weather_main);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_main;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 580,
        "wires": [
            [
                "9d8173ee77d5baae"
            ]
        ]
    },
    {
        "id": "1e6515eec4565317",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_description",
        "func": "// GET VARIABLEN\nlet weather_main = flow.get('weather_description') || 0;\n\n// FUNKTION\nweather_description = msg.payload.description;\n\n// SET VARIABLEN\nflow.set('weather_description', weather_description);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_description;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "83dd913f9d5c4ff9",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_icon",
        "func": "// GET VARIABLEN\nlet weather_icon = flow.get('weather_icon') || 0;\n\n// FUNKTION\nweather_icon = msg.payload.icon;\n\n// SET VARIABLEN\nflow.set('weather_icon', weather_icon);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_icon;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "6d6970e4b24398db",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed",
        "func": "// GET VARIABLEN\nlet wind_speed = flow.get('wind_speed') || 0;\n\n// FUNKTION\nwind_speed = msg.payload.speed;\n\n// SET VARIABLEN\nflow.set('wind_speed', wind_speed);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind_speed;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 740,
        "wires": [
            [
                "da1598ab397e9daf",
                "1f4e9f5ca177a4fb"
            ]
        ]
    },
    {
        "id": "b279c1e1495b48da",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_deg",
        "func": "// GET VARIABLEN\nlet wind_speed = flow.get('wind_deg') || 0;\n\n// FUNKTION\nwind_deg = msg.payload.deg;\n\n// SET VARIABLEN\nflow.set('wind_deg', wind_deg);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind_deg;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 780,
        "wires": [
            [
                "5502778a80f45e82"
            ]
        ]
    },
    {
        "id": "2330772a5a5ed9ec",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord_lon",
        "func": "// GET VARIABLEN\nlet coord_lon = flow.get('coord_lon') || 0;\n\n// FUNKTION\ncoord_lon = msg.payload.lon;\n\n// SET VARIABLEN\nflow.set('coord_lon', coord_lon);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord_lon;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1160,
        "wires": [
            [
                "9fedbbcfbb6eecaa"
            ]
        ]
    },
    {
        "id": "297b168802b4a64a",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord_lat",
        "func": "// GET VARIABLEN\nlet coord_lat = flow.get('coord_lat') || 0;\n\n// FUNKTION\ncoord_lat = msg.payload.lat;\n\n// SET VARIABLEN\nflow.set('coord_lat', coord_lat);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord_lat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "37b7fce468461e6f"
            ]
        ]
    },
    {
        "id": "9d8173ee77d5baae",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "e70d0760bcc08d3a",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "weather_main_text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1210,
        "y": 580,
        "wires": []
    },
    {
        "id": "7338a014aa5d7a30",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_gauge",
        "group": "28f7dbdd3547c09e",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} Â°C",
        "min": "-20",
        "max": "50",
        "colors": [
            "#2a50ea",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "30",
        "className": "",
        "x": 1210,
        "y": 220,
        "wires": []
    },
    {
        "id": "37615a29a00329cb",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_gauge",
        "group": "f697df7ca894247c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} %",
        "min": 0,
        "max": "100",
        "colors": [
            "#4b6470",
            "#00b400",
            "#e7770d"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1220,
        "y": 380,
        "wires": []
    },
    {
        "id": "c88a615761a0bce4",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_chart",
        "group": "f697df7ca894247c",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "da1598ab397e9daf",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_gauge",
        "group": "7177e1bbce7a0779",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} m/s",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "8",
        "seg2": "12",
        "className": "",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "89f5412216e665f9",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all_gauge",
        "group": "e70d0760bcc08d3a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "% freier Himmel",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "10",
        "seg2": "50",
        "className": "",
        "x": 1210,
        "y": 900,
        "wires": []
    },
    {
        "id": "1f4e9f5ca177a4fb",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_chart",
        "group": "7177e1bbce7a0779",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fba9e3d4b7a32d7c",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_chart",
        "group": "28f7dbdd3547c09e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0798ce47f6aa3654",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all_chart",
        "group": "e70d0760bcc08d3a",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "5502778a80f45e82",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "7177e1bbce7a0779",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "wind_deg",
        "label": "",
        "format": "{{msg.payload}} Â°",
        "layout": "row-center",
        "className": "",
        "x": 1180,
        "y": 760,
        "wires": []
    },
    {
        "id": "46e6fbeff51aefe7",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "name",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "city_name",
        "x": 310,
        "y": 980,
        "wires": []
    },
    {
        "id": "9fedbbcfbb6eecaa",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "coord_lon",
        "label": "",
        "format": "lon : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1180,
        "y": 1160,
        "wires": []
    },
    {
        "id": "37b7fce468461e6f",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 5,
        "width": "6",
        "height": "1",
        "name": "coord_lat",
        "label": "",
        "format": "lat : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1180,
        "y": 1200,
        "wires": []
    },
    {
        "id": "091892704ce5b1c9",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "sys_sunrise",
        "label": "",
        "format": "sunrise : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cfffe8fe3f29a9b9",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "sys_sunset",
        "label": "",
        "format": "sunset : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1190,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3a20fb083ad87a15",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new Date",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nconst date = new Date();\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "848ffdb9bb12c7d4"
            ]
        ]
    },
    {
        "id": "848ffdb9bb12c7d4",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "DateTime",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 320,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cf40801eef0ad09e",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "func": "// GET VARIABLEN\nlet change = flow.get('change') || 0;\n\n// FUNKTION\nchange = 100 - Number(msg.payload); \n\n// SET VARIABLEN\nflow.set('change', change);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = change;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 860,
        "wires": [
            [
                "c43783c9fee726ef",
                "89f5412216e665f9",
                "0798ce47f6aa3654"
            ]
        ]
    },
    {
        "id": "c43783c9fee726ef",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 940,
        "wires": []
    },
    {
        "id": "67dd73ff2b4ac974",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure_gauge",
        "group": "325d7857240a0cc6",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}} hPa",
        "min": "990",
        "max": "1030",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b400"
        ],
        "seg1": "1000",
        "seg2": "1010",
        "className": "",
        "x": 1220,
        "y": 460,
        "wires": []
    },
    {
        "id": "70373dc283a85ab4",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure",
        "group": "325d7857240a0cc6",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "990",
        "ymax": "1030",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3d10a8765ff07baa",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new DateSunrise",
        "func": "// GET VARIABLEN\nlet sunrise = flow.get('sunrise') || 0;\n\n// FUNKTION\nconst date = new Date(msg.payload * 1000);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nsunrise = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('sunrise', sunrise);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sunrise;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1060,
        "wires": [
            [
                "091892704ce5b1c9"
            ]
        ]
    },
    {
        "id": "f00a189b5d453d95",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new DateSunset",
        "func": "// GET VARIABLEN\nlet sunset = flow.get('sunset') || 0;\n\n// FUNKTION\nconst date = new Date(msg.payload * 1000);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nsunset = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('sunset', sunset);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sunset;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1100,
        "wires": [
            [
                "cfffe8fe3f29a9b9"
            ]
        ]
    },
    {
        "id": "514472adaeaa33fb",
        "type": "mqtt out",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "topic": "aussentemperatur",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1030,
        "y": 80,
        "wires": []
    },
    {
        "id": "9c0f6fb1c6f6d86f",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "Publishing / Client",
        "info": "",
        "x": 1030,
        "y": 40,
        "wires": []
    },
    {
        "id": "85c23d534094847b",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 700,
        "wires": []
    },
    {
        "id": "c6ba937f717b1144",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : Weather",
        "info": "",
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "48175f98c44d22e9",
        "type": "mqtt out",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "topic": "humidity",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1000,
        "y": 140,
        "wires": []
    },
    {
        "id": "66f5f701db52321e",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_chart",
        "group": "4421ea5d2f4fae8e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a3cf79842064010e",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_chart",
        "group": "4421ea5d2f4fae8e",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1580,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a2647b70a0149068",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : wetterchecker",
        "info": "",
        "x": 1570,
        "y": 260,
        "wires": []
    },
    {
        "id": "9d8316e460c6d437",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "temperature_gauge",
        "group": "4421ea5d2f4fae8e",
        "order": 1,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "-20",
        "max": "50",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "30",
        "className": "",
        "x": 1570,
        "y": 380,
        "wires": []
    },
    {
        "id": "088ee34d32558547",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "humidity_gauge",
        "group": "4421ea5d2f4fae8e",
        "order": 4,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "0",
        "max": "100",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#d78c09"
        ],
        "seg1": "40",
        "seg2": "60",
        "className": "",
        "x": 1560,
        "y": 420,
        "wires": []
    },
    {
        "id": "00a21318c440bff0",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "4421ea5d2f4fae8e",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "main_humidity_text",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1550,
        "y": 120,
        "wires": []
    },
    {
        "id": "4a7792fb4da6f19c",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "4421ea5d2f4fae8e",
        "order": 2,
        "width": "5",
        "height": "1",
        "name": "main_temp_text",
        "label": "Temperatur",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1530,
        "y": 160,
        "wires": []
    },
    {
        "id": "132d945df2db4526",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : wetterchecker",
        "info": "",
        "x": 1550,
        "y": 80,
        "wires": []
    },
    {
        "id": "695e88344f943e79",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "ow_current_temp",
        "func": "// GET VARIABLEN\nlet ow_current_temp = global.get('ow_current_temp') || 0;\n\n// FUNKTION\now_current_temp = msg.payload;\now_current_temp = `{\n    \"ow_temp\": ${ow_current_temp}, \n    \"time\": ${msg.cronplus.triggerTimestamp}\n}`;\n\n// SET VARIABLEN\nglobal.set('ow_current_temp', ow_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 100,
        "wires": [
            [
                "6f99cce4845bb777"
            ]
        ]
    },
    {
        "id": "6f99cce4845bb777",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 40,
        "wires": []
    },
    {
        "id": "a38fa710235fcae4",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "msg.payload.rain[\"1h\"]",
        "func": "// GET VARIABLEN\nlet rain = flow.get('rain') || 0;\n\n// FUNKTION\nif (typeof variable === 'undefined') {\n    rain = 0;\n} else {\n    rain = msg.payload.rain[\"1h\"];\n}\n\n// SET VARIABLEN\nflow.set('rain', rain);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = rain;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1260,
        "wires": [
            [
                "c4a190953547dfd6",
                "43811e6b4a782861"
            ]
        ]
    },
    {
        "id": "c4a190953547dfd6",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1260,
        "wires": []
    },
    {
        "id": "43811e6b4a782861",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_chart",
        "group": "3bc48255336fdd1e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 910,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "c1494e790faf4240",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "ow_current_humidity",
        "func": "// GET VARIABLEN\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// FUNKTION\now_current_humidity = msg.payload;\now_current_humidity = `{\n    \"ow_humidity\": ${ow_current_humidity}, \n    \"time\": ${msg.cronplus.triggerTimestamp}\n}`;\n\n// SET VARIABLEN\nglobal.set('ow_current_humidity', ow_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 140,
        "wires": [
            [
                "dd446afbab3b9053"
            ]
        ]
    },
    {
        "id": "dd446afbab3b9053",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 60,
        "wires": []
    },
    {
        "id": "554de64f1baf3749",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "GLOBAL",
        "info": "",
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "04a444f92205b34a",
        "type": "cronplus",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronOW",
                "topic": "ow",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 800,
        "wires": [
            [
                "d6cbec0653b8a1ef",
                "0116abc6b06d2474"
            ]
        ]
    },
    {
        "id": "d6cbec0653b8a1ef",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "ow_cron",
        "func": "// GET VARIABLEN\nlet ow_cron = flow.get('ow_cron') || 0;\n\n// FUNKTION\now_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('ow_cron', ow_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 800,
        "wires": [
            [
                "db8196e2a58b061e",
                "80f50b86215efe48",
                "3a20fb083ad87a15"
            ]
        ]
    },
    {
        "id": "80f50b86215efe48",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 740,
        "wires": []
    },
    {
        "id": "ceb27ffd3dafc8e0",
        "type": "inject",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 260,
        "wires": [
            [
                "db8196e2a58b061e"
            ]
        ]
    },
    {
        "id": "0116abc6b06d2474",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 580,
        "wires": []
    },
    {
        "id": "4e472399c84eb734",
        "type": "http request",
        "z": "b6a2ad0c72d43d34",
        "name": "Berlin",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "api.openweathermap.org/data/2.5/forecast?lat={{{topic.lat}}}&lon={{{topic.lon}}}&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "411e01d0402d759d"
            ]
        ]
    },
    {
        "id": "177be62df25f605d",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "180 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic.lat",
                "v": "52.5244",
                "vt": "str"
            },
            {
                "p": "topic.lon",
                "v": "13.4105",
                "vt": "str"
            }
        ],
        "repeat": "10800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 340,
        "wires": [
            [
                "4e472399c84eb734"
            ]
        ]
    },
    {
        "id": "635e862dae957563",
        "type": "ui_text",
        "z": "b6a2ad0c72d43d34",
        "group": "c3da97eba3f6cdd7",
        "order": 1,
        "width": 6,
        "height": 10,
        "name": "Content",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1660,
        "y": 340,
        "wires": []
    },
    {
        "id": "411e01d0402d759d",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "setForecast",
        "func": "// GET VARIABLEN\nlet forecast = flow.get('forecast') || {};\nlet limit = 8;\n\n// FUNKTION\nforecast = `{`;\n\nfor(let i=0; i < msg.payload.list.length && i <= limit; i++) {\n    \n    forecast = `${forecast}\n    \"${i}\": \n    [\n        \"${msg.payload.list[i].dt_txt}\", \n        \"${msg.payload.list[i].main.temp}\",\n        \"${msg.payload.list[i].main.humidity}\"\n    ]`;\n    \n    if(i < limit) {\n        forecast = `${forecast},`;\n    }\n}\n\nforecast = `${forecast}\n}`;\n\n// SET VARIABLEN\nflow.set('forecast', forecast);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = forecast;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 340,
        "wires": [
            [
                "0f145398465fbeff"
            ]
        ]
    },
    {
        "id": "0f145398465fbeff",
        "type": "json",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "7f12f9751820fc18"
            ]
        ]
    },
    {
        "id": "7f12f9751820fc18",
        "type": "file",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "filename": "data/forecast",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 910,
        "y": 340,
        "wires": [
            [
                "8c8d12e1484a9899"
            ]
        ]
    },
    {
        "id": "8c8d12e1484a9899",
        "type": "file in",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "filename": "data/forecast",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1110,
        "y": 340,
        "wires": [
            [
                "7081bdd21d4e2688"
            ]
        ]
    },
    {
        "id": "7081bdd21d4e2688",
        "type": "json",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1290,
        "y": 340,
        "wires": [
            [
                "b07c238e2ab822b5"
            ]
        ]
    },
    {
        "id": "b07c238e2ab822b5",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "getForecast",
        "func": "// GET VARIABLEN\nlet forecastView = '';\n\n// FUNKTION\nfor (const [key, value] of Object.entries(msg.payload)) {\n  forecastView = forecastView + convert_date(value[0]) + `<br>`;\n  forecastView = forecastView + `<i class=\"fa fa-thermometer-half\" aria-hidden=\"true\"></i> ` + value[1] + `Â°C | `;\n  forecastView = forecastView + value[2] + `%<br><br>`;\n}\n\nfunction convert_date(intdate) {\n    const date = new Date(intdate);\n\n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    now = `${h}:${min} ${d}.${mon}.${y}`;\n    \n    return now;\n}\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = forecastView;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 340,
        "wires": [
            [
                "635e862dae957563"
            ]
        ]
    },
    {
        "id": "108adb2b5b686675",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "INIT",
        "info": "",
        "x": 170,
        "y": 300,
        "wires": []
    },
    {
        "id": "74f6545892d334a5",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "READ",
        "info": "",
        "x": 1090,
        "y": 300,
        "wires": []
    },
    {
        "id": "a9ffd70c32dc89fd",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Request",
        "info": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "f60f5d4e84747f17",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "WRITE",
        "info": "",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "5347dc66353cddb2",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "GET",
        "info": "",
        "x": 1450,
        "y": 300,
        "wires": []
    },
    {
        "id": "eb14b07b4a23d75b",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "SET",
        "info": "",
        "x": 530,
        "y": 300,
        "wires": []
    },
    {
        "id": "797c6b2734b6ca81",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "View",
        "info": "",
        "x": 1650,
        "y": 260,
        "wires": []
    },
    {
        "id": "176b4259cab7029f",
        "type": "ui_button",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "group": "c3da97eba3f6cdd7",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "REFRESH",
        "tooltip": "",
        "color": "#333333",
        "bgcolor": "#f1f1f1",
        "className": "",
        "icon": "fa-refresh",
        "payload": "{\"topic.lat\": \"52.5244\", \"topic.lon\": \"13.4105\"}",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "04de9e17ba3f6094"
            ]
        ]
    },
    {
        "id": "04de9e17ba3f6094",
        "type": "json",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "bcb8757ab2af86dd"
            ]
        ]
    },
    {
        "id": "bcb8757ab2af86dd",
        "type": "change",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic.lat",
                "pt": "msg",
                "to": "payload[\"topic.lat\"]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic.lon",
                "pt": "msg",
                "to": "payload[\"topic.lon\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "4e472399c84eb734"
            ]
        ]
    },
    {
        "id": "5379b371332862fa",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Convert",
        "info": "",
        "x": 730,
        "y": 300,
        "wires": []
    },
    {
        "id": "31f851579da3fddd",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Convert",
        "info": "",
        "x": 1290,
        "y": 300,
        "wires": []
    },
    {
        "id": "ae826e9e02501565",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Convert",
        "info": "",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "7cf20c76e98745b9",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "SET",
        "info": "",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "c8bf171f2d45336a",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 890,
        "y": 200,
        "wires": [
            [
                "8c8d12e1484a9899"
            ]
        ]
    },
    {
        "id": "c15d6621306f7b4f",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "INIT",
        "info": "",
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "893534ff98749181",
        "type": "http request",
        "z": "2b74e16d31657d5a",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=52.5244&lon=13.4105&altitude=90",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 470,
        "y": 420,
        "wires": [
            [
                "b9aae3b53d1b8155",
                "e710ca42d97f4af3",
                "a741fa6eb14b3b0c",
                "89ea2aa510d45ca2",
                "8250b81da50fc695",
                "307c5b063b819065",
                "adf8e829857ff41d",
                "d631e4cdd01b2fa3",
                "7a33f481f7e9d22e",
                "3c1e427c6b781acd",
                "1e77bfaa9a1c5d40",
                "0af3809bd71a58db",
                "04f6dd63236676a5",
                "a01fecd6bc151909",
                "28afb984d86470ce",
                "48a73c9ddc80b8cc",
                "b7d6b0cdaf699a07",
                "828a8beba8c04820",
                "2e163f90ce5c9784",
                "4b41e159ab8e27a8",
                "d88cf5966ee6fd6c",
                "a8e6d6a2c4fdb668",
                "28b0a383141a2f87",
                "fdb6a5c6c2b5693c",
                "c87cc8b8bd4a04e3",
                "f96bd3376c4b53dd",
                "964d14d0b226903e"
            ]
        ]
    },
    {
        "id": "b9aae3b53d1b8155",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties.timeseries",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 140,
        "wires": []
    },
    {
        "id": "6ae9e6d9e949d8d0",
        "type": "inject",
        "z": "2b74e16d31657d5a",
        "name": "60 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 80,
        "wires": [
            [
                "893534ff98749181"
            ]
        ]
    },
    {
        "id": "e710ca42d97f4af3",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties.timeseries[1].data.instant.details.air_temperature",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 180,
        "wires": []
    },
    {
        "id": "19dee56441ab3cff",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "air_temperature1 time",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 980,
        "y": 320,
        "wires": []
    },
    {
        "id": "d87d2b63663e158e",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "air_temperature2 time",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 980,
        "y": 460,
        "wires": []
    },
    {
        "id": "a741fa6eb14b3b0c",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "air_temperature3 value",
        "label": "",
        "format": "{{msg.payload.properties.timeseries[3].data.instant.details.air_temperature}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 710,
        "y": 640,
        "wires": []
    },
    {
        "id": "89ea2aa510d45ca2",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "air_temperature",
        "label": "{{msg.payload.properties.timeseries[4].time}}",
        "format": "{{msg.payload.properties.timeseries[4].data.instant.details.air_temperature}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 260,
        "y": 620,
        "wires": []
    },
    {
        "id": "8250b81da50fc695",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "air_temperature 5",
        "label": "{{msg.payload.properties.timeseries[5].time}}",
        "format": "{{msg.payload.properties.timeseries[5].data.instant.details.air_temperature}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 270,
        "y": 680,
        "wires": []
    },
    {
        "id": "307c5b063b819065",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "air_temperature 6",
        "label": "{{msg.payload.properties.timeseries[6].time}}",
        "format": "{{msg.payload.properties.timeseries[6].data.instant.details.air_temperature}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 270,
        "y": 740,
        "wires": []
    },
    {
        "id": "adf8e829857ff41d",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties.timeseries[1].data.instant.details.relative_humidity",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 220,
        "wires": []
    },
    {
        "id": "d631e4cdd01b2fa3",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 3,
        "width": 2,
        "height": 1,
        "name": "air_humidity1",
        "label": "",
        "format": "{{payload.properties.timeseries[1].data.instant.details.relative_humidity}} %",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 400,
        "wires": []
    },
    {
        "id": "7a33f481f7e9d22e",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "air_humidity 2",
        "label": "",
        "format": "{{payload.properties.timeseries[2].data.instant.details.relative_humidity}} %",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 540,
        "wires": []
    },
    {
        "id": "3c1e427c6b781acd",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "air_humidity 3",
        "label": "",
        "format": "{{payload.properties.timeseries[3].data.instant.details.relative_humidity}} %",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 680,
        "wires": []
    },
    {
        "id": "044450559d037b9c",
        "type": "ui_chart",
        "z": "2b74e16d31657d5a",
        "name": "air_temperature",
        "group": "b00580b1b424ac78",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 380,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1e77bfaa9a1c5d40",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "",
        "func": "let t1 = msg.payload.properties.timeseries[1].data.instant.details.air_temperature;\n\nmsg.payload = t1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 180,
        "wires": [
            [
                "044450559d037b9c"
            ]
        ]
    },
    {
        "id": "0af3809bd71a58db",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "",
        "func": "let h1 = msg.payload.properties.timeseries[1].data.instant.details.relative_humidity;\n\nmsg.payload = h1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 980,
        "wires": [
            [
                "c5f97c16bb85303e",
                "477d72515d7afeca"
            ]
        ]
    },
    {
        "id": "c5f97c16bb85303e",
        "type": "ui_chart",
        "z": "2b74e16d31657d5a",
        "name": "air_humidity",
        "group": "b00580b1b424ac78",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 510,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "477d72515d7afeca",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2e163f90ce5c9784",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "b00580b1b424ac78",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "air_humidity",
        "label": "Luftfeuchtigkeit",
        "format": "{{payload.properties.timeseries[1].data.instant.details.relative_humidity}} %",
        "layout": "row-spread",
        "className": "",
        "x": 250,
        "y": 540,
        "wires": []
    },
    {
        "id": "04f6dd63236676a5",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "b00580b1b424ac78",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "air_temperature",
        "label": "Temperatur",
        "format": "{{msg.payload.properties.timeseries[1].data.instant.details.air_temperature}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 220,
        "wires": []
    },
    {
        "id": "a01fecd6bc151909",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 100,
        "wires": []
    },
    {
        "id": "75d2e07af0d54672",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "time1",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\nlet time1 = flow.get('time1');\n\n// FUNKTION\nconst date = new Date(time1);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 320,
        "wires": [
            [
                "19dee56441ab3cff"
            ]
        ]
    },
    {
        "id": "28afb984d86470ce",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "time1",
        "func": "let time1 = flow.get('time1') || 0;\n\ntime1 = msg.payload.properties.timeseries[1].time;\n\n// SET VARIABLEN\nflow.set('time1', time1);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = time1;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "75d2e07af0d54672"
            ]
        ]
    },
    {
        "id": "48a73c9ddc80b8cc",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 2,
        "width": 2,
        "height": 1,
        "name": "air_temperature1 value",
        "label": "",
        "format": "{{msg.payload.properties.timeseries[1].data.instant.details.air_temperature}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "b7d6b0cdaf699a07",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "time2",
        "func": "let time2 = flow.get('time2') || 0;\n\ntime2 = msg.payload.properties.timeseries[2].time;\n\n// SET VARIABLEN\nflow.set('time2', time2);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = time2;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 460,
        "wires": [
            [
                "691f7ea6bcd0c095"
            ]
        ]
    },
    {
        "id": "691f7ea6bcd0c095",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "time2",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\nlet time2 = flow.get('time2');\n\n// FUNKTION\nconst date = new Date(time2);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 460,
        "wires": [
            [
                "d87d2b63663e158e"
            ]
        ]
    },
    {
        "id": "828a8beba8c04820",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 6,
        "width": 2,
        "height": 1,
        "name": "air_temperature2 value",
        "label": "",
        "format": "{{msg.payload.properties.timeseries[2].data.instant.details.air_temperature}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "4b41e159ab8e27a8",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "time3",
        "func": "let time3 = flow.get('time3') || 0;\n\ntime3 = msg.payload.properties.timeseries[3].time;\n\n// SET VARIABLEN\nflow.set('time3', time3);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = time3;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 600,
        "wires": [
            [
                "cef7506353c8475d"
            ]
        ]
    },
    {
        "id": "cef7506353c8475d",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "time3",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\nlet time3 = flow.get('time3');\n\n// FUNKTION\nconst date = new Date(time3);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 600,
        "wires": [
            [
                "083fd918e73c0545"
            ]
        ]
    },
    {
        "id": "083fd918e73c0545",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "air_temperature3 time",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 980,
        "y": 600,
        "wires": []
    },
    {
        "id": "d88cf5966ee6fd6c",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "yr_current_temp0",
        "func": "// GET VARIABLEN\nlet yr_current_temp = global.get('yr_current_temp') || 0;\n\n// FUNKTION\nyr_current_temp = msg.payload.properties.timeseries[0].data.instant.details.air_temperature;\nyr_current_temp = `{\n    \"yr_temp\": ${yr_current_temp}, \n    \"time\": ${msg.topic}\n}`;\n\n// SET VARIABLEN\nglobal.set('yr_current_temp', yr_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 780,
        "wires": [
            [
                "383fea5cf9459cc0"
            ]
        ]
    },
    {
        "id": "383fea5cf9459cc0",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 780,
        "wires": []
    },
    {
        "id": "a8e6d6a2c4fdb668",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 340,
        "wires": []
    },
    {
        "id": "28b0a383141a2f87",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "rain1",
        "label": "",
        "format": "{{payload.properties.timeseries[1].data.next_1_hours.details.precipitation_amount}}mm",
        "layout": "row-spread",
        "className": "",
        "x": 150,
        "y": 280,
        "wires": []
    },
    {
        "id": "fdb6a5c6c2b5693c",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "yr_current_humidity0",
        "func": "// GET VARIABLEN\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\n// FUNKTION\nyr_current_humidity = msg.payload.properties.timeseries[0].data.instant.details.relative_humidity;\nyr_current_humidity = `{\n    \"yr_humidity\": ${yr_current_humidity}, \n    \"time\": ${msg.topic}\n}`;\n\n// SET VARIABLEN\nglobal.set('yr_current_humidity', yr_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 900,
        "wires": [
            [
                "e6d48859275e8517"
            ]
        ]
    },
    {
        "id": "e6d48859275e8517",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 900,
        "wires": []
    },
    {
        "id": "eaf1f807bea303fd",
        "type": "comment",
        "z": "2b74e16d31657d5a",
        "name": "GLOBAL",
        "info": "",
        "x": 620,
        "y": 740,
        "wires": []
    },
    {
        "id": "a095cad4676bd7ad",
        "type": "cronplus",
        "z": "2b74e16d31657d5a",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "yr",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 420,
        "wires": [
            [
                "590d8f2ed995f3ba"
            ]
        ]
    },
    {
        "id": "e81e682f2313ca26",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 460,
        "wires": []
    },
    {
        "id": "590d8f2ed995f3ba",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "yr_cron",
        "func": "// GET VARIABLEN\nlet yr_cron = flow.get('yr_cron') || 0;\n\n// FUNKTION\nyr_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('yr_cron', yr_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 420,
        "wires": [
            [
                "e81e682f2313ca26",
                "893534ff98749181"
            ]
        ]
    },
    {
        "id": "c87cc8b8bd4a04e3",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "rain2",
        "label": "",
        "format": "{{payload.properties.timeseries[2].data.next_1_hours.details.precipitation_amount}}mm",
        "layout": "row-spread",
        "className": "",
        "x": 150,
        "y": 320,
        "wires": []
    },
    {
        "id": "f96bd3376c4b53dd",
        "type": "ui_text",
        "z": "2b74e16d31657d5a",
        "group": "0e8da3195e8b5a32",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "rain3",
        "label": "",
        "format": "{{payload.properties.timeseries[3].data.next_1_hours.details.precipitation_amount}}mm",
        "layout": "row-spread",
        "className": "",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "964d14d0b226903e",
        "type": "function",
        "z": "2b74e16d31657d5a",
        "name": "yr_current_hum0",
        "func": "// GET VARIABLEN\nlet yr_current_hum = global.get('yr_current_hum') || 0;\n\n// FUNKTION\nyr_current_hum = msg.payload.properties.timeseries[1].data.instant.details.relative_humidity;\nyr_current_hum = `{\n    \"yr_hum\": ${yr_current_hum}, \n    \"time\": ${msg.topic}\n}`;\n\n// SET VARIABLEN\nglobal.set('yr_current_hum', yr_current_hum);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_current_hum;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 840,
        "wires": [
            [
                "3128364a3a3847ed"
            ]
        ]
    },
    {
        "id": "3128364a3a3847ed",
        "type": "debug",
        "z": "2b74e16d31657d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 840,
        "wires": []
    },
    {
        "id": "6b09622327b5bc11",
        "type": "inject",
        "z": "f04b5aab4dbbe0ce",
        "name": "1 Stunde",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "ac2aae5cb9302f1e"
            ]
        ]
    },
    {
        "id": "ac2aae5cb9302f1e",
        "type": "http request",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.weatherstack.com/current?access_key=84559252ac9f4227541753cc2f05924a&query=Berlin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "07954e9cee129f9e",
                "21f5e72e238425c1"
            ]
        ]
    },
    {
        "id": "07954e9cee129f9e",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "func": "msg.payload = msg.payload.current.temperature;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "41313722bc31bf0a",
                "abd8736b62f19848",
                "f9da677b5afe9f98"
            ]
        ]
    },
    {
        "id": "41313722bc31bf0a",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "abd8736b62f19848",
        "type": "ui_text",
        "z": "f04b5aab4dbbe0ce",
        "group": "69fad70e826d02b4",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "weatherstack",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "092c1a89b5351c83",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "INIT",
        "info": "",
        "x": 290,
        "y": 200,
        "wires": []
    },
    {
        "id": "2f3cd8780bda46ca",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "Request",
        "info": "",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "46a7352a0f1a3064",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "SET",
        "info": "",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "dba96ba2e0e4adbc",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "View",
        "info": "",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "f9da677b5afe9f98",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "ws_current_temp",
        "func": "// GET VARIABLEN\nlet ws_current_temp = global.get('ws_current_temp') || 0;\n\n// FUNKTION\nws_current_temp = msg.payload;\nws_current_temp = `{\n    \"ws_temp\": ${ws_current_temp}, \n    \"time\": ${msg.topic}\n}`;\n\n// SET VARIABLEN\nglobal.set('ws_current_temp', ws_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ws_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "ac6f319af1e7e848"
            ]
        ]
    },
    {
        "id": "ac6f319af1e7e848",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 380,
        "wires": []
    },
    {
        "id": "0d99f7aba98aff48",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "GLOBAL",
        "info": "",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "2ae76b95f1044477",
        "type": "cronplus",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "ws",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 300,
        "y": 320,
        "wires": [
            [
                "b1f687238f78ce0b"
            ]
        ]
    },
    {
        "id": "b1f687238f78ce0b",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "ws_cron",
        "func": "// GET VARIABLEN\nlet ws_cron = flow.get('ws_cron') || 0;\n\n// FUNKTION\nws_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('ws_cron', ws_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ws_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "12dc50e3c6145960",
                "ac2aae5cb9302f1e"
            ]
        ]
    },
    {
        "id": "12dc50e3c6145960",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "21f5e72e238425c1",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "9fc393f045c758ed",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherbit-v1-mashape.p.rapidapi.com\"};\nmsg.url = \"https://weatherbit-v1-mashape.p.rapidapi.com/current?lon=13.4105&lat=52.5244\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 260,
        "wires": [
            [
                "a14a4c69cd41e9ae"
            ]
        ]
    },
    {
        "id": "a14a4c69cd41e9ae",
        "type": "http request",
        "z": "01666d2621fc3afa",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 260,
        "wires": [
            [
                "b7a93cb3a7868af0",
                "d44723fa7c422318",
                "2382e0cc0f24b2e5",
                "43f7d86adad1b797"
            ]
        ]
    },
    {
        "id": "b7a93cb3a7868af0",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 300,
        "wires": []
    },
    {
        "id": "d44723fa7c422318",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data[0].app_temp",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 180,
        "wires": []
    },
    {
        "id": "cb5a5cc417298a99",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "INIT",
        "info": "",
        "x": 130,
        "y": 220,
        "wires": []
    },
    {
        "id": "1b5e4afa3b170a0f",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "Request",
        "info": "",
        "x": 500,
        "y": 220,
        "wires": []
    },
    {
        "id": "8cc5652465fce225",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "SET",
        "info": "",
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "75eb60889bdae0ba",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "View",
        "info": "",
        "x": 890,
        "y": 220,
        "wires": []
    },
    {
        "id": "92556ecc9f50d989",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "GLOBAL",
        "info": "",
        "x": 900,
        "y": 340,
        "wires": []
    },
    {
        "id": "2382e0cc0f24b2e5",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "wb_current_temp",
        "func": "// GET VARIABLEN\nlet wb_current_temp = global.get('wb_current_temp') || 0;\n\n// FUNKTION\nwb_current_temp = msg.payload.data[0].app_temp;\nwb_current_temp = `{\n    \"wb_temp\": ${wb_current_temp}, \n    \"time\": ${msg.cronplus.triggerTimestamp}\n}`;\n\n// SET VARIABLEN\nglobal.set('wb_current_temp', wb_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 380,
        "wires": [
            [
                "a68b3b7e77f976f2"
            ]
        ]
    },
    {
        "id": "a68b3b7e77f976f2",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 380,
        "wires": []
    },
    {
        "id": "fb5eb9c38bcdf113",
        "type": "cronplus",
        "z": "01666d2621fc3afa",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWB",
                "topic": "wb",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 260,
        "wires": [
            [
                "7dd493c04a4c341a"
            ]
        ]
    },
    {
        "id": "7dd493c04a4c341a",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "wb_cron",
        "func": "// GET VARIABLEN\nlet wb_cron = flow.get('wb_cron') || 0;\n\n// FUNKTION\nwb_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('wb_cron', wb_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 260,
        "wires": [
            [
                "1f6dd478df430960",
                "9fc393f045c758ed"
            ]
        ]
    },
    {
        "id": "1f6dd478df430960",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 320,
        "wires": []
    },
    {
        "id": "43f7d86adad1b797",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "wb_current_humidity",
        "func": "// GET VARIABLEN\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\n\n// FUNKTION\nwb_current_humidity = msg.payload.data[0].rh;\nwb_current_humidity = `{\n    \"wb_hum\": ${wb_current_humidity}, \n    \"time\": ${msg.cronplus.triggerTimestamp}\n}`;\n\n// SET VARIABLEN\nglobal.set('wb_current_humidity', wb_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 420,
        "wires": [
            [
                "18e7a5cac035c554"
            ]
        ]
    },
    {
        "id": "18e7a5cac035c554",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 420,
        "wires": []
    },
    {
        "id": "646b01f96609ebbe",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"};\nmsg.url = \"https://weatherapi-com.p.rapidapi.com/current.json?q=52.5244,13.4105\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 260,
        "wires": [
            [
                "3f79909836ed09f1"
            ]
        ]
    },
    {
        "id": "3f79909836ed09f1",
        "type": "http request",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 770,
        "y": 260,
        "wires": [
            [
                "13b963269b6532f9",
                "fbeac6943a9043dd",
                "6775d5cad1537bbd",
                "f77d1706f7e71d10"
            ]
        ]
    },
    {
        "id": "13b963269b6532f9",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "fbeac6943a9043dd",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.current.temp_c",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 180,
        "wires": []
    },
    {
        "id": "200d75e9013e74a6",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "INIT",
        "info": "",
        "x": 190,
        "y": 220,
        "wires": []
    },
    {
        "id": "b92992658d70e857",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "Request",
        "info": "",
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "7b785326b7600a34",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "SET",
        "info": "",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "cfc8fa85dd592ec9",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "View",
        "info": "",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "cb48c526d4ba95ee",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "GLOBAL",
        "info": "",
        "x": 1140,
        "y": 300,
        "wires": []
    },
    {
        "id": "e1a53dfb4bf6bced",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "GLOBAL",
        "info": "",
        "x": 960,
        "y": 360,
        "wires": []
    },
    {
        "id": "6775d5cad1537bbd",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "wa_current_temp",
        "func": "// GET VARIABLEN\nlet wa_current_temp = global.get('wa_current_temp') || 0;\n\n// FUNKTION\nwa_current_temp = msg.payload.current.temp_c;\nwa_current_temp = `{\n    \"wa_temp\": ${wa_current_temp}, \n    \"time\": ${msg.topic}\n}`;\n\n// SET VARIABLEN\nglobal.set('wa_current_temp', wa_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 400,
        "wires": [
            [
                "34a188623c90fb94"
            ]
        ]
    },
    {
        "id": "34a188623c90fb94",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 400,
        "wires": []
    },
    {
        "id": "6220cde3df7d1ddc",
        "type": "cronplus",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWA",
                "topic": "wa",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "2c337303eba93127"
            ]
        ]
    },
    {
        "id": "2c337303eba93127",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "wa_cron",
        "func": "// GET VARIABLEN\nlet wa_cron = flow.get('wa_cron') || 0;\n\n// FUNKTION\nwa_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('wa_cron', wa_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "8dd1d6a468dbf3f6",
                "646b01f96609ebbe"
            ]
        ]
    },
    {
        "id": "8dd1d6a468dbf3f6",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 320,
        "wires": []
    },
    {
        "id": "f77d1706f7e71d10",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "wa_current_humidity",
        "func": "// GET VARIABLEN\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\n\n// FUNKTION\nwa_current_humidity = msg.payload.current.humidity;\nwa_current_humidity = `{\n    \"wa_hum\": ${wa_current_humidity}, \n    \"time\": ${msg.cronplus.triggerTimestamp}\n}`;\n\n// SET VARIABLEN\nglobal.set('wa_current_humidity', wa_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 460,
        "wires": [
            [
                "13fb44c0f8577813"
            ]
        ]
    },
    {
        "id": "13fb44c0f8577813",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 460,
        "wires": []
    },
    {
        "id": "4aea6f5063f935e3",
        "type": "mysql",
        "z": "c68bf3193e71610e",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "740e867aed664593",
                "210e2760d418e2aa"
            ]
        ]
    },
    {
        "id": "740e867aed664593",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "5d07d43f8bf6e395",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "SELECT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "0f67a0a184c3efca"
            ]
        ]
    },
    {
        "id": "0f67a0a184c3efca",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "getSQL Query",
        "func": "msg.topic = \"SELECT * FROM `nodered`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "6cbe7d40d558f27a",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 280,
        "wires": [
            [
                "165e492e4664f317"
            ]
        ]
    },
    {
        "id": "165e492e4664f317",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "insertSQL Query",
        "func": "msg.topic = \"INSERT INTO `nodered` (`offerer`) VALUES ('ws')\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "bb53c9e95dcd0246",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "updateSQL Query",
        "func": "msg.topic = \"UPDATE `nodered` SET `offerer` = 'wa' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "12c48c8e29fed744",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "bb53c9e95dcd0246"
            ]
        ]
    },
    {
        "id": "210e2760d418e2aa",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "",
        "func": "if (msg.payload.warningStatus === undefined) {\n    msg.payload = `SELECT ...`;\n} else {\n    msg.payload = msg.payload.warningStatus;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 280,
        "wires": [
            [
                "de016b4fde2d751b"
            ]
        ]
    },
    {
        "id": "de016b4fde2d751b",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "d971e559aec57337",
        "type": "kasa",
        "z": "75ec988a5e12b304",
        "name": "192.168.178.36",
        "device": "192.168.178.36",
        "interval": 60000,
        "eventInterval": 15000,
        "payload": "getInfo",
        "payloadType": "info",
        "debug": true,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "f0913c68ab6def14"
            ]
        ]
    },
    {
        "id": "f0913c68ab6def14",
        "type": "debug",
        "z": "75ec988a5e12b304",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "912ff37c20b44a4f",
        "type": "inject",
        "z": "75ec988a5e12b304",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "d971e559aec57337"
            ]
        ]
    },
    {
        "id": "94f62a1a41c10a09",
        "type": "comment",
        "z": "bd5857c13bc1e1e4",
        "name": "Broker / Server",
        "info": "",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "8659d414c5a82052",
        "type": "function",
        "z": "bd5857c13bc1e1e4",
        "name": "payloadOpject",
        "func": "// GET VARIABLEN\nlet payloadOpject = flow.get('payloadOpject') || 0;\npayloadOpject = msg.payload.packet.payload;\nlet payloadOpjectLenght = msg.payload.packet.payload.length;\n\nlet payloadTopic = msg.payload.packet.topic;\n\nconst now = new Date();\nconst d = str_pad(now.getDate());\nconst m = str_pad(now.getMonth());\nconst y = now.getFullYear();\n\nconst ho = str_pad(now.getHours());\nconst mi = str_pad(now.getMinutes());\nconst se = str_pad(now.getSeconds());\n\n// FUNKTION\nfunction str_pad(n) {\n    return String(\"00\" + n).slice(-2);\n}\n\n\nif(payloadTopic.substring(0, 1) === \"$\") {\n    return;\n} else {\n    payloadOpject = `${ho}:${mi}:${se} ${d}.${m}.${y}<br><span style=\"font-weight:700;\">${payloadTopic} : ${payloadOpject[payloadOpjectLenght - 1]}</span>`;\n}\n\n// SET VARIABLEN\nflow.set('payloadOpject', payloadOpject);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = payloadOpject;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 360,
        "wires": [
            [
                "ded38104e53bcda5",
                "fb0b1fa29ce9779b",
                "53c08854af373f83"
            ]
        ]
    },
    {
        "id": "ded38104e53bcda5",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 360,
        "wires": []
    },
    {
        "id": "fb0b1fa29ce9779b",
        "type": "function",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "func": "// GET VARIABLEN\nlet payloadHistory = flow.get('payloadHistory') || [];\npayloadHistory = msg.payload;\n\nlet viewCount = 10;\n//let now = Date();\n//let nowDate = now.getTime();\n\n/*if(typeof payloadArray === 'undefined') {\n    let payloadArray = [];\n}*/\n//\n\n// FUNKTION\n//payloadArray = payloadHistory.length;\nlet payloadArray = payloadHistory;\n\n/*\nif(payloadArray.length <= viewCount) {\n    payloadArray = payloadArray.push(payloadHistory);\n}*/\n\npayloadHistory = payloadArray;\n\n// SET VARIABLEN\nflow.set('payloadHistory', payloadHistory);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = payloadHistory;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 260,
        "wires": [
            [
                "8a0e605916a7bcc2"
            ]
        ]
    },
    {
        "id": "8a0e605916a7bcc2",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 260,
        "wires": []
    },
    {
        "id": "eab258cb87249986",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 400,
        "wires": []
    },
    {
        "id": "551509987bdc5a10",
        "type": "comment",
        "z": "bd5857c13bc1e1e4",
        "name": "View hello",
        "info": "",
        "x": 1000,
        "y": 400,
        "wires": []
    },
    {
        "id": "75a940421ea4664a",
        "type": "comment",
        "z": "bd5857c13bc1e1e4",
        "name": "View MQTT",
        "info": "",
        "x": 1170,
        "y": 220,
        "wires": []
    },
    {
        "id": "53c08854af373f83",
        "type": "mqtt out",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "topic": "history",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1330,
        "y": 380,
        "wires": []
    },
    {
        "id": "751d9ad35d5daea0",
        "type": "mqtt in",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "topic": "history",
        "qos": "2",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 530,
        "y": 600,
        "wires": [
            [
                "a063c892800f2a04"
            ]
        ]
    },
    {
        "id": "a063c892800f2a04",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 600,
        "wires": []
    },
    {
        "id": "2ef0a3a0cd96529d",
        "type": "file",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "filename": "data/new.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 540,
        "y": 500,
        "wires": [
            [
                "9e5eccd5885f9229"
            ]
        ]
    },
    {
        "id": "3129aa32ec9c8423",
        "type": "function",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin') || 0;\nlet tempOptMinSetMin = flow.get('tempOptMinSetMin') || 16;\nlet tempOptMinSetMax = flow.get('tempOptMinSetMax') || 17;\n\nlet tempOptimal = flow.get('tempOptimal') || 20;\nlet tempOptimalSetMin = flow.get('tempOptimalSetMin') || 18;\nlet tempOptimalSetMax = flow.get('tempOptimalSetMax') || 22;\n\nlet tempOptMax = flow.get('tempOptMax') || 24;\nlet tempOptMaxSetMin = flow.get('tempOptMaxSetMin') || 23;\nlet tempOptMaxSetMax = flow.get('tempOptMaxSetMax') || 30;\n\n\n// SET VARIABLEN\nflow.set('tempOptMin', tempOptMin);\n\n\nmsg.payload = { \n    \"tempOptMin\": `${tempOptMin}`,\n    \"tempOptMinSetMin\": tempOptMinSetMin, \n    \"tempOptMinSetMax\": tempOptMinSetMax,\n    \"tempOptimal\": tempOptimal,\n    \"tempOptimalSetMin\": tempOptMaxSetMin,\n    \"tempOptimalSetMax\": tempOptMaxSetMax,\n    \"tempOptMax\": 24,\n    \"tempOptMaxSetMin\": 23, \n    \"tempOptMaxSetMax\": 30\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "2ef0a3a0cd96529d"
            ]
        ]
    },
    {
        "id": "9e5eccd5885f9229",
        "type": "file in",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "filename": "data/new.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 760,
        "y": 500,
        "wires": [
            [
                "46ed1b785cc607e7"
            ]
        ]
    },
    {
        "id": "418762b7ad1daa17",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.tempOptMinSetMin",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 460,
        "wires": []
    },
    {
        "id": "46ed1b785cc607e7",
        "type": "json",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 500,
        "wires": [
            [
                "418762b7ad1daa17",
                "6c2b57d172fb1f38",
                "7a9d005b99bb9559",
                "9fb33ca8f9253073"
            ]
        ]
    },
    {
        "id": "6c2b57d172fb1f38",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 420,
        "wires": []
    },
    {
        "id": "7a9d005b99bb9559",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.tempOptMinSetMax",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 500,
        "wires": []
    },
    {
        "id": "9fb33ca8f9253073",
        "type": "ui_numeric",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "label": "tempOptMin",
        "tooltip": "",
        "group": "fd4c240a0b136832",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload.tempOptMin}} Â°C",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 990,
        "y": 420,
        "wires": [
            [
                "c46480bee9d469c2",
                "c857ba77543fc180"
            ]
        ]
    },
    {
        "id": "c46480bee9d469c2",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 340,
        "wires": []
    },
    {
        "id": "73e7dc1a01221005",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "c857ba77543fc180",
        "type": "function",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin');\ntempOptMin = msg.payload;\n\nmsg.topic = 'tempOptMin';\nmsg.payload = tempOptMin;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 320,
        "wires": [
            [
                "73e7dc1a01221005"
            ]
        ]
    },
    {
        "id": "fe14e6cf546baf1c",
        "type": "inject",
        "z": "5790cdc8bcaea24e",
        "name": "1 Minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "minute",
        "payload": "0",
        "payloadType": "num",
        "x": 380,
        "y": 400,
        "wires": [
            [
                "72a028beb145d59f",
                "5588164fe967468b"
            ]
        ]
    },
    {
        "id": "72a028beb145d59f",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "6fcd0c5687864aac",
        "type": "ui_gauge",
        "z": "5790cdc8bcaea24e",
        "name": "timer",
        "group": "12b21ddaf27bd62f",
        "order": 12,
        "width": "6",
        "height": "4",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "colors": [
            "#00b500",
            "#d1ec04",
            "#f16f04"
        ],
        "seg1": "5",
        "seg2": "7",
        "className": "",
        "x": 810,
        "y": 400,
        "wires": []
    },
    {
        "id": "5588164fe967468b",
        "type": "function",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "func": "// GET VARIABLEN\nlet minute = global.get('minute') || 0;\n\n// FUNKTION\n//fctDate();\nif(minute < 9) {\n    minute = minute  + 1;\n} else {\n    minute = 0;\n}\n\n// SET VARIABLEN\nglobal.set('minute', minute);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = minute;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "821cce3674eda77f",
                "6fcd0c5687864aac"
            ]
        ]
    },
    {
        "id": "821cce3674eda77f",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "893e6a78511243dd",
        "type": "function",
        "z": "5790cdc8bcaea24e",
        "name": "new Date",
        "func": "// GET VARIABLEN\nlet fct = flow.get('fct') || 0;\n\n// FUNKTION\nfunction fctDate() {\n    const date = new Date();\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n}\n\n// SET VARIABLEN\nflow.set('fct', fct);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = fct;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 566.8958129882812,
        "y": 545.888916015625,
        "wires": [
            []
        ]
    },
    {
        "id": "2e460ce3a9c22965",
        "type": "ui_text",
        "z": "85f8934d68b2149c",
        "group": "3e0b974a4b41a619",
        "order": 0,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "22731ab7ecea1065",
        "type": "inject",
        "z": "85f8934d68b2149c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "f2e0792238a2f876"
            ]
        ]
    },
    {
        "id": "f2e0792238a2f876",
        "type": "function",
        "z": "85f8934d68b2149c",
        "name": "",
        "func": "msg.payload = `Raspberry Pi 4 B<br>Debian 11<br>Node-Red Projekte`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 240,
        "wires": [
            [
                "2e460ce3a9c22965"
            ]
        ]
    },
    {
        "id": "c17c5ec9e1e1d3aa",
        "type": "function",
        "z": "d01c02834d8a7616",
        "name": "",
        "func": "//let result = finalResult = Object.assign(yr,wo);\n\nlet maxSpeed = {\n    \"yr\": 25.04,\n    \"wo\": 250.06\n};\n\n\nlet sortable = [];\n\nfor (var vehicle in maxSpeed) {\n    sortable.push([vehicle, maxSpeed[vehicle]]);\n}\n\nsortable.sort(function(a, b) {\n    return a[1] - b[1];\n});\n\n//let result = finalResult = Object.assign(yr,wo);\n\nmsg.payload = sortable;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "830857b53b30ac10"
            ]
        ]
    },
    {
        "id": "5539e8bff6374d01",
        "type": "inject",
        "z": "d01c02834d8a7616",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "c17c5ec9e1e1d3aa"
            ]
        ]
    },
    {
        "id": "830857b53b30ac10",
        "type": "debug",
        "z": "d01c02834d8a7616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 480,
        "wires": []
    },
    {
        "id": "3322574ea2a15343",
        "type": "function",
        "z": "d01c02834d8a7616",
        "name": "",
        "func": "let Buch = { \n    \"yr\": [\n        {\"gfg\": \"gggg\"}\n        ],\n\t\"titel\" : \"Ab die Post\",\n\t\"value\" : \"344254565X\"\n}\n\nconst grade = {\n  \"score\": \"92\"  \n};\n\nlet result = finalResult = Object.assign(Buch,grade);\n\n//Buch = Buch.push({\"titel2\" : \"2Ab die Post\"});\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 539.8958129882812,
        "y": 544.888916015625,
        "wires": [
            []
        ]
    }
]
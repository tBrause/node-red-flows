[
    {
        "id": "a5317b738351df34",
        "type": "tab",
        "label": "Global Vars",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "33556e98e7501abf",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7cb59b2960a193b9",
        "type": "tab",
        "label": "ssh WLAN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "684857be1acaed25",
        "type": "tab",
        "label": "Batterien Sensoren",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4d6542c2a87f4380",
        "type": "tab",
        "label": "MQTT Aedes Broker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ede7465224a02eb",
        "type": "tab",
        "label": "System / Publishing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c19ab6e0657fcd70",
        "type": "tab",
        "label": "Alle System / Subscriping",
        "disabled": false,
        "info": "node-red-contrib-aedes\nnode-red-contrib-cpu",
        "env": []
    },
    {
        "id": "2b0de4698f35c235",
        "type": "tab",
        "label": "Shelly1 / Subscriping",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a18bee2e207edef3",
        "type": "tab",
        "label": "Shelly2 / Subscriping",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ee90c9931dbc2340",
        "type": "tab",
        "label": "Netatmo Global",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0e78e9a296f09ffb",
        "type": "tab",
        "label": "Netatmo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "57793960cf4cb040",
        "type": "tab",
        "label": "Raumklima / Subscriping",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0dc433aabc974959",
        "type": "tab",
        "label": "Büro Settings",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "930c0d79fd93db70",
        "type": "tab",
        "label": "Wohnzimmer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "53b67eedfb3a15c5",
        "type": "tab",
        "label": "Küche",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c17bc758ed437b81",
        "type": "tab",
        "label": "Küche NEU",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ff130a5b5bc711f1",
        "type": "tab",
        "label": "compare_data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f53df285b1e5b9ec",
        "type": "tab",
        "label": "VIEW",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f62f66d5823b7337",
        "type": "tab",
        "label": "YR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "90217cda5f3aeef5",
        "type": "tab",
        "label": "YR Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b82b95c5cd6b861b",
        "type": "tab",
        "label": "OW",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b6a2ad0c72d43d34",
        "type": "tab",
        "label": "OW Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddd61edf8d8f5ce2",
        "type": "tab",
        "label": "openweather",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "01666d2621fc3afa",
        "type": "tab",
        "label": "WB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae83296a545602f0",
        "type": "tab",
        "label": "WB Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e0f5a1e129ae9af8",
        "type": "tab",
        "label": "WeatherAPI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f73221af720ea53",
        "type": "tab",
        "label": "WA Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f04b5aab4dbbe0ce",
        "type": "tab",
        "label": "Weatherstack",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "65981bb3f5fcad13",
        "type": "tab",
        "label": "ssh",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "75ec988a5e12b304",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "bd5857c13bc1e1e4",
        "type": "tab",
        "label": "Flow 6",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "71b91177c355c22a",
        "type": "tab",
        "label": "icons",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "265d26a9b0b7bbe2",
        "type": "tab",
        "label": "Flow 4",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8688ffe19f3ee733",
        "type": "tab",
        "label": "GEO",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5790cdc8bcaea24e",
        "type": "tab",
        "label": "Time",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d01c02834d8a7616",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "58922ec04b12f464",
        "type": "tab",
        "label": "datepicker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "abd71d6eaafedaa3",
        "type": "tab",
        "label": "api nasa iss",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddc2d3725b628a90",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4cf46ae5bde8e96d",
        "type": "tab",
        "label": "Flow 7",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2fca283a32ad4608",
        "type": "tab",
        "label": "CLEAR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c68bf3193e71610e",
        "type": "tab",
        "label": "mysql",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9444fcba5df4f1f4",
        "type": "subflow",
        "name": "Inject + 5min",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "5ac2eacd77148428"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 80,
                "wires": [
                    {
                        "id": "5ac2eacd77148428",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b4a87c66d7a3665f",
        "type": "ui_tab",
        "name": "Hello",
        "icon": "",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ddf98fc90e5bf8d6",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#064165",
                "baseFont": "Courier,monospace",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "raspihell",
                "default": "#4B7930",
                "baseColor": "#f1f1f1",
                "baseFont": "Courier,monospace",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#f1f1f1",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#f1f1f1",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#bababa",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#303030",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#f1f1f1",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#404040",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "base-font": {
                    "value": "Courier,monospace"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Raspberry Pi 421",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 12,
                "gy": 12,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "d77c24919d5307b6",
        "type": "ui_group",
        "name": "CPU",
        "tab": "b4a87c66d7a3665f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": "",
        "info": "Hello CPU"
    },
    {
        "id": "95934c44be359fb7",
        "type": "ui_tab",
        "name": "Raspberry Pi 421",
        "icon": "fa-server",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "648e040fbcc0a63e",
        "type": "ui_group",
        "name": "RAM-Auslastung",
        "tab": "95934c44be359fb7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8536a9c0ef59e1eb",
        "type": "ui_group",
        "name": "Speicher",
        "tab": "b4a87c66d7a3665f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d42cba2fbf496d29",
        "type": "ui_group",
        "name": "CPU Auslastung",
        "tab": "95934c44be359fb7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c7ab99f798cdf0f",
        "type": "ui_group",
        "name": "CPU Temperatur",
        "tab": "95934c44be359fb7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7177e1bbce7a0779",
        "type": "ui_group",
        "name": "Wind",
        "tab": "5052abf10d1685d7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e70d0760bcc08d3a",
        "type": "ui_group",
        "name": "Himmel",
        "tab": "5052abf10d1685d7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "28f7dbdd3547c09e",
        "type": "ui_group",
        "name": "Temperatur",
        "tab": "5052abf10d1685d7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f697df7ca894247c",
        "type": "ui_group",
        "name": "Lüftfeuchtigkeit",
        "tab": "5052abf10d1685d7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f136cc64cd7db2e1",
        "type": "ui_group",
        "name": "info",
        "tab": "5052abf10d1685d7",
        "order": 7,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "325d7857240a0cc6",
        "type": "ui_group",
        "name": "Luftdruck",
        "tab": "5052abf10d1685d7",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5052abf10d1685d7",
        "type": "ui_tab",
        "name": "Weather",
        "icon": "fa-sun-o",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e7bef4fac1dad829",
        "type": "mqtt-broker",
        "name": "",
        "broker": "guteswetter.ddns.net",
        "port": "1883",
        "clientid": "mqtt_raspi421",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6f08daeb3892d9d2",
        "type": "ui_tab",
        "name": "Raspberry Farm",
        "icon": "fa-server",
        "order": 15,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "95082877e495bc4d",
        "type": "ui_group",
        "name": "CPU Temperatur",
        "tab": "6f08daeb3892d9d2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4fb2731161c030c4",
        "type": "ui_group",
        "name": "CPU Auslastung",
        "tab": "6f08daeb3892d9d2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7a1fd158c2b52cdd",
        "type": "ui_group",
        "name": "RAM Auslastung",
        "tab": "6f08daeb3892d9d2",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a9c83617a1d0cec3",
        "type": "ui_tab",
        "name": "Sensoren",
        "icon": "fa-thermometer-half",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "47b711e5f8cfcf96",
        "type": "ui_group",
        "name": "Shelly H&T.25 (WZ)",
        "tab": "a9c83617a1d0cec3",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0fb03d12c9eac6b4",
        "type": "ui_tab",
        "name": "Büro",
        "icon": "fa-thermometer-half",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f313c8705833350a",
        "type": "ui_group",
        "name": "Netatmo (Base)",
        "tab": "0fb03d12c9eac6b4",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "77910d3a38071c05",
        "type": "ui_group",
        "name": "Aktion",
        "tab": "0fb03d12c9eac6b4",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "109d33547ff0a425",
        "type": "ui_group",
        "name": "Einstellungen",
        "tab": "0fb03d12c9eac6b4",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3df4cdeccd180e87",
        "type": "ui_group",
        "name": "Shelly H&T.39 Küche",
        "tab": "a9c83617a1d0cec3",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4421ea5d2f4fae8e",
        "type": "ui_group",
        "name": "openweather.org",
        "tab": "d1dcec789102c3a3",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e15626a66ed17914",
        "type": "ui_tab",
        "name": "MQTT",
        "icon": "code",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fd4c240a0b136832",
        "type": "ui_group",
        "name": "Übersicht",
        "tab": "0fb03d12c9eac6b4",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fd5052c6399ba750",
        "type": "ui_group",
        "name": "MQTT Messages",
        "tab": "b4a87c66d7a3665f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d1dcec789102c3a3",
        "type": "ui_tab",
        "name": "Hidden",
        "icon": "dashboard",
        "order": 16,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "9cbad506a0556217",
        "type": "ui_group",
        "name": "hidden",
        "tab": "d1dcec789102c3a3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3da97eba3f6cdd7",
        "type": "ui_group",
        "name": "openweather.org",
        "tab": "fd4b7bc6be096b7c",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c55d5c476c4905d6",
        "type": "ui_tab",
        "name": "GEO",
        "icon": "fa-earth",
        "order": 17,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "12b21ddaf27bd62f",
        "type": "ui_group",
        "name": "Timer 10 Minuten",
        "tab": "e4f90b8f6f089017",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fd4b7bc6be096b7c",
        "type": "ui_tab",
        "name": "Forecast",
        "icon": "fa-sun-o",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "69fad70e826d02b4",
        "type": "ui_group",
        "name": "Aktuell",
        "tab": "8e5d7269710e10a7",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8e5d7269710e10a7",
        "type": "ui_tab",
        "name": "App-Vergleich",
        "icon": "fa-sun-o",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3bc48255336fdd1e",
        "type": "ui_group",
        "name": "Niederschlag",
        "tab": "5052abf10d1685d7",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "179277ed4e2f8253",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "test",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b923ae493cecb90a",
        "type": "ui_link",
        "name": "Raspberry Pi 422",
        "link": "http://raspi422.sanberlin.com:1882/",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 14
    },
    {
        "id": "3e0b974a4b41a619",
        "type": "ui_group",
        "name": "WLAN",
        "tab": "b4a87c66d7a3665f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4345da5d2dd2dc78",
        "type": "ui_group",
        "name": "Datepicker",
        "tab": "e4f90b8f6f089017",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e4f90b8f6f089017",
        "type": "ui_tab",
        "name": "Time",
        "icon": "fa-clock-o",
        "order": 18,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a46f64b14b0e509",
        "type": "ui_group",
        "name": "raspi421",
        "tab": "e15626a66ed17914",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ff7539c4741377b4",
        "type": "ui_group",
        "name": "raspi422",
        "tab": "e15626a66ed17914",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3440106554ffc41c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "mqtt",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b1c36b7a6381af37",
        "type": "ui_group",
        "name": "shellyht-702F79",
        "tab": "e15626a66ed17914",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8a88272d4f9a7f41",
        "type": "ui_group",
        "name": "Cronjobs",
        "tab": "e15626a66ed17914",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ea6c1a70d4e77a46",
        "type": "ui_group",
        "name": "shellyht-706823",
        "tab": "e15626a66ed17914",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "919f4e44dec380e0",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "raumklima",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "4a9cf85a90c59317",
        "type": "ui_tab",
        "name": "msg",
        "icon": "fa-paper-plane",
        "order": 19,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0c3e23847ca5c44f",
        "type": "ui_group",
        "name": "Form",
        "tab": "4a9cf85a90c59317",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c6081d5f03c98c7",
        "type": "configNode",
        "name": ""
    },
    {
        "id": "6854caa9cd836549",
        "type": "ui_group",
        "name": "Netatmo (Basis)",
        "tab": "efb01562e830223d",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "62de86d112dd1796",
        "type": "ui_group",
        "name": "Batterien Sensoren",
        "tab": "b4a87c66d7a3665f",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3f8bf26bf6d15640",
        "type": "ui_group",
        "name": "Netatmo Outdoor",
        "tab": "a9c83617a1d0cec3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3e0a9ab9d22346b3",
        "type": "ui_group",
        "name": "Netatmo Extra",
        "tab": "a9c83617a1d0cec3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "22b691df6f9504c3",
        "type": "ui_group",
        "name": "Büro",
        "tab": "b4a87c66d7a3665f",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "efb01562e830223d",
        "type": "ui_tab",
        "name": "Sensoren (Indoor)",
        "icon": "fa-thermometer-half",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4f638b1b01f764cd",
        "type": "ui_group",
        "name": "APIs Check Differenz",
        "tab": "b4a87c66d7a3665f",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "410f9b2957796f10",
        "type": "ui_group",
        "name": "Interval",
        "tab": "e15626a66ed17914",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2cb1854dd73f3535",
        "type": "ui_group",
        "name": "Home",
        "tab": "b4a87c66d7a3665f",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cb4132b94e48ff2c",
        "type": "ui_tab",
        "name": "Cronjobs",
        "icon": "fa-clock-o",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c91c3efabc859b5b",
        "type": "ui_group",
        "name": "Node-Red Cronjobs",
        "tab": "b4a87c66d7a3665f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d591bbb615b4fe18",
        "type": "ui_group",
        "name": "Interval",
        "tab": "b4a87c66d7a3665f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "f79c02301465b3df",
        "type": "ui_group",
        "name": "Temperatur",
        "tab": "0fb03d12c9eac6b4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "95336c470a1da5f7",
        "type": "ui_group",
        "name": "API Request",
        "tab": "cb4132b94e48ff2c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5697714fb266cca",
        "type": "ui_group",
        "name": "Vergleich",
        "tab": "cb4132b94e48ff2c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1f94dc0cd60b6d46",
        "type": "ui_group",
        "name": "Forecast",
        "tab": "cb4132b94e48ff2c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab1be0cdc9f4280c",
        "type": "ui_tab",
        "name": "View",
        "icon": "",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6163fec975554d91",
        "type": "ui_group",
        "name": "21 Uhr",
        "tab": "ab1be0cdc9f4280c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad7a4b76b6c81f5b",
        "type": "ui_group",
        "name": "18h",
        "tab": "ab1be0cdc9f4280c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "020fb88ae35ffb4a",
        "type": "ui_group",
        "name": "0h",
        "tab": "ab1be0cdc9f4280c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2915d3249cfafbe",
        "type": "ui_group",
        "name": "Outdoor & API's",
        "tab": "b4a87c66d7a3665f",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cd70fe935b292b3f",
        "type": "ui_group",
        "name": "Luftfeuchte",
        "tab": "0fb03d12c9eac6b4",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc53f78006ac9146",
        "type": "ui_group",
        "name": "APIs Check OLD",
        "tab": "b4a87c66d7a3665f",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "275a2431d292dd0b",
        "type": "ui_group",
        "name": "YR",
        "tab": "8e5d7269710e10a7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "60f0ebd00e6b60cd",
        "type": "ui_group",
        "name": "openweather",
        "tab": "8e5d7269710e10a7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65f8c5e11dd5d55d",
        "type": "ui_group",
        "name": "weatherbit",
        "tab": "8e5d7269710e10a7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9fae8a7151b26655",
        "type": "ui_group",
        "name": "Weather-Api",
        "tab": "8e5d7269710e10a7",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6843c9d76c2010bd",
        "type": "ui_group",
        "name": "Vergleich",
        "tab": "8e5d7269710e10a7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2e2cb0c53355f590",
        "type": "ui_group",
        "name": "API-Check",
        "tab": "b4a87c66d7a3665f",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "73738b1b1c08f080",
        "type": "ui_tab",
        "name": "Wohnzimmer",
        "icon": "fa-thermometer-half",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "afae9d74aa8939b3",
        "type": "ui_group",
        "name": "Temperatur °C",
        "tab": "73738b1b1c08f080",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dda6c71d7afc8b96",
        "type": "ui_group",
        "name": "Luftfeuchte %",
        "tab": "73738b1b1c08f080",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ca150b96cb248dec",
        "type": "ui_group",
        "name": "Verlauf",
        "tab": "73738b1b1c08f080",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0ab1cb1a24262bf4",
        "type": "ui_tab",
        "name": "Hausflur",
        "icon": "fa-thermometer-half",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5270da3bb1dfbe4e",
        "type": "ui_group",
        "name": "Temperatur °C",
        "tab": "0ab1cb1a24262bf4",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "45567883aec63278",
        "type": "ui_group",
        "name": "Luftfeuchte %",
        "tab": "0ab1cb1a24262bf4",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ab3161f0fa5c529",
        "type": "ui_group",
        "name": "Verlauf",
        "tab": "0ab1cb1a24262bf4",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4db58dc8f8f33f5b",
        "type": "ui_group",
        "name": "CO2",
        "tab": "0fb03d12c9eac6b4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ecb95cacf3b2b8c2",
        "type": "ui_group",
        "name": "Geräuschpegel",
        "tab": "0fb03d12c9eac6b4",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "03604adbe40ccb34",
        "type": "ui_group",
        "name": "NEU",
        "tab": "0ab1cb1a24262bf4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc7d80cc7bb13156",
        "type": "ui_group",
        "name": "Outdoor",
        "tab": "0ab1cb1a24262bf4",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fd0cbb5183778ce4",
        "type": "ui_group",
        "name": "Luftfeuchtigkeit %",
        "tab": "0ab1cb1a24262bf4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5ac2eacd77148428",
        "type": "function",
        "z": "9444fcba5df4f1f4",
        "name": "Inject and Refresh at 5 min",
        "func": "let count = flow.get('count') || 1;\n\nif(count < 60 * 5) {\n    count = count + 1;\n} else {\n    count = 1;\n}\n\n// SET VARIABLEN\nflow.set('count', count);\nmsg.payload = count;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2e8b03a3b0351b88",
        "type": "comment",
        "z": "a5317b738351df34",
        "name": "SET GLOBAL",
        "info": "",
        "x": 390,
        "y": 120,
        "wires": []
    },
    {
        "id": "5cf4624c26263a87",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "home_lon & home_lat",
        "func": "let home_lon = global.get('home_lon') || 13.4580;\nlet home_lat = global.get('home_lat') || 52.5105;\n\n// SET VARIABLEN\nglobal.set('home_lon', home_lon);\nglobal.set('home_lat', home_lat);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 160,
        "wires": [
            [
                "1ff009c8a0ebcf2f",
                "7f241027c0eb644b"
            ]
        ]
    },
    {
        "id": "72460d3af9e2d190",
        "type": "inject",
        "z": "a5317b738351df34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "5cf4624c26263a87"
            ]
        ]
    },
    {
        "id": "1ff009c8a0ebcf2f",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "home_lon",
        "func": "let home_lon = global.get('home_lon');\n\nmsg.payload = home_lon;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            [
                "5ac460a228c657b4"
            ]
        ]
    },
    {
        "id": "3897eb213e8caec8",
        "type": "inject",
        "z": "a5317b738351df34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5ac460a228c657b4",
        "type": "debug",
        "z": "a5317b738351df34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 140,
        "wires": []
    },
    {
        "id": "1b98952de7b3d4c8",
        "type": "comment",
        "z": "a5317b738351df34",
        "name": "CHECK GLOBAL",
        "info": "",
        "x": 740,
        "y": 100,
        "wires": []
    },
    {
        "id": "7f241027c0eb644b",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "home_lon",
        "func": "let home_lat = global.get('home_lat');\n\nmsg.payload = home_lat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "c79afc071de4091a"
            ]
        ]
    },
    {
        "id": "c79afc071de4091a",
        "type": "debug",
        "z": "a5317b738351df34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "4718aa4a8f0d3cd5",
        "type": "cpu",
        "z": "33556e98e7501abf",
        "name": "",
        "msgCore": true,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": true,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "1ec925bf704c346c"
            ]
        ]
    },
    {
        "id": "3f42e79e8ac85ff8",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "CPU Temperatur",
        "group": "d77c24919d5307b6",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "°C",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0086b3",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1170,
        "y": 280,
        "wires": []
    },
    {
        "id": "1ec925bf704c346c",
        "type": "switch",
        "z": "33556e98e7501abf",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "overall",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 930,
        "y": 320,
        "wires": [
            [
                "3f42e79e8ac85ff8",
                "4a89edd44df67331",
                "29f4349408fba474"
            ],
            [
                "b31fee1a06546600",
                "3fc649e48cf088e5",
                "c42340eb39f6d4c9"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "d0621049cc48f97e",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 3,
        "width": "6",
        "height": "4",
        "label": "akzeptabel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "40",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#fff70f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b31fee1a06546600",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "CPU Auslastung",
        "group": "d77c24919d5307b6",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1160,
        "y": 500,
        "wires": []
    },
    {
        "id": "3fc649e48cf088e5",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "niedrig",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "f81dbd64c34a3507"
            ]
        ]
    },
    {
        "id": "24edfbebf40ea35d",
        "type": "inject",
        "z": "33556e98e7501abf",
        "name": "5 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Float-System",
        "payloadType": "str",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "57f62c04748ae258",
                "4718aa4a8f0d3cd5",
                "d6cde956d86d9c40",
                "926b647a567b1d19",
                "70fa7dbcfe17e81d",
                "b9766971cb5b2204",
                "fa40dbe59e42ef2a",
                "d91bbe1bce4be9ed"
            ]
        ]
    },
    {
        "id": "4a89edd44df67331",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "optimal",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "d0621049cc48f97e"
            ]
        ]
    },
    {
        "id": "f81dbd64c34a3507",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "mittel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "40",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "57f62c04748ae258",
        "type": "Memory",
        "z": "33556e98e7501abf",
        "name": "mem",
        "scale": "Byte",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "738766d64012cead",
                "b52d52dbfb6806b8",
                "bf7732921d1ac471"
            ]
        ]
    },
    {
        "id": "cb9a9e86376a8470",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "RAM",
        "group": "8536a9c0ef59e1eb",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "className": "",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "baaebb1403d3f0e0",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "niedrig",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "738766d64012cead",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "totalmem",
        "func": "// GET VARIABLEN\nlet gb = flow.get('gb') || 0;\n\n// FUNKTION\nconst totalmem = msg.payload.totalmem;\nconst k = 1024;\nconst kb = Math.floor(totalmem / k);\nconst mb = Math.floor(kb / 1000);\nconst ggb = Math.floor(mb / 1000);\ngb = mb.toFixed(2);\n\n// SET VARIABLEN\nflow.set('gb', gb);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = gb;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "32c7344a264318ff"
            ]
        ]
    },
    {
        "id": "b52d52dbfb6806b8",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "freemem",
        "func": "msg.payload = msg.payload.freemem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "bf7732921d1ac471",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "memusage",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 340,
        "wires": [
            [
                "cb9a9e86376a8470",
                "baaebb1403d3f0e0",
                "5899a5d31010319e",
                "d28dccb7d7cdf41e"
            ]
        ]
    },
    {
        "id": "5899a5d31010319e",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "akzetabel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "60",
        "ymax": "80",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 720,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d28dccb7d7cdf41e",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "className": "",
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "29f4349408fba474",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "°C",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0086b3",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 200,
        "wires": []
    },
    {
        "id": "c42340eb39f6d4c9",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 420,
        "wires": []
    },
    {
        "id": "32c7344a264318ff",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "648e040fbcc0a63e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gesamtspeicher",
        "format": "{{value}} MB",
        "layout": "row-spread",
        "className": "",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "cfce94819107376c",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "344253603e176b93",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 1410,
        "y": 380,
        "wires": []
    },
    {
        "id": "8e8f9e4f11908432",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 1470,
        "y": 160,
        "wires": []
    },
    {
        "id": "d6cde956d86d9c40",
        "type": "Drives",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "8803e0f044ab2548"
            ]
        ]
    },
    {
        "id": "8803e0f044ab2548",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "",
        "func": "msg.payload = msg.payload;\n\nlet count_size = 0;\nlet count_used = 0;\nfor (const item of msg.payload) {\n    count_used = count_used + item.used;\n    count_size = count_size + item.size;\n}\n\ncount_size = count_size / 1000 / 1000;\ncount_used = count_used / 1000 / 1000;\n\n//msg.payload = `${count_size.toFixed(2)} ${count_used.toFixed(2)}`;\nmsg.payload = count_used.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 720,
        "wires": [
            [
                "4d2b18d4a1f193e1",
                "e08277d531e3753c"
            ]
        ]
    },
    {
        "id": "4d2b18d4a1f193e1",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 640,
        "wires": []
    },
    {
        "id": "e08277d531e3753c",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "SD Speicher",
        "group": "8536a9c0ef59e1eb",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "GB",
        "format": "{{value}}",
        "min": 0,
        "max": "32",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "26",
        "className": "",
        "x": 850,
        "y": 720,
        "wires": []
    },
    {
        "id": "b9766971cb5b2204",
        "type": "NetworkIntf",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 450,
        "y": 800,
        "wires": [
            [
                "f1a90f4e685dd2c5"
            ]
        ]
    },
    {
        "id": "fa40dbe59e42ef2a",
        "type": "Loadavg",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 460,
        "y": 880,
        "wires": [
            [
                "68db02adaa051cf0"
            ]
        ]
    },
    {
        "id": "70fa7dbcfe17e81d",
        "type": "Uptime",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 320,
        "y": 840,
        "wires": [
            [
                "689a5283ac74452b"
            ]
        ]
    },
    {
        "id": "926b647a567b1d19",
        "type": "OS",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 210,
        "y": 740,
        "wires": [
            [
                "3bf0dd3858817ed2"
            ]
        ]
    },
    {
        "id": "3bf0dd3858817ed2",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 130,
        "y": 640,
        "wires": []
    },
    {
        "id": "f1a90f4e685dd2c5",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 800,
        "wires": []
    },
    {
        "id": "689a5283ac74452b",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 840,
        "wires": []
    },
    {
        "id": "68db02adaa051cf0",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 900,
        "wires": []
    },
    {
        "id": "82e2a10109da5f45",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Raspberry Pi",
        "info": "",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "fdc7d4b16a4c7a50",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Hello",
        "info": "",
        "x": 1130,
        "y": 240,
        "wires": []
    },
    {
        "id": "23c6cf621a3fb2ad",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Raspberry Pi",
        "info": "",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "c183f09ebc2e7643",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Hello",
        "info": "",
        "x": 1130,
        "y": 460,
        "wires": []
    },
    {
        "id": "8a3add683ac180cf",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "d77c24919d5307b6",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Temperatur",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1290,
        "y": 240,
        "wires": []
    },
    {
        "id": "abf38470515d8e9f",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "d77c24919d5307b6",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Auslastung",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1290,
        "y": 460,
        "wires": []
    },
    {
        "id": "a043481757816d71",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "8536a9c0ef59e1eb",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "RAM",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "c5b58f703a9a420d",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "8536a9c0ef59e1eb",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "SDCard",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 840,
        "y": 680,
        "wires": []
    },
    {
        "id": "d91bbe1bce4be9ed",
        "type": "mqtt out",
        "z": "33556e98e7501abf",
        "name": "",
        "topic": "/interval/raspi421/system/",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 410,
        "y": 200,
        "wires": []
    },
    {
        "id": "d0b0a5aa745ff5f0",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo iwconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 220,
        "wires": [
            [
                "6e169b816f9649b1",
                "f6cf14bfdf23e79e",
                "d9277784c62dabf3",
                "480bc7d3d7d38360"
            ],
            [],
            []
        ]
    },
    {
        "id": "76b2951b6faa4974",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "5min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "d0b0a5aa745ff5f0",
                "778d3643f976ddd0"
            ]
        ]
    },
    {
        "id": "6e169b816f9649b1",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "let wlan = msg.payload.search(\"guteswetter\");\nlet result = 0;\nif(wlan >= 0) {\n    result = 1;\n}\n\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737.1041870117188,
        "y": 220.7777099609375,
        "wires": [
            []
        ]
    },
    {
        "id": "f6cf14bfdf23e79e",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "const path = msg.payload.split(\"\\n\");\n\nlet level = 0;\nlevel = path[6];\n\nlevel = level.trim();\n\nlet start = level.search(\"Signal level\");\nstart = start + 14;\nlet end = 2;\n//let end = level.length - 14;\n\nlevel = level.substr(start, end);\nlet level_text = `-${level}`;\n\nmsg.payload = parseInt(level);\nmsg.topic = level_text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737.1041870117188,
        "y": 260.7777099609375,
        "wires": [
            [
                "59c0ea0f48799daa",
                "cdc8195b63a5ee3e"
            ]
        ]
    },
    {
        "id": "59c0ea0f48799daa",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 907.1041870117188,
        "y": 180.7777099609375,
        "wires": []
    },
    {
        "id": "2f14df800b8d0cd6",
        "type": "comment",
        "z": "7cb59b2960a193b9",
        "name": "WLAN",
        "info": "",
        "x": 187.10418701171875,
        "y": 160.7777099609375,
        "wires": []
    },
    {
        "id": "cdc8195b63a5ee3e",
        "type": "ui_gauge",
        "z": "7cb59b2960a193b9",
        "name": "gauge_signal_level",
        "group": "3e0b974a4b41a619",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "-dBm",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "className": "",
        "x": 1207.1041870117188,
        "y": 240.7777099609375,
        "wires": []
    },
    {
        "id": "d9277784c62dabf3",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "const path = msg.payload.split(\"\\n\");\n\nlet bitrate = 0;\nbitrate = path[2];\n\nbitrate = bitrate.trim();\n\nlet start = bitrate.search(\"Bit Rate\");\nstart = start;\nlet end = 4;\n//let end = level.length - 14;\n\nbitrate = bitrate.substr(9, end);\n\nmsg.payload = parseInt(bitrate);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737.1041870117188,
        "y": 300.7777099609375,
        "wires": [
            [
                "e658a0f9b6f5fd80",
                "5e139f7e05f9a30f"
            ]
        ]
    },
    {
        "id": "e658a0f9b6f5fd80",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "5e139f7e05f9a30f",
        "type": "ui_gauge",
        "z": "7cb59b2960a193b9",
        "name": "gauge_bitrate",
        "group": "3e0b974a4b41a619",
        "order": 4,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "Mb/s",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1197.1041870117188,
        "y": 360.7777099609375,
        "wires": []
    },
    {
        "id": "0449a507ee37754e",
        "type": "ui_text",
        "z": "7cb59b2960a193b9",
        "group": "3e0b974a4b41a619",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Signal level",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1187.1041870117188,
        "y": 200.7777099609375,
        "wires": []
    },
    {
        "id": "da294bf7f0741ef9",
        "type": "ui_text",
        "z": "7cb59b2960a193b9",
        "group": "3e0b974a4b41a619",
        "order": 2,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "bitrate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1167.1041870117188,
        "y": 320.7777099609375,
        "wires": []
    },
    {
        "id": "480bc7d3d7d38360",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "const path = msg.payload.split(\"\\n\");\n\nlet bitrate = 0;\nbitrate = path[2];\n/*\nbitrate = bitrate.trim();\n\nlet start = bitrate.search(\"Bit Rate\");\nstart = start;\nlet end = 14;\n//let end = level.length - 14;\n*/\n\n//bitrate = bitrate.substr(9, end);\n\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 754.8958129882812,
        "y": 429.8888854980469,
        "wires": [
            [
                "59f41cf961927afc"
            ]
        ]
    },
    {
        "id": "59f41cf961927afc",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 480,
        "wires": []
    },
    {
        "id": "a3e717f32990a62f",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "c182fcc14bf2f722"
            ]
        ]
    },
    {
        "id": "c182fcc14bf2f722",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo ls -l /var/log/dpkg.log*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 680,
        "wires": [
            [
                "cd012cfda772cdb1"
            ],
            [],
            []
        ]
    },
    {
        "id": "cd012cfda772cdb1",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 680,
        "wires": []
    },
    {
        "id": "c3caafb0dcfec294",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/dpkg.log.1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 740,
        "wires": [
            [
                "827d5bb6fe5dbc85"
            ],
            [],
            []
        ]
    },
    {
        "id": "8c67a3b3d379a4f3",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "c3caafb0dcfec294"
            ]
        ]
    },
    {
        "id": "827d5bb6fe5dbc85",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 800,
        "wires": []
    },
    {
        "id": "a9d0066dc2260185",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 900,
        "wires": [
            [
                "9eab52a830803025"
            ]
        ]
    },
    {
        "id": "9eab52a830803025",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo apt update",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 900,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "54d8b78c3c6b35c0",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 540,
        "wires": [
            [
                "7f438531472e4668"
            ]
        ]
    },
    {
        "id": "7f438531472e4668",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo ls /var/log*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 560,
        "wires": [
            [
                "5f2fe0eca99f751c"
            ],
            [],
            []
        ]
    },
    {
        "id": "5f2fe0eca99f751c",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "dc9dc1ef5ec117d8",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/user.log.1*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 1040,
        "wires": [
            [
                "04ba9fd91b036e77"
            ],
            [],
            []
        ]
    },
    {
        "id": "04ba9fd91b036e77",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4799413372973e35",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1040,
        "wires": [
            [
                "dc9dc1ef5ec117d8"
            ]
        ]
    },
    {
        "id": "98fb41aa9161bae0",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1120,
        "wires": [
            [
                "5be62e37d864ffcd"
            ]
        ]
    },
    {
        "id": "5be62e37d864ffcd",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/boot.log.1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 500,
        "y": 1120,
        "wires": [
            [
                "d0cee11a04ad1644"
            ],
            [],
            []
        ]
    },
    {
        "id": "d0cee11a04ad1644",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8f7247081c7fcfa5",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1220,
        "wires": [
            [
                "1e4ad9c673d71c1c"
            ]
        ]
    },
    {
        "id": "1e4ad9c673d71c1c",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/daemon.log.1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "1e43fdcc3e14b5ab"
            ],
            [],
            []
        ]
    },
    {
        "id": "1e43fdcc3e14b5ab",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1200,
        "wires": []
    },
    {
        "id": "4c9230c91b6ee6a1",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1320,
        "wires": [
            [
                "03a689ba1f938e9f"
            ]
        ]
    },
    {
        "id": "03a689ba1f938e9f",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/debug",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 1320,
        "wires": [
            [
                "10ff44aaec572302"
            ],
            [],
            []
        ]
    },
    {
        "id": "10ff44aaec572302",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b22fdeeec016733e",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 600,
        "wires": [
            [
                "b16fe0cb10d792e5"
            ]
        ]
    },
    {
        "id": "b16fe0cb10d792e5",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo ls /var/log/mysql/",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "8b66cc94589f2f67"
            ],
            [],
            []
        ]
    },
    {
        "id": "8b66cc94589f2f67",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "778d3643f976ddd0",
        "type": "mqtt out",
        "z": "7cb59b2960a193b9",
        "name": "",
        "topic": "/interval/raspi421/wlan",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 400,
        "y": 160,
        "wires": []
    },
    {
        "id": "3cb05d7ca5c73091",
        "type": "ui_text",
        "z": "684857be1acaed25",
        "group": "62de86d112dd1796",
        "order": 1,
        "width": "1",
        "height": "1",
        "name": "icon battery-half ht1",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 310,
        "y": 200,
        "wires": []
    },
    {
        "id": "1c2b1ca9a020827b",
        "type": "ui_text",
        "z": "684857be1acaed25",
        "group": "62de86d112dd1796",
        "order": 4,
        "width": "1",
        "height": "1",
        "name": "icon battery-half ht2",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 310,
        "y": 260,
        "wires": []
    },
    {
        "id": "9be6895b7b74d851",
        "type": "ui_text",
        "z": "684857be1acaed25",
        "group": "62de86d112dd1796",
        "order": 7,
        "width": "1",
        "height": "1",
        "name": "icon battery-half na1",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 320,
        "y": 320,
        "wires": []
    },
    {
        "id": "4983a072c93c3fdc",
        "type": "aedes broker",
        "z": "4d6542c2a87f4380",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "7f89c7d4cdd4784a"
            ],
            []
        ]
    },
    {
        "id": "c0090cd98f35aa7b",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "Broker / Server",
        "info": "",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "b16d6369307ce61c",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "2b5ce76ecbde3793",
                "1980f960c21f47b4",
                "d515e362ccf713f5"
            ]
        ]
    },
    {
        "id": "60bfac4f931bcae2",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "View MQTT",
        "info": "",
        "x": 1430,
        "y": 740,
        "wires": []
    },
    {
        "id": "3f2d18c5d6d35607",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "9cbad506a0556217",
        "order": 2,
        "width": 6,
        "height": 4,
        "name": "lastInfos",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1840,
        "y": 360,
        "wires": []
    },
    {
        "id": "8bfde98df3e35425",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "View: hidden",
        "info": "",
        "x": 1850,
        "y": 280,
        "wires": []
    },
    {
        "id": "2b5ce76ecbde3793",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "f1d72755676129fa",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "467f575f43c6f21a",
                "0cab357455718e10"
            ]
        ]
    },
    {
        "id": "467f575f43c6f21a",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e2b17ccff04e174d",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "raspi422/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 940,
        "wires": [
            [
                "3a8ecf7af3024650"
            ]
        ]
    },
    {
        "id": "0856840dacb90bc7",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "7a46f64b14b0e509",
        "order": 1,
        "width": "6",
        "height": "5",
        "name": "raspi421",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1420,
        "y": 860,
        "wires": []
    },
    {
        "id": "d198eeb4dad2ba81",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "ff7539c4741377b4",
        "order": 1,
        "width": "6",
        "height": "5",
        "name": "raspi422",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1420,
        "y": 940,
        "wires": []
    },
    {
        "id": "1980f960c21f47b4",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "INSERT INTO `msg` ...",
        "func": "// GET VARIABLEN\nlet payloadOpject = flow.get('payloadObject') || 0;\npayloadObject = msg.payload;\nlet payloadObjectLenght = msg.payload.length;\n\nlet payloadValue = msg.payload;\nlet payloadTopic = msg.topic;\nlet payloadId = msg._msgid;\n\nlet sql = \"\";\nif(payloadTopic.substring(0, 1) !== \"$\") {\n    sql = \"INSERT INTO `msg` (`msg_topic`, `msg_payload`) VALUE ('\" + payloadTopic + \"', '\" + payloadValue + \"')\";\n}\n\nmsg.topic = sql;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "6551306139d8bb5b",
                "dacf3af2044d049b"
            ]
        ]
    },
    {
        "id": "6551306139d8bb5b",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "dacf3af2044d049b",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 830,
        "y": 320,
        "wires": [
            [
                "d35270220e4e057b",
                "bb1d7691e11f4f54"
            ]
        ]
    },
    {
        "id": "d35270220e4e057b",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "7163c158cf1fac2d",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'raspi421/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 860,
        "wires": [
            [
                "9ab3fb255a44b12f"
            ]
        ]
    },
    {
        "id": "9ab3fb255a44b12f",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1030,
        "y": 860,
        "wires": [
            [
                "fc9fa50b109b657c",
                "616c432959aa55dc"
            ]
        ]
    },
    {
        "id": "6a97b45963a3ca56",
        "type": "inject",
        "z": "4d6542c2a87f4380",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "7163c158cf1fac2d",
                "db6a415d65ff19d9",
                "e3fd98d77a2eeea0",
                "337084a860b1beeb"
            ]
        ]
    },
    {
        "id": "fc9fa50b109b657c",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 700,
        "wires": []
    },
    {
        "id": "616c432959aa55dc",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 860,
        "wires": [
            [
                "0c76ffe2ad0a860b",
                "0856840dacb90bc7"
            ]
        ]
    },
    {
        "id": "0c76ffe2ad0a860b",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 800,
        "wires": []
    },
    {
        "id": "fbd23bdcaebd1c1a",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 860,
        "wires": [
            [
                "7163c158cf1fac2d"
            ]
        ]
    },
    {
        "id": "1440527318e752e4",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "raspi421/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 860,
        "wires": [
            [
                "fbd23bdcaebd1c1a"
            ]
        ]
    },
    {
        "id": "3a8ecf7af3024650",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 940,
        "wires": [
            [
                "db6a415d65ff19d9"
            ]
        ]
    },
    {
        "id": "db6a415d65ff19d9",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'raspi422/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 940,
        "wires": [
            [
                "4a6baafec8246f15"
            ]
        ]
    },
    {
        "id": "4a6baafec8246f15",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1030,
        "y": 940,
        "wires": [
            [
                "852d48cafbfc2556"
            ]
        ]
    },
    {
        "id": "852d48cafbfc2556",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 940,
        "wires": [
            [
                "d198eeb4dad2ba81"
            ]
        ]
    },
    {
        "id": "e3fd98d77a2eeea0",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'shellies/shellyht-702F79/sensor/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1080,
        "wires": [
            [
                "cf38df6cc83a2bc3"
            ]
        ]
    },
    {
        "id": "cf38df6cc83a2bc3",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1070,
        "y": 1080,
        "wires": [
            [
                "792616d30e4880cc"
            ]
        ]
    },
    {
        "id": "792616d30e4880cc",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1080,
        "wires": [
            [
                "831a07b0dbaecb62"
            ]
        ]
    },
    {
        "id": "831a07b0dbaecb62",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "b1c36b7a6381af37",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "shellyht-702F79",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1480,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c8bc3852f0434f62",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1200,
        "wires": [
            [
                "547304bc513fcc44"
            ]
        ]
    },
    {
        "id": "337084a860b1beeb",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'shellies/shellyht-706823/sensor/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1200,
        "wires": [
            [
                "09c4023d9292a3e9"
            ]
        ]
    },
    {
        "id": "09c4023d9292a3e9",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1070,
        "y": 1200,
        "wires": [
            [
                "cf10b4a099532aa6"
            ]
        ]
    },
    {
        "id": "cf10b4a099532aa6",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1200,
        "wires": [
            [
                "b4358cb234ec727c",
                "2e11c6155bcde14e"
            ]
        ]
    },
    {
        "id": "b4358cb234ec727c",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "ea6c1a70d4e77a46",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "shellyht-706823",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1480,
        "y": 1200,
        "wires": []
    },
    {
        "id": "2e11c6155bcde14e",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7a6911f52316ad8a",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "/cron/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1480,
        "wires": [
            [
                "822e90f1857fe98b",
                "af26ec5a89547f28"
            ]
        ]
    },
    {
        "id": "822e90f1857fe98b",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1480,
        "wires": [
            [
                "0b45f22a5477a0e8"
            ]
        ]
    },
    {
        "id": "0b45f22a5477a0e8",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 10\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1480,
        "wires": [
            [
                "ed58d5d98ff3a6bc"
            ]
        ]
    },
    {
        "id": "ed58d5d98ff3a6bc",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 970,
        "y": 1480,
        "wires": [
            [
                "2468150643ffffee"
            ]
        ]
    },
    {
        "id": "2468150643ffffee",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1480,
        "wires": [
            [
                "26d2c55207fb1ff8"
            ]
        ]
    },
    {
        "id": "26d2c55207fb1ff8",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "8a88272d4f9a7f41",
        "order": 1,
        "width": "6",
        "height": "12",
        "name": "/cron/#",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1370,
        "y": 1480,
        "wires": []
    },
    {
        "id": "547304bc513fcc44",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 1200,
        "wires": [
            [
                "337084a860b1beeb"
            ]
        ]
    },
    {
        "id": "0cab357455718e10",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 1080,
        "wires": [
            [
                "e3fd98d77a2eeea0"
            ]
        ]
    },
    {
        "id": "7f89c7d4cdd4784a",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 80,
        "wires": []
    },
    {
        "id": "b6b4cba2a3f81863",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "596ee92aa0162208",
                "85ea94ade6abc6b9"
            ]
        ]
    },
    {
        "id": "bb1d7691e11f4f54",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1020,
        "y": 320,
        "wires": [
            [
                "b6b4cba2a3f81863"
            ]
        ]
    },
    {
        "id": "596ee92aa0162208",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 320,
        "wires": []
    },
    {
        "id": "85ea94ade6abc6b9",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1490,
        "y": 360,
        "wires": [
            [
                "e439f46fa53fb9b4"
            ]
        ]
    },
    {
        "id": "e439f46fa53fb9b4",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 360,
        "wires": [
            [
                "5c0336615960f523",
                "3f2d18c5d6d35607"
            ]
        ]
    },
    {
        "id": "5c0336615960f523",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 320,
        "wires": []
    },
    {
        "id": "d515e362ccf713f5",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 420,
        "wires": [
            [
                "47570a80b5f3ee97",
                "54087f11680734b2"
            ]
        ]
    },
    {
        "id": "0e533268e77def8b",
        "type": "inject",
        "z": "4d6542c2a87f4380",
        "name": "5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 480,
        "wires": [
            [
                "ee4b17bff9cf6ca4"
            ]
        ]
    },
    {
        "id": "ee4b17bff9cf6ca4",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "47570a80b5f3ee97",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 420,
        "wires": [
            [
                "2b41517f54c13dd6"
            ]
        ]
    },
    {
        "id": "2d61880e166b1bb4",
        "type": "mqtt out",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "check",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 310,
        "y": 580,
        "wires": []
    },
    {
        "id": "24fa8a94e5c4e55f",
        "type": "ui_button",
        "z": "4d6542c2a87f4380",
        "name": "",
        "group": "9cbad506a0556217",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Check MQTT",
        "tooltip": "",
        "color": "#333333",
        "bgcolor": "#999",
        "className": "",
        "icon": "",
        "payload": "Check",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "2d61880e166b1bb4"
            ]
        ]
    },
    {
        "id": "54087f11680734b2",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 810,
        "y": 460,
        "wires": [
            [
                "1085d3e4c02fece7"
            ]
        ]
    },
    {
        "id": "1085d3e4c02fece7",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 460,
        "wires": [
            [
                "d2cb9c1f8efff6ab"
            ]
        ]
    },
    {
        "id": "07c2ec69b26233da",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "Subscriping / Client",
        "info": "",
        "x": 370,
        "y": 240,
        "wires": []
    },
    {
        "id": "d2cb9c1f8efff6ab",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 460,
        "wires": [
            [
                "2b41517f54c13dd6"
            ]
        ]
    },
    {
        "id": "e33fef7023956a64",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Chart",
        "info": "",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "898742fc831d723e",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "/interval/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 1700,
        "wires": [
            [
                "aff88d83b2d2ce03",
                "36da0476c8314f82"
            ]
        ]
    },
    {
        "id": "aff88d83b2d2ce03",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1700,
        "wires": [
            [
                "aa2cbd266786ef5b"
            ]
        ]
    },
    {
        "id": "aa2cbd266786ef5b",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/interval/%' ORDER BY updated desc LIMIT 0, 10\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1700,
        "wires": [
            [
                "3d84384e9cdca7e2"
            ]
        ]
    },
    {
        "id": "3d84384e9cdca7e2",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 970,
        "y": 1700,
        "wires": [
            [
                "7c2b570cfce36230"
            ]
        ]
    },
    {
        "id": "7c2b570cfce36230",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1700,
        "wires": [
            [
                "1d5ef38057ade03f"
            ]
        ]
    },
    {
        "id": "1d5ef38057ade03f",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "410f9b2957796f10",
        "order": 1,
        "width": "6",
        "height": "12",
        "name": "/interval/#",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1360,
        "y": 1700,
        "wires": []
    },
    {
        "id": "0cbf10aae05ee31a",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Cronjob",
        "info": "",
        "x": 260,
        "y": 1440,
        "wires": []
    },
    {
        "id": "af26ec5a89547f28",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "3cbaeb75be6c5db1",
                "10489877c638f41d"
            ]
        ]
    },
    {
        "id": "3cbaeb75be6c5db1",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1540,
        "wires": [
            [
                "869ff93da14b2b10"
            ]
        ]
    },
    {
        "id": "10489877c638f41d",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 670,
        "y": 1580,
        "wires": [
            [
                "ffaabb35443f583d"
            ]
        ]
    },
    {
        "id": "ffaabb35443f583d",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1580,
        "wires": [
            [
                "71f1206a7ecc6193"
            ]
        ]
    },
    {
        "id": "71f1206a7ecc6193",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1580,
        "wires": [
            [
                "869ff93da14b2b10"
            ]
        ]
    },
    {
        "id": "36da0476c8314f82",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1760,
        "wires": [
            [
                "417ce2e1429d1c2f",
                "1aa77eab7feedbcb"
            ]
        ]
    },
    {
        "id": "417ce2e1429d1c2f",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1760,
        "wires": [
            [
                "8d3e7337d047fecd"
            ]
        ]
    },
    {
        "id": "1aa77eab7feedbcb",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 670,
        "y": 1800,
        "wires": [
            [
                "bfe6821892972a27"
            ]
        ]
    },
    {
        "id": "bfe6821892972a27",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1800,
        "wires": [
            [
                "40bce2713beabf94"
            ]
        ]
    },
    {
        "id": "40bce2713beabf94",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1800,
        "wires": [
            [
                "8d3e7337d047fecd"
            ]
        ]
    },
    {
        "id": "09d3bf0f8522f04d",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Interval Chart",
        "info": "",
        "x": 270,
        "y": 1660,
        "wires": []
    },
    {
        "id": "2b41517f54c13dd6",
        "type": "ui_chart",
        "z": "4d6542c2a87f4380",
        "name": "chart MQTT",
        "group": "fd5052c6399ba750",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "Texr",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#079dcf",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1359.8958740234375,
        "y": 421.8888854980469,
        "wires": [
            []
        ]
    },
    {
        "id": "8d3e7337d047fecd",
        "type": "ui_chart",
        "z": "4d6542c2a87f4380",
        "name": "chart Interval",
        "group": "d591bbb615b4fe18",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "Texr",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#079dcf",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1365.8958740234375,
        "y": 1760.111083984375,
        "wires": [
            []
        ]
    },
    {
        "id": "869ff93da14b2b10",
        "type": "ui_chart",
        "z": "4d6542c2a87f4380",
        "name": "chart Cronjob",
        "group": "c91c3efabc859b5b",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "Texr",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#079dcf",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "074b43f248d1cab6",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 1960,
        "wires": []
    },
    {
        "id": "0d770dd5ced42df2",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "/cron/+/success",
        "qos": "2",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 1960,
        "wires": [
            [
                "074b43f248d1cab6"
            ]
        ]
    },
    {
        "id": "63f57ff9baace94d",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Cronjob Success",
        "info": "",
        "x": 280,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9a4708663dafeaa3",
        "type": "inject",
        "z": "5ede7465224a02eb",
        "name": "10 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "287a1ea66d95c2c7",
                "3780e1bc0d971f35",
                "7d63ec63f87e4a69"
            ]
        ]
    },
    {
        "id": "34f46addedbd3305",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/cpu_temp",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "b46e74bf1c377b22",
        "type": "comment",
        "z": "5ede7465224a02eb",
        "name": "Publishing / Client",
        "info": "",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "287a1ea66d95c2c7",
        "type": "cpu",
        "z": "5ede7465224a02eb",
        "name": "",
        "msgCore": true,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": true,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "cbb315ac2483b026"
            ]
        ]
    },
    {
        "id": "cbb315ac2483b026",
        "type": "switch",
        "z": "5ede7465224a02eb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "overall",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "34f46addedbd3305"
            ],
            [
                "327b58207a35d790"
            ]
        ]
    },
    {
        "id": "327b58207a35d790",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/cpu_workload",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1070,
        "y": 240,
        "wires": []
    },
    {
        "id": "3780e1bc0d971f35",
        "type": "Memory",
        "z": "5ede7465224a02eb",
        "name": "mem",
        "scale": "Byte",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "748641b2eaa9af38"
            ]
        ]
    },
    {
        "id": "748641b2eaa9af38",
        "type": "function",
        "z": "5ede7465224a02eb",
        "name": "memusage",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "29071382b9740d10"
            ]
        ]
    },
    {
        "id": "29071382b9740d10",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/memusage",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "5b06de80608f8113",
        "type": "comment",
        "z": "5ede7465224a02eb",
        "name": "Request",
        "info": "",
        "x": 380,
        "y": 220,
        "wires": []
    },
    {
        "id": "7d63ec63f87e4a69",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "/interval/raspi421/system/",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "8f90f846ba1b5d96",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "e6b41a712a5cd8c1",
                "fab62ff9bfceb810"
            ]
        ]
    },
    {
        "id": "5c0489c09ab45987",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "Subscriping / Client",
        "info": "",
        "x": 470,
        "y": 100,
        "wires": []
    },
    {
        "id": "9d242ae5d2f82771",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "fa9cadd0bcacdec6",
                "6c28125c0707ebad"
            ]
        ]
    },
    {
        "id": "fbc81dc17699807e",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "8cfc9c3c4633b1ab",
                "c3115a085f02f184"
            ]
        ]
    },
    {
        "id": "c4e2fc57fe38410f",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "e838a2703f711576",
                "72e13f9c3d2c7cff"
            ]
        ]
    },
    {
        "id": "e6b41a712a5cd8c1",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "95082877e495bc4d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "50",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8cfc9c3c4633b1ab",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "4fb2731161c030c4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fa9cadd0bcacdec6",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "95082877e495bc4d",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "50",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e838a2703f711576",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "4fb2731161c030c4",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b7de483894bdc19d",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "d17d0c5fb6a4aadd",
                "b6ee285a685df77c"
            ]
        ]
    },
    {
        "id": "adceaed30f7d69aa",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 660,
        "wires": [
            [
                "aad49b282797489c",
                "1b1ba23637d451cf"
            ]
        ]
    },
    {
        "id": "d17d0c5fb6a4aadd",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "7a1fd158c2b52cdd",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "aad49b282797489c",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "7a1fd158c2b52cdd",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "e56cfeb3afc6556b",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "dff1076054031ec0"
            ]
        ]
    },
    {
        "id": "dff1076054031ec0",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "ba7b0debdac47663",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 500,
        "wires": [
            [
                "93a3a2163ae9c3b7"
            ]
        ]
    },
    {
        "id": "93a3a2163ae9c3b7",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 500,
        "wires": []
    },
    {
        "id": "42b78bb9c985b481",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "CPU Temperatur",
        "info": "",
        "x": 260,
        "y": 160,
        "wires": []
    },
    {
        "id": "9830416d71c79a07",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "CPU Auslastung",
        "info": "",
        "x": 260,
        "y": 380,
        "wires": []
    },
    {
        "id": "def029ac22388b6c",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "RAM Auslastung",
        "info": "",
        "x": 260,
        "y": 600,
        "wires": []
    },
    {
        "id": "d264d61f3e87a567",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 720,
        "wires": [
            [
                "3365407b33ec14ca"
            ]
        ]
    },
    {
        "id": "3365407b33ec14ca",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 720,
        "wires": []
    },
    {
        "id": "94cf2a3007d316ef",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "View",
        "info": "",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "fab62ff9bfceb810",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "95082877e495bc4d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "6c28125c0707ebad",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "95082877e495bc4d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "c3115a085f02f184",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "4fb2731161c030c4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 340,
        "wires": []
    },
    {
        "id": "72e13f9c3d2c7cff",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "4fb2731161c030c4",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 420,
        "wires": []
    },
    {
        "id": "b6ee285a685df77c",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "7a1fd158c2b52cdd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "1b1ba23637d451cf",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "7a1fd158c2b52cdd",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 620,
        "wires": []
    },
    {
        "id": "60037e0bddbf482b",
        "type": "function",
        "z": "2b0de4698f35c235",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE sensor_id = '1' ORDER BY `updated` desc LIMIT 0, 9\";\nmsg.payload = `yr`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 880,
        "wires": [
            [
                "6082a45bece22b26"
            ]
        ]
    },
    {
        "id": "9cdf58eb0245c2b1",
        "type": "inject",
        "z": "2b0de4698f35c235",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "60037e0bddbf482b"
            ]
        ]
    },
    {
        "id": "6082a45bece22b26",
        "type": "mysql",
        "z": "2b0de4698f35c235",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 510,
        "y": 880,
        "wires": [
            [
                "395b27415564cfb4"
            ]
        ]
    },
    {
        "id": "e28570c308ced725",
        "type": "debug",
        "z": "2b0de4698f35c235",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 880,
        "wires": []
    },
    {
        "id": "34198301a62245b6",
        "type": "ui_text",
        "z": "2b0de4698f35c235",
        "group": "47b711e5f8cfcf96",
        "order": 9,
        "width": "6",
        "height": "4",
        "name": "Updates Value",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 520,
        "y": 1100,
        "wires": []
    },
    {
        "id": "395b27415564cfb4",
        "type": "function",
        "z": "2b0de4698f35c235",
        "name": "",
        "func": "let list = msg.payload;\nlet sum_temp = '';\n\nfor(let i=0; i < list.length; i++) {\n    \n    let date = new Date(list[i].updated);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    now = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n    \n    sum_temp = sum_temp + `${now}<br>`;\n}\n\nmsg.payload = `${sum_temp}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 880,
        "wires": [
            [
                "34198301a62245b6",
                "e28570c308ced725"
            ]
        ]
    },
    {
        "id": "7e4132e0f8d12a42",
        "type": "ui_text",
        "z": "2b0de4698f35c235",
        "group": "47b711e5f8cfcf96",
        "order": 8,
        "width": "5",
        "height": "1",
        "name": "Updates",
        "label": "",
        "format": "Updates",
        "layout": "row-left",
        "className": "",
        "x": 640,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5e97c225bb33ddd7",
        "type": "ui_text",
        "z": "2b0de4698f35c235",
        "group": "47b711e5f8cfcf96",
        "order": 7,
        "width": "1",
        "height": "1",
        "name": "icon clock",
        "label": "",
        "format": "<i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 500,
        "y": 1060,
        "wires": []
    },
    {
        "id": "48ea50178aa5c8cf",
        "type": "mqtt out",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "/shellyht-706823/insert/",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "9553a8c6cc697af1",
        "type": "mqtt in",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 100,
        "wires": [
            [
                "b7af50544c89f96a"
            ]
        ]
    },
    {
        "id": "b7af50544c89f96a",
        "type": "function",
        "z": "2b0de4698f35c235",
        "name": "ht1_current...",
        "func": "let info = msg.topic; \nlet ht1_current_temp = flow.get('ht1_current_temp') || 0;\nlet ht1_current_hum = flow.get('ht1_current_hum') || 0;\nlet ht1_current_bat = flow.get('ht1_current_bat') || 0;\n\nlet output = \"ignore\";\n\nif(info == \"shellies/shellyht-706823/sensor/temperature\") {\n    output = msg.payload;\n    ht1_current_temp = msg.payload\n}\n\nif(info == \"shellies/shellyht-706823/sensor/humidity\") {\n    output = msg.payload;\n    ht1_current_hum = msg.payload;\n}\n\nif(info == \"shellies/shellyht-706823/sensor/battery\") {\n    output = msg.payload;\n    ht1_current_bat = msg.payload;\n}\n\n// SET VARIABLEN\nflow.set('ht1_current_temp', ht1_current_temp);\nflow.set('ht1_current_hum', ht1_current_hum);\nflow.set('ht1_current_bat', ht1_current_bat);\n\nmsg.payload = output;\n//\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 100,
        "wires": [
            [
                "0ae6a8bcaee9e01c"
            ]
        ]
    },
    {
        "id": "0ae6a8bcaee9e01c",
        "type": "debug",
        "z": "2b0de4698f35c235",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 100,
        "wires": []
    },
    {
        "id": "b0d5e66d4c6e7a4c",
        "type": "debug",
        "z": "2b0de4698f35c235",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 560,
        "wires": []
    },
    {
        "id": "82ebc13f4bc8de00",
        "type": "function",
        "z": "2b0de4698f35c235",
        "name": "ht1_current_temp",
        "func": "let ht1_current_temp = flow.get('ht1_current_temp') || 0;\nlet ht1_current_hum = flow.get('ht1_current_hum') || 0;\n\nmsg.payload = ht1_current_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 560,
        "wires": [
            [
                "b0d5e66d4c6e7a4c",
                "794a20dea0377aa1"
            ]
        ]
    },
    {
        "id": "267a7b3adf4d3221",
        "type": "inject",
        "z": "2b0de4698f35c235",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "82ebc13f4bc8de00"
            ]
        ]
    },
    {
        "id": "794a20dea0377aa1",
        "type": "function",
        "z": "2b0de4698f35c235",
        "name": "INSERT INTO `sensor_data`",
        "func": "let ht1_current_temp = flow.get('ht1_current_temp') || 0;\nlet ht1_current_hum = flow.get('ht1_current_hum') || 0;\nlet ht1_current_bat = flow.get('ht1_current_bat') || null;\n\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `battery`) VALUE ('1', '\" + ht1_current_temp + \"', '\" + ht1_current_hum + \"', '\" + ht1_current_bat + \"')\";\nmsg.topic = sql;\nmsg.payload = \"INSERT INTO `sensor_data`...\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 740,
        "wires": [
            [
                "49874debbafdf863",
                "3834aeeb5a46a181"
            ]
        ]
    },
    {
        "id": "49874debbafdf863",
        "type": "debug",
        "z": "2b0de4698f35c235",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 700,
        "wires": []
    },
    {
        "id": "bf56de61b3ea6232",
        "type": "mqtt in",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 420,
        "wires": [
            [
                "dd4f87516181365f",
                "48ea50178aa5c8cf",
                "0cd6a9568e9e911a"
            ]
        ]
    },
    {
        "id": "dd4f87516181365f",
        "type": "delay",
        "z": "2b0de4698f35c235",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 550,
        "y": 420,
        "wires": [
            [
                "82ebc13f4bc8de00"
            ]
        ]
    },
    {
        "id": "a99657b54205e84e",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "INIT FOR MySQL",
        "info": "",
        "x": 160,
        "y": 180,
        "wires": []
    },
    {
        "id": "3834aeeb5a46a181",
        "type": "mysql",
        "z": "2b0de4698f35c235",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 450,
        "y": 740,
        "wires": [
            [
                "3b90b79123ab3846"
            ]
        ]
    },
    {
        "id": "3b90b79123ab3846",
        "type": "delay",
        "z": "2b0de4698f35c235",
        "name": "sleep",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 740,
        "wires": [
            [
                "60037e0bddbf482b"
            ]
        ]
    },
    {
        "id": "56d8a6dc4a880875",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "Subscriping / Client",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "01765de1fdcaacf9",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "SET GLOBAL",
        "info": "",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "0cd6a9568e9e911a",
        "type": "ui_text",
        "z": "2b0de4698f35c235",
        "group": "2cb1854dd73f3535",
        "order": 3,
        "width": "2",
        "height": "2",
        "name": "Temp HT1 Hello",
        "label": "WZ",
        "format": "<br>{{msg.payload}}°C",
        "layout": "col-center",
        "className": "",
        "x": 580,
        "y": 360,
        "wires": []
    },
    {
        "id": "934096f1913a17cc",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "View Hello/Home",
        "info": "",
        "x": 580,
        "y": 320,
        "wires": []
    },
    {
        "id": "06380607cd6a272b",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "e270c3519662fd0c",
                "e85244b4ddfc1d02",
                "47f6075e489f0cd9",
                "15bbcfb563f5193e"
            ]
        ]
    },
    {
        "id": "89bc955e5219630f",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 740,
        "y": 680,
        "wires": [
            [
                "29a3a296bce7def4",
                "3979967d0dae94eb"
            ]
        ]
    },
    {
        "id": "115ae5c65c1e694c",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/battery",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 1300,
        "wires": [
            [
                "6604a619d78f2933"
            ]
        ]
    },
    {
        "id": "98b264a5149b7ee4",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "62de86d112dd1796",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "text Shelly H&T (KC)",
        "label": "Shelly (KC)",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1600,
        "y": 1280,
        "wires": []
    },
    {
        "id": "e270c3519662fd0c",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Temperatur",
        "format": "<h2>{{msg.payload}}°C</h2>",
        "layout": "row-spread",
        "className": "",
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "29a3a296bce7def4",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Luftfeuchtigkeit",
        "format": "<h2>{{msg.payload}}%</h2>",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 760,
        "wires": []
    },
    {
        "id": "847906caeef6409a",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "Subscriping / Client",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "8be6124d9bcfff9b",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "View:Sensoren",
        "info": "",
        "x": 580,
        "y": 380,
        "wires": []
    },
    {
        "id": "e85244b4ddfc1d02",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "ht_current_temp",
        "func": "// GET VARIABLEN\nlet ht_current_temp = global.get('ht_current_temp') || 0;\n\n// FUNKTION\nht_current_temp = msg.payload;\nht_current_temp = `{\n    \"ht_temp\": ${ht_current_temp}, \n    \"time\": ${Date.now()}\n}`;\n\n// SET VARIABLEN\nglobal.set('ht_current_temp', ht_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ht_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 220,
        "wires": [
            [
                "9d7c8d3fdd553439"
            ]
        ]
    },
    {
        "id": "9d7c8d3fdd553439",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "3979967d0dae94eb",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "ht_current_humidity",
        "func": "// GET VARIABLEN\nlet ht_current_humidity = global.get('ht_current_humidity') || 0;\n\n// FUNKTION\nht_current_humidity = msg.payload;\nht_current_humidity = `{\n    \"ht_humidity\": ${ht_current_humidity}, \n    \"time\": ${Date.now()}\n}`;\n\n// SET VARIABLEN\nglobal.set('ht_current_humidity', ht_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ht_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 680,
        "wires": [
            [
                "f88a29e93cc4d27a"
            ]
        ]
    },
    {
        "id": "f88a29e93cc4d27a",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 680,
        "wires": []
    },
    {
        "id": "e7299a5add4d6ea4",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "SET GLOBAL",
        "info": "",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "a2bce3ae11c4d366",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "SET GLOBAL",
        "info": "",
        "x": 1070,
        "y": 640,
        "wires": []
    },
    {
        "id": "67d106cf47f2346e",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 9,
        "width": "6",
        "height": "4",
        "name": "messungen OD",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1520,
        "y": 1140,
        "wires": []
    },
    {
        "id": "eb1bf636b6b3aaa8",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 8,
        "width": "5",
        "height": "1",
        "name": "Updates OD Headline",
        "label": "",
        "format": "Updates",
        "layout": "row-left",
        "className": "",
        "x": 1680,
        "y": 1100,
        "wires": []
    },
    {
        "id": "632852d2f67bfb0a",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "3df4cdeccd180e87",
        "order": 7,
        "width": "1",
        "height": "1",
        "name": "icon clock",
        "label": "",
        "format": "<i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 1500,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6e45dd7a63f3acd2",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 100,
        "wires": [
            [
                "79ea7ab1d0e4b818"
            ]
        ]
    },
    {
        "id": "79ea7ab1d0e4b818",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "ht2_current...",
        "func": "let info = msg.topic; \nlet ht2_current_temp = flow.get('ht2_current_temp') || 0;\nlet ht2_current_hum = flow.get('ht2_current_hum') || 0;\nlet ht2_current_bat = flow.get('ht2_current_bat') || 0;\n\nlet output = \"ignore\";\n\nif(info == \"shellies/shellyht-702F79/sensor/temperature\") {\n    output = msg.payload;\n    ht2_current_temp = msg.payload\n}\n\nif(info == \"shellies/shellyht-702F79/sensor/humidity\") {\n    output = msg.payload;\n    ht2_current_hum = msg.payload;\n}\n\nif(info == \"shellies/shellyht-702F79/sensor/battery\") {\n    output = msg.payload;\n    ht2_current_bat = msg.payload;\n}\n\n// SET VARIABLEN\nflow.set('ht2_current_temp', ht2_current_temp);\nflow.set('ht2_current_hum', ht2_current_hum);\nflow.set('ht2_current_bat', ht2_current_bat);\n\nmsg.payload = output;\n//\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 100,
        "wires": [
            [
                "56e0dcc6730efe54"
            ]
        ]
    },
    {
        "id": "ec9b20676f9cc427",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "SET GLOBAL",
        "info": "",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "56e0dcc6730efe54",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 100,
        "wires": []
    },
    {
        "id": "9cb445abf0f92fcf",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "INIT ONE Response",
        "info": "",
        "x": 190,
        "y": 880,
        "wires": []
    },
    {
        "id": "9d990e555eafa116",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 920,
        "wires": [
            [
                "383158e1560d716b"
            ]
        ]
    },
    {
        "id": "383158e1560d716b",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "INSERT INTO `sensor_data`",
        "func": "let ht2_current_temp = flow.get('ht2_current_temp') || 0;\nlet ht2_current_hum = flow.get('ht2_current_hum') || 0;\nlet ht_current_battery = flow.get('ht_current_battery') || null;\n\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `battery`) VALUE ('2', '\" + ht2_current_temp + \"', '\" + ht2_current_hum + \"', '\" + ht_current_battery + \"')\";\nmsg.topic = sql;\nmsg.payload = \"INSERT INTO `sensor_data`...\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 920,
        "wires": [
            [
                "0b7ae0b1c8c30d1c",
                "0b432466e35ad860"
            ]
        ]
    },
    {
        "id": "0b7ae0b1c8c30d1c",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 880,
        "wires": []
    },
    {
        "id": "0b432466e35ad860",
        "type": "mysql",
        "z": "a18bee2e207edef3",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1090,
        "y": 920,
        "wires": [
            [
                "5563ec8d3b04bb1f"
            ]
        ]
    },
    {
        "id": "5563ec8d3b04bb1f",
        "type": "delay",
        "z": "a18bee2e207edef3",
        "name": "1s",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "34ac5d87f1826d1f"
            ]
        ]
    },
    {
        "id": "34ac5d87f1826d1f",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE sensor_id = '2' ORDER BY `updated` desc LIMIT 0, 9\";\nmsg.payload = `yr`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1140,
        "wires": [
            [
                "5839f93fd7c8621f"
            ]
        ]
    },
    {
        "id": "5839f93fd7c8621f",
        "type": "mysql",
        "z": "a18bee2e207edef3",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1110,
        "y": 1140,
        "wires": [
            [
                "f7fa1281ec1fa25f"
            ]
        ]
    },
    {
        "id": "f7fa1281ec1fa25f",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "fct Now",
        "func": "let list = msg.payload;\nlet sum_temp = '';\n\nfor(let i=0; i < list.length; i++) {\n    \n    let date = new Date(list[i].updated);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    now = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n    \n    sum_temp = sum_temp + `${now}<br>`;\n}\n\nmsg.payload = `${sum_temp}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1140,
        "wires": [
            [
                "67d106cf47f2346e"
            ]
        ]
    },
    {
        "id": "e1e4b07b675df934",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "View:Sensoren",
        "info": "",
        "x": 1080,
        "y": 720,
        "wires": []
    },
    {
        "id": "42263327dd5205c6",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "View:Hello",
        "info": "",
        "x": 1560,
        "y": 1240,
        "wires": []
    },
    {
        "id": "47f6075e489f0cd9",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "ht2_current_temp",
        "func": "// GET VARIABLEN\nlet ht2_current_temp = global.get('ht2_current_temp') || 0;\n\n// FUNKTION\nht2_current_temp = msg.payload;\n\n// SET VARIABLEN\nglobal.set('ht2_current_temp', ht2_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ht2_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 594.8958129882812,
        "y": 531.8888854980469,
        "wires": [
            [
                "e4bdb086736782dc"
            ]
        ]
    },
    {
        "id": "e4bdb086736782dc",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 764.8958129882812,
        "y": 531.8888854980469,
        "wires": []
    },
    {
        "id": "6604a619d78f2933",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "62de86d112dd1796",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "value Shell H&T (KC) HL",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "col-center",
        "className": "",
        "x": 1610,
        "y": 1340,
        "wires": []
    },
    {
        "id": "15bbcfb563f5193e",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "2cb1854dd73f3535",
        "order": 3,
        "width": "2",
        "height": "2",
        "name": "Temp HT2 Hello",
        "label": "Küche",
        "format": "<br>{{msg.payload}}°C",
        "layout": "col-center",
        "className": "",
        "x": 580,
        "y": 320,
        "wires": []
    },
    {
        "id": "b79f04d01d259a08",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "View Hello/Home",
        "info": "",
        "x": 580,
        "y": 280,
        "wires": []
    },
    {
        "id": "f2f1eae213946a9f",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/battery",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 600,
        "wires": [
            [
                "466d70254e0b657d"
            ]
        ]
    },
    {
        "id": "3e7b566b571aba79",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "SET GLOBAL",
        "info": "",
        "x": 530,
        "y": 580,
        "wires": []
    },
    {
        "id": "466d70254e0b657d",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "ht_current_battery",
        "func": "// GET VARIABLEN\nlet ht_current_battery = global.get('ht_current_battery') || 0;\n\n// FUNKTION\nht_current_battery = msg.payload;\nht_current_battery = `{\n    \"ht_battery\": ${ht_current_battery}, \n    \"time\": ${Date.now()}\n}`;\n\n// SET VARIABLEN\nglobal.set('ht_current_battery', ht_current_battery);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ht_current_battery;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 620,
        "wires": [
            [
                "620b2097a7af4481",
                "fa5c3cc273649ab0",
                "fc243a912c6cbdfc"
            ]
        ]
    },
    {
        "id": "620b2097a7af4481",
        "type": "debug",
        "z": "a18bee2e207edef3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 620,
        "wires": []
    },
    {
        "id": "25768220d1466b6a",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "View: Hello / Battery",
        "info": "",
        "x": 1050,
        "y": 500,
        "wires": []
    },
    {
        "id": "fa5c3cc273649ab0",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "62de86d112dd1796",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "text Shelly HT (HF)",
        "label": "Shelly HT (HF)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1050,
        "y": 540,
        "wires": []
    },
    {
        "id": "fc243a912c6cbdfc",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "62de86d112dd1796",
        "order": 8,
        "width": "2",
        "height": "1",
        "name": "value Shelly HT (HF)",
        "label": "",
        "format": "{{msg.payload[0].battery}}%",
        "layout": "col-center",
        "className": "",
        "x": 1060,
        "y": 580,
        "wires": []
    },
    {
        "id": "962e1237838d5d98",
        "type": "home status",
        "z": "ee90c9931dbc2340",
        "name": "",
        "homeId": "6331efd7cbfde3b619085fe7",
        "deviceTypes": "",
        "creds": "3c6081d5f03c98c7",
        "x": 290,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "80d0b52ecdbb14ba",
        "type": "inject",
        "z": "ee90c9931dbc2340",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "528d19c8b6f8e84a"
            ]
        ]
    },
    {
        "id": "528d19c8b6f8e84a",
        "type": "get stations data",
        "z": "ee90c9931dbc2340",
        "name": "",
        "deviceId": "70:ee:50:90:a5:54",
        "getFavorites": false,
        "creds": "3c6081d5f03c98c7",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "402983e9365f80eb",
                "360134036dda8bde"
            ]
        ]
    },
    {
        "id": "094c2017ca10416d",
        "type": "homes data",
        "z": "ee90c9931dbc2340",
        "name": "",
        "homeId": "6331efd7cbfde3b619085fe7",
        "gatewayTypes": "",
        "creds": "3c6081d5f03c98c7",
        "x": 290,
        "y": 1400,
        "wires": [
            [
                "e7cfe19dc89fcf2a"
            ]
        ]
    },
    {
        "id": "25deaae2e51e86df",
        "type": "inject",
        "z": "ee90c9931dbc2340",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1340,
        "wires": [
            [
                "094c2017ca10416d"
            ]
        ]
    },
    {
        "id": "e7cfe19dc89fcf2a",
        "type": "debug",
        "z": "ee90c9931dbc2340",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 1340,
        "wires": []
    },
    {
        "id": "402983e9365f80eb",
        "type": "function",
        "z": "ee90c9931dbc2340",
        "name": "na_outdoor_temp",
        "func": "// GET VARIABLEN\nlet na_outdoor_temp = global.get('na_outdoor_temp') || 0;\n\n// FUNKTION\nna_outdoor_temp = msg.payload.devices[0].modules[0].dashboard_data.Temperature.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_temp', na_outdoor_temp);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 260,
        "wires": [
            [
                "0bf4ddbd9ce15ebc"
            ]
        ]
    },
    {
        "id": "c41c78c392cdfe01",
        "type": "comment",
        "z": "ee90c9931dbc2340",
        "name": "SET GLOBAL Outdoor",
        "info": "",
        "x": 640,
        "y": 220,
        "wires": []
    },
    {
        "id": "360134036dda8bde",
        "type": "function",
        "z": "ee90c9931dbc2340",
        "name": "na_outdoor_hum",
        "func": "// GET VARIABLEN\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\n// FUNKTION\nna_outdoor_hum = msg.payload.devices[0].modules[0].dashboard_data.Humidity.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_hum', na_outdoor_hum);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 300,
        "wires": [
            [
                "2b87a6ef6267f84d"
            ]
        ]
    },
    {
        "id": "2b87a6ef6267f84d",
        "type": "debug",
        "z": "ee90c9931dbc2340",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "8ebc0fd7c5f89472",
        "type": "mqtt out",
        "z": "ee90c9931dbc2340",
        "name": "",
        "topic": "/interval/sensor/na",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 370,
        "y": 220,
        "wires": []
    },
    {
        "id": "0bf4ddbd9ce15ebc",
        "type": "debug",
        "z": "ee90c9931dbc2340",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "9d5991a1ec4a2a7e",
        "type": "inject",
        "z": "0e78e9a296f09ffb",
        "name": "5m",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Float-Netatmo",
        "payloadType": "str",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "1d630b4a6ec0a643",
                "d7a5099fef3e2c0b",
                "235e59cb35ddfda2",
                "31ef7526c1eb4fc0"
            ]
        ]
    },
    {
        "id": "1d630b4a6ec0a643",
        "type": "get stations data",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "deviceId": "70:ee:50:90:a5:54",
        "getFavorites": false,
        "creds": "3c6081d5f03c98c7",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "1accf48ea9087368",
                "3e3e7c356b590d3c",
                "27052b13c8878dd9",
                "4a9a62763bd98cb6",
                "cb6895633ae6257f"
            ]
        ]
    },
    {
        "id": "3e3e7c356b590d3c",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "INSERT INTO `sensor_data` ",
        "func": "\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `co`, `db`) VALUE ('3', '\" + msg.payload.devices[0].dashboard_data.Temperature.toFixed(2) + \"', '\" + msg.payload.devices[0].dashboard_data.Humidity.toFixed(2) + \"', '\" + msg.payload.devices[0].dashboard_data.CO2 + \"', '\" + msg.payload.devices[0].dashboard_data.Noise + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 160,
        "wires": [
            [
                "16ad3e98d377eb43"
            ]
        ]
    },
    {
        "id": "16ad3e98d377eb43",
        "type": "mysql",
        "z": "0e78e9a296f09ffb",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 970,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "27052b13c8878dd9",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "INSERT INTO `sensor_data` ",
        "func": "\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `battery`) VALUE ('4', '\" + msg.payload.devices[0].modules[0].dashboard_data.Temperature.toFixed(2) + \"', '\" + msg.payload.devices[0].modules[0].dashboard_data.Humidity.toFixed(2) + \"', '\" + msg.payload.devices[0].modules[0].battery_percent + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 240,
        "wires": [
            [
                "e603c702d787dbcc"
            ]
        ]
    },
    {
        "id": "e603c702d787dbcc",
        "type": "mysql",
        "z": "0e78e9a296f09ffb",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 970,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "2344c69d592e9867",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "Netatmo Indoor",
        "info": "",
        "x": 620,
        "y": 120,
        "wires": []
    },
    {
        "id": "549169bc39dd8096",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "Netatmo Outdoor",
        "info": "",
        "x": 620,
        "y": 200,
        "wires": []
    },
    {
        "id": "1accf48ea9087368",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "d7a5099fef3e2c0b",
        "type": "delay",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "ad4e04bf1fd51b7b"
            ]
        ]
    },
    {
        "id": "ad4e04bf1fd51b7b",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE sensor_id = '3' ORDER BY `updated` desc LIMIT 0, 1\";\nmsg.payload = `yr`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 320,
        "wires": [
            [
                "51d581f7cb56efc7",
                "5b480f326a18cf5e"
            ]
        ]
    },
    {
        "id": "51d581f7cb56efc7",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "5b480f326a18cf5e",
        "type": "mysql",
        "z": "0e78e9a296f09ffb",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 150,
        "y": 880,
        "wires": [
            [
                "174b2cf87c0fd999",
                "023fc425d7a8f107",
                "d3c5e5b4c3c7bc82",
                "e8fc142a2a9230b2",
                "6809338c82f33f50",
                "90705e18ed3c1b8a",
                "415f1463b118c3f2",
                "0e98e935a3c51323",
                "c5c0ea25bdfd5480",
                "6d770b13033dc04b",
                "b9e93fadac64290f",
                "f28dcc2a21b79927",
                "f3c4cbe61d61f0b8",
                "ea5314adeefc01d7",
                "282f2f7ce9b9d1ae",
                "64fcc1e3b73dbfa0",
                "85d5f68b72b57a50",
                "771859e12e157bf4",
                "3799c81e71061c8f"
            ]
        ]
    },
    {
        "id": "174b2cf87c0fd999",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 460,
        "wires": []
    },
    {
        "id": "023fc425d7a8f107",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "FCT DATETIME SMALL",
        "func": "// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\ncontent = fctDate(msg.payload[0].updated);\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 500,
        "wires": [
            [
                "5bc8a07ad5da9b56"
            ]
        ]
    },
    {
        "id": "5bc8a07ad5da9b56",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 500,
        "wires": []
    },
    {
        "id": "d3c5e5b4c3c7bc82",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "f313c8705833350a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Temperatur",
        "label": "Temperatur",
        "format": "<h3>{{msg.payload[0].temp.toFixed(2)}}°C</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 580,
        "wires": []
    },
    {
        "id": "1cc6b7cd219fd041",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "View: Büro",
        "info": "",
        "x": 360,
        "y": 540,
        "wires": []
    },
    {
        "id": "e8fc142a2a9230b2",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "f313c8705833350a",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Luftfeuchtigkeit",
        "label": "Luftfeuchtigkeit",
        "format": "<h3>{{msg.payload[0].humi.toFixed(2)}}%</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 620,
        "wires": []
    },
    {
        "id": "6809338c82f33f50",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "f313c8705833350a",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Text CO2",
        "label": "CO2",
        "format": "<h3>{{msg.payload[0].co}} ppm</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 360,
        "y": 660,
        "wires": []
    },
    {
        "id": "90705e18ed3c1b8a",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "f313c8705833350a",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Noise",
        "format": "<h3>{{msg.payload[0].db}} dB</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 350,
        "y": 700,
        "wires": []
    },
    {
        "id": "2804821254ee85ba",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "View: Hello / Büro",
        "info": "",
        "x": 390,
        "y": 780,
        "wires": []
    },
    {
        "id": "52673fe9854a3c4b",
        "type": "ui_gauge",
        "z": "0e78e9a296f09ffb",
        "name": "gauge TEMP",
        "group": "22b691df6f9504c3",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "750",
        "seg2": "1500",
        "className": "",
        "x": 610,
        "y": 820,
        "wires": []
    },
    {
        "id": "4db9476d6f9eab4e",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "22b691df6f9504c3",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "text_TEMP",
        "label": "Temperatur",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 810,
        "y": 820,
        "wires": []
    },
    {
        "id": "415f1463b118c3f2",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].temp",
        "func": "msg.payload = msg.payload[0].temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 820,
        "wires": [
            [
                "52673fe9854a3c4b"
            ]
        ]
    },
    {
        "id": "60312465e6454da1",
        "type": "ui_gauge",
        "z": "0e78e9a296f09ffb",
        "name": "gauge HUM",
        "group": "22b691df6f9504c3",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 610,
        "y": 860,
        "wires": []
    },
    {
        "id": "dd724838f79ad71f",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "22b691df6f9504c3",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "text_HUM",
        "label": "Luftfeuchte",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 800,
        "y": 860,
        "wires": []
    },
    {
        "id": "0e98e935a3c51323",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].humi",
        "func": "msg.payload = msg.payload[0].humi.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 860,
        "wires": [
            [
                "60312465e6454da1"
            ]
        ]
    },
    {
        "id": "dedfef9de6969b5e",
        "type": "ui_gauge",
        "z": "0e78e9a296f09ffb",
        "name": "gauge CO2",
        "group": "22b691df6f9504c3",
        "order": 5,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "ppm",
        "format": "{{value}}",
        "min": 0,
        "max": "2250",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "750",
        "seg2": "1500",
        "className": "",
        "x": 610,
        "y": 900,
        "wires": []
    },
    {
        "id": "cee16e17eae0dfc7",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "22b691df6f9504c3",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "text_CO2",
        "label": "CO2",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 800,
        "y": 900,
        "wires": []
    },
    {
        "id": "c5c0ea25bdfd5480",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].co",
        "func": "msg.payload = msg.payload[0].co.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 900,
        "wires": [
            [
                "dedfef9de6969b5e"
            ]
        ]
    },
    {
        "id": "2a1b06d0185d250c",
        "type": "ui_gauge",
        "z": "0e78e9a296f09ffb",
        "name": "gauge Noise",
        "group": "22b691df6f9504c3",
        "order": 6,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "dB",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "750",
        "seg2": "1500",
        "className": "",
        "x": 610,
        "y": 940,
        "wires": []
    },
    {
        "id": "bebf3f87907fd0ba",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "22b691df6f9504c3",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "text_noise",
        "label": "Noise",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 810,
        "y": 940,
        "wires": []
    },
    {
        "id": "6d770b13033dc04b",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].db",
        "func": "msg.payload = msg.payload[0].db.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 940,
        "wires": [
            [
                "2a1b06d0185d250c"
            ]
        ]
    },
    {
        "id": "e0a389185c902e15",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "View: Sensor",
        "info": "",
        "x": 370,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f28dcc2a21b79927",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "6854caa9cd836549",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Temperatur",
        "label": "Temperatur",
        "format": "<h3>{{msg.payload[0].temp.toFixed(2)}}°C</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f00ec91232550946",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "cart_indoor_temp",
        "group": "6854caa9cd836549",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "30",
        "removeOlder": "9",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "b9e93fadac64290f",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].temp",
        "func": "msg.payload = msg.payload[0].temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1180,
        "wires": [
            [
                "f00ec91232550946"
            ]
        ]
    },
    {
        "id": "ea5314adeefc01d7",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].humi",
        "func": "msg.payload = msg.payload[0].humi.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1260,
        "wires": [
            [
                "52d885b89c275d7e"
            ]
        ]
    },
    {
        "id": "64fcc1e3b73dbfa0",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].co",
        "func": "msg.payload = msg.payload[0].co.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1340,
        "wires": [
            [
                "905b55ce3e1d7a89"
            ]
        ]
    },
    {
        "id": "f3c4cbe61d61f0b8",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "6854caa9cd836549",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Luftfeuchtigkeit OLD",
        "label": "Luftfeuchtigkeit",
        "format": "<h3>{{msg.payload[0].humi.toFixed(2)}}%</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 400,
        "y": 1220,
        "wires": []
    },
    {
        "id": "52d885b89c275d7e",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "cart_indoor_hum",
        "group": "6854caa9cd836549",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "9",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "282f2f7ce9b9d1ae",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "3e0a9ab9d22346b3",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Text CO2",
        "label": "CO2",
        "format": "<h3>{{msg.payload[0].co.toFixed(2)}}ppm</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 360,
        "y": 1300,
        "wires": []
    },
    {
        "id": "905b55ce3e1d7a89",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "cart_indoor_co2",
        "group": "3e0a9ab9d22346b3",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "420",
        "removeOlder": "9",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 620,
        "y": 1340,
        "wires": [
            [
                "f0f00854cc327349"
            ]
        ]
    },
    {
        "id": "f0f00854cc327349",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "cart_indoor_co2",
        "group": "3e0a9ab9d22346b3",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "420",
        "ymax": "2100",
        "removeOlder": "9",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "85d5f68b72b57a50",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "3e0a9ab9d22346b3",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Noise",
        "format": "<h3>{{msg.payload[0].db}}dB</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 350,
        "y": 1380,
        "wires": []
    },
    {
        "id": "3e2599af6acf6c18",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "cart_indoor_noise",
        "group": "3e0a9ab9d22346b3",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "9",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "771859e12e157bf4",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "payload[0].co",
        "func": "msg.payload = msg.payload[0].db;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1420,
        "wires": [
            [
                "3e2599af6acf6c18"
            ]
        ]
    },
    {
        "id": "5598562501739f54",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "View Hello/Home",
        "info": "",
        "x": 380,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3799c81e71061c8f",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "2cb1854dd73f3535",
        "order": 1,
        "width": "2",
        "height": "2",
        "name": "Temp NAI Hello",
        "label": "Büro",
        "format": "<br>{{msg.payload[0].temp.toFixed(2)}}°C",
        "layout": "col-center",
        "className": "",
        "x": 380,
        "y": 1040,
        "wires": []
    },
    {
        "id": "235e59cb35ddfda2",
        "type": "mqtt out",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "topic": "/interval/sensor/na",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 390,
        "y": 80,
        "wires": []
    },
    {
        "id": "1d9158c7b7914343",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "INDOOR",
        "info": "",
        "x": 140,
        "y": 840,
        "wires": []
    },
    {
        "id": "27764e9b3c9d5cc6",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "OUTDOOR",
        "info": "",
        "x": 130,
        "y": 1700,
        "wires": []
    },
    {
        "id": "e088fe742c5b303e",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE sensor_id = '4' ORDER BY `updated` desc LIMIT 0, 1\";\nmsg.payload = `yr`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "2a36b552ddb63b5d",
                "65c52f79cec1375c"
            ]
        ]
    },
    {
        "id": "2a36b552ddb63b5d",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 380,
        "wires": []
    },
    {
        "id": "65c52f79cec1375c",
        "type": "mysql",
        "z": "0e78e9a296f09ffb",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "a9affac778076ed9",
                "5a9e72ac4e91cccc",
                "29540af3d0528fd7",
                "67d88681c5b00c02",
                "049cb6c1f6e634d8",
                "6525c1f92dbc0748",
                "893c138837800698",
                "66ed10519abe6331",
                "0dc508e26f778c8f"
            ]
        ]
    },
    {
        "id": "a9affac778076ed9",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1560,
        "wires": []
    },
    {
        "id": "40b6e085cbdacc90",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "View: Hello / Battery",
        "info": "",
        "x": 390,
        "y": 1600,
        "wires": []
    },
    {
        "id": "bcb5673a82bf180a",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "62de86d112dd1796",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "text Netatmo (Outdoor)",
        "label": "Netatmo (OD)",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 400,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5a9e72ac4e91cccc",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "62de86d112dd1796",
        "order": 5,
        "width": "2",
        "height": "1",
        "name": "value Natatmo",
        "label": "",
        "format": "{{msg.payload[0].battery}}%",
        "layout": "col-center",
        "className": "",
        "x": 380,
        "y": 1680,
        "wires": []
    },
    {
        "id": "2352cc1319d4d0b0",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "View: Sensor",
        "info": "",
        "x": 370,
        "y": 1880,
        "wires": []
    },
    {
        "id": "67d88681c5b00c02",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "3f8bf26bf6d15640",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur",
        "format": "<h3>{{payload[0].temp.toFixed(2)}}°C</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1920,
        "wires": []
    },
    {
        "id": "29540af3d0528fd7",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "func": "msg.payload = msg.payload[0].temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1960,
        "wires": [
            [
                "9ab3dc524bf08fe5"
            ]
        ]
    },
    {
        "id": "9ab3dc524bf08fe5",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "cart_temp",
        "group": "3f8bf26bf6d15640",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "60",
        "removeOlder": "9",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 520,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "6525c1f92dbc0748",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "3f8bf26bf6d15640",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Luftfeuchtigkeit",
        "format": "<h3>{{msg.payload[0].humi.toFixed(2)}}%</h3>",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 2000,
        "wires": []
    },
    {
        "id": "049cb6c1f6e634d8",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "func": "msg.payload = msg.payload[0].humi.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2040,
        "wires": [
            [
                "960944e6b6c50d07"
            ]
        ]
    },
    {
        "id": "960944e6b6c50d07",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "cart_hum",
        "group": "3f8bf26bf6d15640",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "9",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 500,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "31ef7526c1eb4fc0",
        "type": "delay",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 380,
        "wires": [
            [
                "e088fe742c5b303e"
            ]
        ]
    },
    {
        "id": "d502b6102ba440f5",
        "type": "inject",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "ad4e04bf1fd51b7b",
                "e088fe742c5b303e"
            ]
        ]
    },
    {
        "id": "a4150da1efb05c64",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "Request",
        "info": "",
        "x": 360,
        "y": 160,
        "wires": []
    },
    {
        "id": "2da016a60e7e7f64",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "View Hello / Outdoor",
        "info": "",
        "x": 390,
        "y": 2100,
        "wires": []
    },
    {
        "id": "893c138837800698",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "a2915d3249cfafbe",
        "order": 3,
        "width": "2",
        "height": "2",
        "name": "Temp NAO Hello",
        "label": "Sensor",
        "format": "<br>{{msg.payload[0].temp.toFixed(2)}}°C",
        "layout": "col-center",
        "className": "",
        "x": 390,
        "y": 2140,
        "wires": []
    },
    {
        "id": "66ed10519abe6331",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "na_outdoor_temp",
        "func": "// GET VARIABLEN\nlet na_outdoor_temp = global.get('na_outdoor_temp') || 0;\n\n// FUNKTION\nna_outdoor_temp = msg.payload[0].temp.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_temp', na_outdoor_temp);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1780,
        "wires": [
            [
                "5f4be111b7de7b1a"
            ]
        ]
    },
    {
        "id": "1b427151ca34d248",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "SET GLOBAL Outdoor",
        "info": "",
        "x": 400,
        "y": 1740,
        "wires": []
    },
    {
        "id": "0dc508e26f778c8f",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "na_outdoor_hum",
        "func": "// GET VARIABLEN\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\n// FUNKTION\nna_outdoor_hum = msg.payload[0].humi.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_hum', na_outdoor_hum);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "5f4be111b7de7b1a",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1780,
        "wires": []
    },
    {
        "id": "4a9a62763bd98cb6",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "na_outdoor_temp",
        "func": "// GET VARIABLEN\nlet na_outdoor_temp = global.get('na_outdoor_temp') || 0;\n\n// FUNKTION\nna_outdoor_temp = msg.payload.devices[0].modules[0].dashboard_data.Temperature.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_temp', na_outdoor_temp);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 80,
        "wires": [
            [
                "f2d7ef9e6e9d3cf0"
            ]
        ]
    },
    {
        "id": "1d3f84d2d64144bd",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "SET GLOBAL Outdoor",
        "info": "",
        "x": 1000,
        "y": 40,
        "wires": []
    },
    {
        "id": "cb6895633ae6257f",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "na_outdoor_hum",
        "func": "// GET VARIABLEN\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\n// FUNKTION\nna_outdoor_hum = msg.payload.devices[0].modules[0].dashboard_data.Humidity.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_hum', na_outdoor_hum);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 120,
        "wires": [
            [
                "16ca87e073272ca3"
            ]
        ]
    },
    {
        "id": "16ca87e073272ca3",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 120,
        "wires": []
    },
    {
        "id": "f2d7ef9e6e9d3cf0",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 80,
        "wires": []
    },
    {
        "id": "5b5d0a70099fd93e",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 120,
        "wires": [
            [
                "b3d00498ea201d99"
            ]
        ]
    },
    {
        "id": "b3d00498ea201d99",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempShellyIn",
        "func": "// GET VARIABLEN\nlet tempShellyIn = flow.get('tempShellyIn') || 0;\n\n// FUNKTION\ntempShellyIn = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('tempShellyIn', tempShellyIn);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempShellyIn;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cd2a8311e40517cc",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Subscriping / Client",
        "info": "",
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "84523a1396e6d03d",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View Büro / Sensoren",
        "info": "",
        "x": 1140,
        "y": 40,
        "wires": []
    },
    {
        "id": "9d9bd0341f96dc79",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "8990030f0a6e2172"
            ]
        ]
    },
    {
        "id": "8990030f0a6e2172",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humidityShellyIn",
        "func": "// GET VARIABLEN\nlet humidityShellyIn = flow.get('humidityShellyIn') || 0;\n\n// FUNKTION\nhumidityShellyIn = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('humidityShellyIn', humidityShellyIn);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humidityShellyIn;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c03ea592379723b8",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Indoor",
        "info": "",
        "x": 130,
        "y": 120,
        "wires": []
    },
    {
        "id": "464f1737e87f6c5e",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Outdoor",
        "info": "",
        "x": 120,
        "y": 260,
        "wires": []
    },
    {
        "id": "55a7bddb23a88bf5",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "15e0044873a3d4af"
            ]
        ]
    },
    {
        "id": "c5bb9049c423a50c",
        "type": "mqtt in",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "df16d84580440999"
            ]
        ]
    },
    {
        "id": "15e0044873a3d4af",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempShellyOut",
        "func": "// GET VARIABLEN\nlet tempShellyOut = flow.get('tempShellyOut') || 0;\n\n// FUNKTION\ntempShellyOut = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('tempShellyOut', tempShellyOut);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempShellyOut;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "df16d84580440999",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humidityShellyOut",
        "func": "// GET VARIABLEN\nlet humidityShellyOut = flow.get('humidityShellyOut') || 0;\n\n// FUNKTION\nhumidityShellyOut = parseFloat(msg.payload);\n\n// SET VARIABLEN\nflow.set('humidityShellyOut', humidityShellyOut);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humidityShellyOut;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f338fe45175cf589",
        "type": "inject",
        "z": "57793960cf4cb040",
        "name": "Refresh 5 min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1840,
        "y": 520,
        "wires": [
            [
                "89593913f94d8d50",
                "8bededb53127395f"
            ]
        ]
    },
    {
        "id": "9a64495a9019bb8d",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "airFunction",
        "func": "// GET VARIABLEN\nlet air = flow.get('air') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet aussentemperatur = flow.get('aussentemperatur');\nlet tempOptMin = flow.get('tempOptMin');\nlet tempOptMax = flow.get('tempOptMax');\nlet tempOptimal = flow.get('tempOptimal');\nlet tempShellyOut = flow.get('tempShellyOut');\n\n\ntempShellyIn = Math.round(tempShellyIn);\n\nair =\"\";\n//air = `${air} ${tempShellyIn} tempShellyIn<br>`;\n\n\n// FUNKTION\n//if(tempShellyIn > (aussentemperatur + 1)) {\nif(tempShellyIn > tempShellyOut) {\n    //air = `${air}Indoor wärmer als Outdoor<br>`;\n} else {\n    //air = `${air}Indoor kälter als Outdoor<br>`;\n}\n\nlet toleranzMin = tempOptimal - 0.5;\nlet toleranzMax = tempOptimal + 0.5;\n\nif(tempShellyIn >= toleranzMin && tempShellyIn <= toleranzMax) {\n    air = `${air} Optimal<br>`;\n} else {\n    if(tempShellyIn <= toleranzMin) {\n        air = `${air} zu kalt<br>`;\n    }\n    if(tempShellyIn >= toleranzMax) {\n        air = `${air} ${(tempShellyIn - tempOptimal)}°C zu warm<br>`;\n        \n        /*air `${air} Maximale Temperatur erreicht<br>`;\n        \n        if((tempShellyIn - tempOptMax) == 0) {\n            air `${air} Maximale Temperatur erreicht<br>`;\n        }\n        \n        if((tempShellyIn - tempOptMax) > 0) {\n            air = `${air} ${(tempShellyIn - tempOptMax)}°C über max<br>`;\n        } else {\n            air = `${air} ${(tempShellyIn - tempOptMax)}°C unter max<br>`;\n        }\n        */\n\n        //air = `${air} Optimal-Out: + ${parseInt((tempShellyOut - tempOptimal))}°C<br>`;\n    }\n}\n\nif(tempShellyIn == tempOptMin) {\n    //air = `${air} optimal<br>`;\n} else {\n    if(tempShellyIn < tempOptMin) {\n       // air = `${air} kälter<br>`;\n    } else {\n        //air = `${air} wärmer<br>`;\n    }\n}\n\n// SET VARIABLEN\nflow.set('air', air);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = air;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 520,
        "wires": [
            [
                "3531b5a878c3b77e"
            ]
        ]
    },
    {
        "id": "4482ec7cc37f503e",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "Querys",
        "info": "",
        "x": 2150,
        "y": 480,
        "wires": []
    },
    {
        "id": "34d115291537db70",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "109d33547ff0a425",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Raumtemperatur",
        "label": "",
        "format": "Raumtemperatur",
        "layout": "row-right",
        "className": "",
        "x": 990,
        "y": 520,
        "wires": []
    },
    {
        "id": "d65c78d3549c2544",
        "type": "ui_button",
        "z": "57793960cf4cb040",
        "name": "",
        "group": "77910d3a38071c05",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "#333333",
        "bgcolor": "#f1f1f1",
        "className": "",
        "icon": "fa-refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1860,
        "y": 560,
        "wires": [
            [
                "89593913f94d8d50"
            ]
        ]
    },
    {
        "id": "408dad2a2665199f",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "heatFunction",
        "func": "// GET VARIABLEN\nlet heat = flow.get('heat') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempOptMin = flow.get('tempOptMin');\n\nif(tempShellyIn < tempOptMin) {\n    heat = `ON`;\n} else {\n    heat = `OFF`;\n}\n\n// SET VARIABLEN\nflow.set('heat', heat);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = heat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 780,
        "wires": [
            [
                "1f25efe46aa0c109"
            ]
        ]
    },
    {
        "id": "cfa922ca1860d291",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "coolFunction",
        "func": "// GET VARIABLEN\nlet cool = flow.get('cool') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempOptMax = flow.get('tempOptMax');\n\nif(tempShellyIn > tempOptMax) {\n    cool = `ON`;\n} else {\n    cool = `OFF`;\n}\n\n// SET VARIABLEN\nflow.set('cool', cool);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = cool;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 840,
        "wires": [
            [
                "b7e3eb092c8afd59"
            ]
        ]
    },
    {
        "id": "5dc196fdbc199c20",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View",
        "info": "",
        "x": 2590,
        "y": 440,
        "wires": []
    },
    {
        "id": "5b06a5ea4e174989",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View Büro / Einstellungen",
        "info": "",
        "x": 1010,
        "y": 480,
        "wires": []
    },
    {
        "id": "a8e4edbe29e73d20",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "INIT",
        "info": "",
        "x": 1870,
        "y": 420,
        "wires": []
    },
    {
        "id": "30f0cb5853e0e1bb",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "fanFunction",
        "func": "// GET VARIABLEN\nlet fan = flow.get('fan') || 0;\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempOptimal = flow.get('tempOptimal');\n\nif(tempShellyIn > tempOptimal) {\n    fan = `ON`;\n} else {\n    fan = `OFF`;\n}\n\n// SET VARIABLEN\nflow.set('fan', fan);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = fan;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 720,
        "wires": [
            [
                "3d4d2bfb2f0e664c"
            ]
        ]
    },
    {
        "id": "3531b5a878c3b77e",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "9cbad506a0556217",
        "order": 3,
        "width": "6",
        "height": "2",
        "name": "Raumtemperatur",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2630,
        "y": 520,
        "wires": []
    },
    {
        "id": "a76fb86be235ad64",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "109d33547ff0a425",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Luftfeuchtigkeit",
        "label": "",
        "format": "Luftfeuchtigkeit",
        "layout": "row-right",
        "className": "",
        "x": 780,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3531a585bb588f0b",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Optimal (min)",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "humOptMin",
        "topicType": "str",
        "format": "{{value}} %",
        "min": "10",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 940,
        "y": 1040,
        "wires": [
            [
                "02b3522635911736"
            ]
        ]
    },
    {
        "id": "553aa2f3be33a760",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Optimal (max)",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "humOptMax",
        "topicType": "str",
        "format": "{{value}} %",
        "min": "50",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 940,
        "y": 1100,
        "wires": [
            [
                "02b3522635911736"
            ]
        ]
    },
    {
        "id": "101a274e9ce108da",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "9cbad506a0556217",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Luftfeuchtigkeit HEAD",
        "label": "",
        "format": "Luftfeuchtigkeit",
        "layout": "row-spread",
        "className": "",
        "x": 2640,
        "y": 1000,
        "wires": []
    },
    {
        "id": "51ee03b0a43f28f3",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "9cbad506a0556217",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Raumtemperatur HEAD",
        "label": "",
        "format": "Raumtemperatur",
        "layout": "row-spread",
        "className": "",
        "x": 2650,
        "y": 480,
        "wires": []
    },
    {
        "id": "502867c52637f172",
        "type": "inject",
        "z": "57793960cf4cb040",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 970,
        "y": 940,
        "wires": [
            [
                "c52930d12bf43200",
                "77806b06bc1b722b"
            ]
        ]
    },
    {
        "id": "5009c86b8ab61be9",
        "type": "file",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/temp-opt.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1430,
        "y": 720,
        "wires": [
            [
                "89593913f94d8d50"
            ]
        ]
    },
    {
        "id": "89593913f94d8d50",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/temp-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 1670,
        "y": 720,
        "wires": [
            [
                "3d96d94b7bc78887"
            ]
        ]
    },
    {
        "id": "3d96d94b7bc78887",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 720,
        "wires": [
            [
                "b354eb74069e8659",
                "a441e577d61e9344",
                "ea3326085ff76cb9",
                "5074335dcb1b056b",
                "9a64495a9019bb8d",
                "30f0cb5853e0e1bb",
                "cfa922ca1860d291",
                "2239392598a8b639",
                "408dad2a2665199f"
            ]
        ]
    },
    {
        "id": "b354eb74069e8659",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMinSetMin",
        "func": "let tempOptMinSetMin = flow.get('tempOptMinSetMin') || 0;\nlet tempOptMin = flow.get('tempOptMin');\n\ntempOptMinSetMin = msg.payload.tempOptMin;\n\n// GET\nmsg.topic = `tempOptMinSetMin`;\nmsg = {ui_control:{min:tempOptMinSetMin},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 520,
        "wires": [
            [
                "3cdfce106b7593a1",
                "06faba20d2e7f5ab"
            ]
        ]
    },
    {
        "id": "c52930d12bf43200",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/temp-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 370,
        "y": 720,
        "wires": [
            [
                "9cb59bce5f9998f7"
            ]
        ]
    },
    {
        "id": "9cb59bce5f9998f7",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 720,
        "wires": [
            [
                "ac6e59ef3fdf1dec",
                "6eb47d415a008681",
                "9bd53567d0267263"
            ]
        ]
    },
    {
        "id": "ac6e59ef3fdf1dec",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMin",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin');\n\n// FUNKTION\ntempOptMin = msg.payload.tempOptMin.toString();\n\n// SET VARIABLEN\nflow.set('tempOptMin', tempOptMin);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempOptMin;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 620,
        "wires": [
            [
                "b9e27f0eb9265380"
            ]
        ]
    },
    {
        "id": "6eb47d415a008681",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptimal",
        "func": "// GET VARIABLEN\nlet tempOptimal = flow.get('tempOptimal');\n\n// FUNKTION\ntempOptimal = msg.payload.tempOptimal;\n\n// SET VARIABLEN\nflow.set('tempOptimal', tempOptimal);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempOptimal;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 720,
        "wires": [
            [
                "3cdfce106b7593a1"
            ]
        ]
    },
    {
        "id": "9bd53567d0267263",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMax",
        "func": "// GET VARIABLEN\nlet tempOptMax = flow.get('tempOptMax');\n\n// FUNKTION\ntempOptMax = msg.payload.tempOptMax;\n\n// SET VARIABLEN\nflow.set('tempOptMax', tempOptMax);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = tempOptMax;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 820,
        "wires": [
            [
                "06faba20d2e7f5ab"
            ]
        ]
    },
    {
        "id": "b9e27f0eb9265380",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "min",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 950,
        "y": 620,
        "wires": [
            [
                "207e8ff7f304f3db"
            ]
        ]
    },
    {
        "id": "3cdfce106b7593a1",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Optimal",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptimal",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 960,
        "y": 720,
        "wires": [
            [
                "207e8ff7f304f3db"
            ]
        ]
    },
    {
        "id": "06faba20d2e7f5ab",
        "type": "ui_numeric",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "max",
        "tooltip": "",
        "group": "109d33547ff0a425",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 950,
        "y": 820,
        "wires": [
            [
                "207e8ff7f304f3db"
            ]
        ]
    },
    {
        "id": "207e8ff7f304f3db",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "jsonData",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin');\nlet tempOptimal = flow.get('tempOptimal');\nlet tempOptMax = flow.get('tempOptMax');\n\nlet topicMsg = msg.topic;\nlet payloadMsg = msg.payload;\n\nif(topicMsg == `tempOptMin`) {\n    tempOptMin = payloadMsg;\n    flow.set('tempOptMin', tempOptMin);\n}\nif(topicMsg == `tempOptimal`) {\n    tempOptimal = payloadMsg;\n    flow.set('tempOptimal', tempOptimal);\n}\nif(topicMsg == `tempOptMax`) {\n    tempOptMax = payloadMsg;\n    flow.set('tempOptMax', tempOptMax);\n}\n\nmsg.payload = { \n    \"tempOptMin\": tempOptMin,\n    \"tempOptimal\": tempOptimal,\n    \"tempOptMax\": tempOptMax\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 720,
        "wires": [
            [
                "5009c86b8ab61be9"
            ]
        ]
    },
    {
        "id": "dde444e2ce33e246",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "INIT",
        "info": "",
        "x": 110,
        "y": 680,
        "wires": []
    },
    {
        "id": "31be7d63b9089a7a",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "CHANGE",
        "info": "",
        "x": 960,
        "y": 580,
        "wires": []
    },
    {
        "id": "de41108948e78393",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "WRITE",
        "info": "",
        "x": 1390,
        "y": 680,
        "wires": []
    },
    {
        "id": "c418d7603a2de13f",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "READ",
        "info": "",
        "x": 330,
        "y": 680,
        "wires": []
    },
    {
        "id": "821315912e4723f3",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "GET",
        "info": "",
        "x": 550,
        "y": 680,
        "wires": []
    },
    {
        "id": "0997f4e035e8bbc3",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "SET",
        "info": "",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "a22b37fb9e0da153",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "READ",
        "info": "",
        "x": 1630,
        "y": 680,
        "wires": []
    },
    {
        "id": "4843e97074090fa6",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "GET",
        "info": "",
        "x": 1870,
        "y": 680,
        "wires": []
    },
    {
        "id": "a441e577d61e9344",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptMaxSetMax",
        "func": "let tempOptMaxSetMax = flow.get('tempOptMaxSetMax') || 0;\nlet tempOptMax = flow.get('tempOptMax');\n\ntempOptMaxSetMax = msg.payload.tempOptMax;\n\n// GET\nmsg.topic = `tempOptMinSetMax`;\nmsg = {ui_control:{max:tempOptMaxSetMax},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 520,
        "wires": [
            [
                "b9e27f0eb9265380",
                "3cdfce106b7593a1"
            ]
        ]
    },
    {
        "id": "ea3326085ff76cb9",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptimalSetMax",
        "func": "let tempOptimalSetMax = flow.get('tempOptimalSetMax') || 0;\nlet tempOptimal = flow.get('tempOptimal');\n\ntempOptimalSetMax = msg.payload.tempOptimal;\n\n// GET\nmsg.topic = `tempOptimalSetMax`;\nmsg = {ui_control:{max:tempOptimalSetMax},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 880,
        "wires": [
            [
                "b9e27f0eb9265380"
            ]
        ]
    },
    {
        "id": "5074335dcb1b056b",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "tempOptimalSetMin",
        "func": "let tempOptimalSetMin = flow.get('tempOptimalSetMin') || 0;\nlet tempOptimal = flow.get('tempOptimal');\n\ntempOptimalSetMin = msg.payload.tempOptimal;\n\n// GET\nmsg.topic = `tempOptimalSetMin`;\nmsg = {ui_control:{min:tempOptimalSetMin},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 880,
        "wires": [
            [
                "06faba20d2e7f5ab"
            ]
        ]
    },
    {
        "id": "5893fa80a86d8997",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "MinMax Values",
        "info": "",
        "x": 1240,
        "y": 480,
        "wires": []
    },
    {
        "id": "2239392598a8b639",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "windowFunction",
        "func": "// GET VARIABLEN\nlet window = flow.get('window') || \"close\";\nlet tempShellyIn = flow.get('tempShellyIn');\nlet tempShellyOut = flow.get('tempShellyOut');\nlet tempOptimal = flow.get('tempOptimal');\nlet tempOptMax = flow.get('tempOptMax');\n\nlet humidityShellyIn = flow.get('humidityShellyIn');\nlet humidityShellyOut = flow.get('humidityShellyOut');\nlet humOptMin = flow.get('humOptMin');\nlet humOptMax = flow.get('humOptMax');\n\nlet auto = flow.get('auto');\n\nif((tempShellyIn > tempOptimal && tempShellyOut < tempShellyIn) || (humidityShellyIn <= humOptMin && humidityShellyOut > humidityShellyIn)) {\n    window = `OPEN`;\n} else {\n    window = `CLOSE`;\n}\n\n// SET VARIABLEN\nflow.set('window', window);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 660,
        "wires": [
            [
                "ad88d90edccb7cc9"
            ]
        ]
    },
    {
        "id": "2d04652077f7ad55",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "MinMax Values",
        "info": "",
        "x": 1240,
        "y": 920,
        "wires": []
    },
    {
        "id": "80621926fa77eb86",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "floatGet",
        "info": "",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "fba15539e262637f",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "floatGet",
        "info": "",
        "x": 730,
        "y": 580,
        "wires": []
    },
    {
        "id": "ad88d90edccb7cc9",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "Window",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "OPEN",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "CLOSE",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2420,
        "y": 660,
        "wires": [
            [
                "1aa621ce7c1dc16e"
            ]
        ]
    },
    {
        "id": "1aa621ce7c1dc16e",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "WindowText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2610,
        "y": 660,
        "wires": []
    },
    {
        "id": "3d4d2bfb2f0e664c",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "FAN",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2410,
        "y": 720,
        "wires": [
            [
                "fec63e0a68230078"
            ]
        ]
    },
    {
        "id": "fec63e0a68230078",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "FanText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2600,
        "y": 720,
        "wires": []
    },
    {
        "id": "b7e3eb092c8afd59",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "COOL",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2410,
        "y": 840,
        "wires": [
            [
                "a0485724e00c16a5"
            ]
        ]
    },
    {
        "id": "a0485724e00c16a5",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "CoolText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2600,
        "y": 840,
        "wires": []
    },
    {
        "id": "1f25efe46aa0c109",
        "type": "ui_switch",
        "z": "57793960cf4cb040",
        "name": "",
        "label": "HEAT",
        "tooltip": "",
        "group": "77910d3a38071c05",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "fa-toggle-on",
        "oncolor": "green",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "fa-toggle-off",
        "offcolor": "#000000",
        "animate": false,
        "className": "",
        "x": 2410,
        "y": 780,
        "wires": [
            [
                "af332d37cddac6f3"
            ]
        ]
    },
    {
        "id": "af332d37cddac6f3",
        "type": "ui_text",
        "z": "57793960cf4cb040",
        "group": "77910d3a38071c05",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "HeatText",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 2600,
        "y": 780,
        "wires": []
    },
    {
        "id": "d38d20c4e5e09d1c",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "CHANGE",
        "info": "",
        "x": 2420,
        "y": 620,
        "wires": []
    },
    {
        "id": "7579cd212cbb0811",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "View Büro / Aktion",
        "info": "",
        "x": 2630,
        "y": 620,
        "wires": []
    },
    {
        "id": "77806b06bc1b722b",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "b93a1930e0971425"
            ]
        ]
    },
    {
        "id": "b93a1930e0971425",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 1080,
        "wires": [
            [
                "9497d84bc3bac2bd",
                "28e73ea122524dc7"
            ]
        ]
    },
    {
        "id": "9497d84bc3bac2bd",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptMin",
        "func": "// GET VARIABLEN\nlet humOptMin = flow.get('humOptMin');\n\n// FUNKTION\nhumOptMin = msg.payload.humOptMin;\n\n// SET VARIABLEN\nflow.set('humOptMin', humOptMin);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humOptMin;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1040,
        "wires": [
            [
                "3531a585bb588f0b"
            ]
        ]
    },
    {
        "id": "28e73ea122524dc7",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptMin",
        "func": "// GET VARIABLEN\nlet humOptMin = flow.get('humOptMax');\n\n// FUNKTION\nhumOptMax = msg.payload.humOptMax;\n\n// SET VARIABLEN\nflow.set('humOptMax', humOptMax);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = humOptMax;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1100,
        "wires": [
            [
                "553aa2f3be33a760"
            ]
        ]
    },
    {
        "id": "fb52bbc5f5fb095e",
        "type": "inject",
        "z": "57793960cf4cb040",
        "name": "Install",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1360,
        "wires": [
            [
                "b5eb7268d92372c9"
            ]
        ]
    },
    {
        "id": "b5eb7268d92372c9",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "jsonData",
        "func": "// GET VARIABLEN\nlet humOptMin = 40;\nlet humOptMax = 60;\n\nmsg.payload = { \n    \"humOptMin\": humOptMin,\n    \"humOptMax\": humOptMax\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1360,
        "wires": [
            [
                "437246e113845d99",
                "f0d01e10c4e02922"
            ]
        ]
    },
    {
        "id": "437246e113845d99",
        "type": "file",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "7d9b403af118e35c",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "SET",
        "info": "",
        "x": 1170,
        "y": 1040,
        "wires": []
    },
    {
        "id": "02b3522635911736",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "jsonData",
        "func": "// GET VARIABLEN\nlet humOptMin = flow.get('humOptMin');\nlet humOptMax = flow.get('humOptMax');\n\nlet topicMsg = msg.topic;\nlet payloadMsg = msg.payload;\n\nif(topicMsg == `humOptMin`) {\n    humOptMin = payloadMsg;\n    flow.set('humOptMin', humOptMin);\n}\nif(topicMsg == `humOptMax`) {\n    humOptMax = payloadMsg;\n    flow.set('humOptMax', humOptMax);\n}\n\nmsg.payload = { \n    \"humpOptMin\": humOptMin, \n    \"humOptMax\": humOptMax\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1080,
        "wires": [
            [
                "fafaa8146d9b9160"
            ]
        ]
    },
    {
        "id": "d866291ec8c0c78c",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "WRITE",
        "info": "",
        "x": 1390,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fafaa8146d9b9160",
        "type": "file",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1430,
        "y": 1080,
        "wires": [
            [
                "d25966aceca4dabe"
            ]
        ]
    },
    {
        "id": "af11184a9c85db2a",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "READ",
        "info": "",
        "x": 1630,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d25966aceca4dabe",
        "type": "file in",
        "z": "57793960cf4cb040",
        "name": "",
        "filename": "data/hum-opt.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 1670,
        "y": 1080,
        "wires": [
            [
                "d35f4b5ee96401ee"
            ]
        ]
    },
    {
        "id": "d35f4b5ee96401ee",
        "type": "json",
        "z": "57793960cf4cb040",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 1080,
        "wires": [
            [
                "189859288271d759",
                "285e215e4b66f23e"
            ]
        ]
    },
    {
        "id": "b0042c57d41b3ee1",
        "type": "comment",
        "z": "57793960cf4cb040",
        "name": "GET",
        "info": "",
        "x": 1870,
        "y": 1040,
        "wires": []
    },
    {
        "id": "189859288271d759",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptSetMin",
        "func": "let humOptSetMin = flow.get('humOptSetMin') || 0;\n\nhumOptSetMin = msg.payload.humpOptMin;\n\n// GET\nmsg.topic = `humOptSetMin`;\nmsg = {ui_control:{min:humOptSetMin},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 1180,
        "wires": [
            [
                "553aa2f3be33a760"
            ]
        ]
    },
    {
        "id": "f0d01e10c4e02922",
        "type": "debug",
        "z": "57793960cf4cb040",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1500,
        "wires": []
    },
    {
        "id": "285e215e4b66f23e",
        "type": "function",
        "z": "57793960cf4cb040",
        "name": "humOptSetMax",
        "func": "let humOptSetMax = flow.get('humOptSetMax') || 0;\n\nhumOptSetMax = msg.payload.humOptMax;\n\n// GET\nmsg.topic = `humOptSetMax`;\nmsg = {ui_control:{max:humOptSetMax},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 1240,
        "wires": [
            [
                "3531a585bb588f0b"
            ]
        ]
    },
    {
        "id": "8bededb53127395f",
        "type": "mqtt out",
        "z": "57793960cf4cb040",
        "name": "",
        "topic": "/interval/room/fct",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1960,
        "y": 460,
        "wires": []
    },
    {
        "id": "a2ab72287223eee3",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "116b8cf6fa32e582",
                "1a3446140875e6c4"
            ]
        ]
    },
    {
        "id": "1a3446140875e6c4",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "71926be2f692ae46",
                "5c694260e183e42e",
                "77114e4cf60e5885",
                "2d44d2b4821b2ae6",
                "36202ef35215606e",
                "aa8cf39207637411",
                "8e41a3eae0d959d1",
                "a9c9d77b23d71d3c",
                "675a776568eaa825",
                "47f4f151fc561041"
            ]
        ]
    },
    {
        "id": "116b8cf6fa32e582",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "d09e4726b8e11fc2",
        "type": "inject",
        "z": "0dc433aabc974959",
        "name": "INIT",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM `room_settings` WHERE `id` = '1'",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "a2ab72287223eee3",
                "2e087063c17fe84c"
            ]
        ]
    },
    {
        "id": "5008240242f203d7",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "f79c02301465b3df",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "8461751aa09bcc60"
            ]
        ]
    },
    {
        "id": "431780b964427de4",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Optimal",
        "tooltip": "",
        "group": "f79c02301465b3df",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptimal",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 560,
        "y": 420,
        "wires": [
            [
                "afa35b1f6268e982"
            ]
        ]
    },
    {
        "id": "22eff312ad8c922f",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "f79c02301465b3df",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 560,
        "y": 540,
        "wires": [
            [
                "610fb99c161fe5e7"
            ]
        ]
    },
    {
        "id": "71926be2f692ae46",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "min_temp",
        "func": "msg.payload = msg.payload[0].min_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 300,
        "wires": [
            [
                "5008240242f203d7",
                "f936e300a28d129f"
            ]
        ]
    },
    {
        "id": "5c694260e183e42e",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "opt_temp",
        "func": "msg.payload = msg.payload[0].opt_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 420,
        "wires": [
            [
                "431780b964427de4",
                "bf2411e20410cefc",
                "1d37c3daaf7124fc"
            ]
        ]
    },
    {
        "id": "77114e4cf60e5885",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "max_temp",
        "func": "msg.payload = msg.payload[0].max_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 540,
        "wires": [
            [
                "22eff312ad8c922f",
                "81a3c99e320af53e"
            ]
        ]
    },
    {
        "id": "8461751aa09bcc60",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `min_temp` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            [
                "1c788ff246e3ca56"
            ]
        ]
    },
    {
        "id": "1c788ff246e3ca56",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "a2ab72287223eee3",
                "cf3c6bbfbb0f91a1",
                "9950fdc8fecb16dd"
            ]
        ]
    },
    {
        "id": "afa35b1f6268e982",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `opt_temp` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 420,
        "wires": [
            [
                "1c788ff246e3ca56"
            ]
        ]
    },
    {
        "id": "610fb99c161fe5e7",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `max_temp` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 480,
        "wires": [
            [
                "1c788ff246e3ca56"
            ]
        ]
    },
    {
        "id": "f936e300a28d129f",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "tempMin",
        "func": "msg.topic = `tempMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "431780b964427de4"
            ]
        ]
    },
    {
        "id": "bf2411e20410cefc",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "tempOptMin",
        "func": "msg.topic = `tempOptMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [
                "22eff312ad8c922f"
            ]
        ]
    },
    {
        "id": "1d37c3daaf7124fc",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "tempOptMax",
        "func": "msg.topic = `tempOptMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "5008240242f203d7"
            ]
        ]
    },
    {
        "id": "81a3c99e320af53e",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 500,
        "wires": [
            [
                "431780b964427de4"
            ]
        ]
    },
    {
        "id": "a1bf8ad2ea9a9840",
        "type": "comment",
        "z": "0dc433aabc974959",
        "name": " WHERE id = '1'",
        "info": "",
        "x": 320,
        "y": 100,
        "wires": []
    },
    {
        "id": "84c51ad23a05e178",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SensorOffice",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet humiSensorOffice = flow.get('humiSensorOffice');\nlet coSensorOffice = flow.get('coSensorOffice');\nlet dbSensorOffice = flow.get('dbSensorOffice');\n\ntempSensorOffice = msg.payload[0].temp;\nhumiSensorOffice = msg.payload[0].humi;\ncoSensorOffice = msg.payload[0].co;\ndbSensorOffice = msg.payload[0].db;\n\n// SET VARIABLEN\nflow.set('tempSensorOffice', tempSensorOffice);\nflow.set('humiSensorOffice', humiSensorOffice);\nflow.set('coSensorOffice', coSensorOffice);\nflow.set('dbSensorOffice', dbSensorOffice);\n\nmsg.payload = coSensorOffice;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 420,
        "wires": [
            [
                "6714147bac1f0549"
            ]
        ]
    },
    {
        "id": "c039b092213f45bb",
        "type": "inject",
        "z": "0dc433aabc974959",
        "name": "5min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "cf3c6bbfbb0f91a1",
                "c95f3946d15ef29d"
            ]
        ]
    },
    {
        "id": "cf3c6bbfbb0f91a1",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = 3 ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 420,
        "wires": [
            [
                "fdde6154b49e95fd"
            ]
        ]
    },
    {
        "id": "fdde6154b49e95fd",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1710,
        "y": 420,
        "wires": [
            [
                "84c51ad23a05e178"
            ]
        ]
    },
    {
        "id": "6714147bac1f0549",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 520,
        "wires": [
            [
                "3797f44b7da4108c"
            ]
        ]
    },
    {
        "id": "3797f44b7da4108c",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1710,
        "y": 520,
        "wires": [
            [
                "f644e7c4ffa30808",
                "86f18ab8a1b6416a",
                "417653c6cb142b4b",
                "645a8780ee08ec9c",
                "150712062a696e0b"
            ]
        ]
    },
    {
        "id": "f644e7c4ffa30808",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SensorSetting TEMP",
        "func": "let tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\ntempOfficeMin = msg.payload[0].min_temp;\ntempOfficeOpt = msg.payload[0].opt_temp;\ntempOfficeMax = msg.payload[0].max_temp;\n\n\n// SET VARIABLEN\nflow.set('tempOfficeMin', tempOfficeMin);\nflow.set('tempOfficeOpt', tempOfficeOpt);\nflow.set('tempOfficeMax', tempOfficeMax);\n\nmsg.payload = tempOfficeOpt;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 620,
        "wires": [
            [
                "cdc8521a15265933",
                "7283f466126ee8e1"
            ]
        ]
    },
    {
        "id": "c95f3946d15ef29d",
        "type": "mqtt out",
        "z": "0dc433aabc974959",
        "name": "",
        "topic": "/interval/room/office",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1310,
        "y": 160,
        "wires": []
    },
    {
        "id": "95df68b12a0bba9a",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2000,
        "wires": [
            [
                "80ecfe8c24c2d061",
                "7f2016c6d3f50a97"
            ]
        ]
    },
    {
        "id": "0417fe459f4a1522",
        "type": "inject",
        "z": "0dc433aabc974959",
        "name": "INIT",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM `room_settings` WHERE `id` = '1'",
        "x": 150,
        "y": 2000,
        "wires": [
            [
                "95df68b12a0bba9a"
            ]
        ]
    },
    {
        "id": "dba462b615a35234",
        "type": "comment",
        "z": "0dc433aabc974959",
        "name": " WHERE id = '1'",
        "info": "",
        "x": 340,
        "y": 1960,
        "wires": []
    },
    {
        "id": "80ecfe8c24c2d061",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1940,
        "wires": []
    },
    {
        "id": "7f2016c6d3f50a97",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 1980,
        "wires": [
            [
                "6d27e3f94f3cd93d",
                "541045065d87be0d"
            ]
        ]
    },
    {
        "id": "6d27e3f94f3cd93d",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0].min_humidity",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1980,
        "wires": []
    },
    {
        "id": "2d44d2b4821b2ae6",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "min_humi",
        "func": "msg.payload = msg.payload[0].min_humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 700,
        "wires": [
            [
                "82ba5e7c6efe59d1",
                "d475bc3a52227765"
            ]
        ]
    },
    {
        "id": "36202ef35215606e",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "max_humi",
        "func": "msg.payload = msg.payload[0].max_humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 820,
        "wires": [
            [
                "b0841f345d9ba420",
                "ad29f2bbc367f2a8"
            ]
        ]
    },
    {
        "id": "82ba5e7c6efe59d1",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "cd70fe935b292b3f",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "c4ed2f37fd3d19f1"
            ]
        ]
    },
    {
        "id": "b0841f345d9ba420",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "cd70fe935b292b3f",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 560,
        "y": 820,
        "wires": [
            [
                "0444227635127e76"
            ]
        ]
    },
    {
        "id": "2e087063c17fe84c",
        "type": "mqtt out",
        "z": "0dc433aabc974959",
        "name": "",
        "topic": "/interval/office/select",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 340,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2f37fd3d19f1",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `min_humidity` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "fdc504112bea82ce"
            ]
        ]
    },
    {
        "id": "0444227635127e76",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `max_humidity` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 820,
        "wires": [
            [
                "fdc504112bea82ce"
            ]
        ]
    },
    {
        "id": "9950fdc8fecb16dd",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 480,
        "wires": []
    },
    {
        "id": "541045065d87be0d",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1940,
        "wires": []
    },
    {
        "id": "fdc504112bea82ce",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 760,
        "wires": [
            [
                "a2ab72287223eee3",
                "cf3c6bbfbb0f91a1"
            ]
        ]
    },
    {
        "id": "d475bc3a52227765",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "humMin",
        "func": "msg.topic = `humMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 740,
        "wires": [
            [
                "b0841f345d9ba420"
            ]
        ]
    },
    {
        "id": "ad29f2bbc367f2a8",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 780,
        "wires": [
            [
                "82ba5e7c6efe59d1"
            ]
        ]
    },
    {
        "id": "762be609c4700764",
        "type": "comment",
        "z": "0dc433aabc974959",
        "name": "Temperatur",
        "info": "",
        "x": 110,
        "y": 240,
        "wires": []
    },
    {
        "id": "1e8ebfbb19a552b6",
        "type": "comment",
        "z": "0dc433aabc974959",
        "name": "Humidity",
        "info": "",
        "x": 100,
        "y": 640,
        "wires": []
    },
    {
        "id": "86f18ab8a1b6416a",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SensorSetting HUMI",
        "func": "let humiOfficeMin = flow.get('humiOfficeMin') || 0;\nlet humiOfficeMax = flow.get('humiOfficeMax') || 0;\n\nhumiOfficeMin = msg.payload[0].min_humidity;\nhumiOfficeMax = msg.payload[0].max_humidity;\n\n// SET VARIABLEN\nflow.set('humiOfficeMin', humiOfficeMin);\nflow.set('humiOfficeMax', humiOfficeMax);\n\nmsg.payload = humiOfficeMax;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 740,
        "wires": [
            [
                "3d025dde5659aca9",
                "82c1b086b731dca4"
            ]
        ]
    },
    {
        "id": "417653c6cb142b4b",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 520,
        "wires": []
    },
    {
        "id": "5c25cdcced62300e",
        "type": "ui_gauge",
        "z": "0dc433aabc974959",
        "name": "gauge Humidity",
        "group": "cd70fe935b292b3f",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2020,
        "y": 740,
        "wires": []
    },
    {
        "id": "3d025dde5659aca9",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK Humidity",
        "func": "let humiSensorOffice = flow.get('humiSensorOffice');\nlet humiOfficeMin = flow.get('humiOfficeMin');\nlet humiOfficeMax = flow.get('humiOfficeMax');\n\nmsg.topic = '%';\nmsg = {ui_control:{min:0, max:100, seg1:humiOfficeMin, seg2:humiOfficeMax}, topic:`${msg.topic}`};\n\nmsg.payload = humiSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 740,
        "wires": [
            [
                "1297714c61668df1",
                "5c25cdcced62300e"
            ]
        ]
    },
    {
        "id": "1297714c61668df1",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 700,
        "wires": []
    },
    {
        "id": "cdc8521a15265933",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK Temp",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\nmsg.topic = '°C';\nlet start = tempOfficeMin - 5;\nlet end = tempOfficeMax + 5 ;\nmsg = {ui_control:{min:start, max:end, seg1:tempOfficeMin, seg2:tempOfficeMax}, topic:`${msg.topic}`};\n\nmsg.payload = tempSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 620,
        "wires": [
            [
                "9271f9acf9bb276e",
                "dc1b2571b09a8aec"
            ]
        ]
    },
    {
        "id": "9271f9acf9bb276e",
        "type": "ui_gauge",
        "z": "0dc433aabc974959",
        "name": "gauge Temp",
        "group": "f79c02301465b3df",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#0099e6",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2010,
        "y": 620,
        "wires": []
    },
    {
        "id": "dc1b2571b09a8aec",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 580,
        "wires": []
    },
    {
        "id": "7283f466126ee8e1",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK Temp",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\nmsg.topic = '°C';\nlet start = tempOfficeMin - 5;\nlet end = tempOfficeMax + 5 ;\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nmsg.payload = tempSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 660,
        "wires": [
            [
                "48f5a0e0383f2427"
            ]
        ]
    },
    {
        "id": "48f5a0e0383f2427",
        "type": "ui_chart",
        "z": "0dc433aabc974959",
        "name": "chart Temperatur",
        "group": "f79c02301465b3df",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2030,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "82c1b086b731dca4",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK Humidity",
        "func": "let humiSensorOffice = flow.get('humiSensorOffice');\nlet humiOfficeMin = flow.get('humiOfficeMin');\nlet humiOfficeMax = flow.get('humiOfficeMax');\n\nmsg.topic = '%';\nmsg = {ui_control:{min:0, max:100}, topic:`${msg.topic}`};\n\nmsg.payload = humiSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 780,
        "wires": [
            [
                "eda4e6db32763f44"
            ]
        ]
    },
    {
        "id": "eda4e6db32763f44",
        "type": "ui_chart",
        "z": "0dc433aabc974959",
        "name": "chart Luftfeuchte",
        "group": "cd70fe935b292b3f",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2030,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "f3f5498717368426",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Gut bis",
        "tooltip": "",
        "group": "4db58dc8f8f33f5b",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}ppm",
        "min": 0,
        "max": "2000",
        "step": "100",
        "className": "",
        "x": 560,
        "y": 980,
        "wires": [
            [
                "c19149110177e276"
            ]
        ]
    },
    {
        "id": "cf3968a891da92f1",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Schlecht bis",
        "tooltip": "",
        "group": "4db58dc8f8f33f5b",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptimal",
        "topicType": "str",
        "format": "{{value}}ppm",
        "min": 0,
        "max": "2000",
        "step": "100",
        "className": "",
        "x": 570,
        "y": 1100,
        "wires": [
            [
                "7939e05aa888c731"
            ]
        ]
    },
    {
        "id": "5375cf6cec01f591",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "4db58dc8f8f33f5b",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}ppm",
        "min": 0,
        "max": "2000",
        "step": "100",
        "className": "",
        "x": 560,
        "y": 1220,
        "wires": [
            [
                "2c2307eb2236c6eb"
            ]
        ]
    },
    {
        "id": "aa8cf39207637411",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "is_good_co2",
        "func": "msg.payload = msg.payload[0].is_good_co2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 980,
        "wires": [
            [
                "f3f5498717368426",
                "17f12a607ef97b34"
            ]
        ]
    },
    {
        "id": "8e41a3eae0d959d1",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "is_bad_co2",
        "func": "msg.payload = msg.payload[0].is_bad_co2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "cf3968a891da92f1",
                "a64a34731f63eb7d",
                "06545a04f1f43e52"
            ]
        ]
    },
    {
        "id": "a9c9d77b23d71d3c",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "is_alert_co2",
        "func": "msg.payload = msg.payload[0].is_alert_co2\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "5375cf6cec01f591",
                "6060c0b6c837af01"
            ]
        ]
    },
    {
        "id": "c19149110177e276",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `is_good_co2` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1040,
        "wires": [
            [
                "342d3dad35afaf35"
            ]
        ]
    },
    {
        "id": "342d3dad35afaf35",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 1100,
        "wires": [
            [
                "b3082d0205452c30",
                "cf3c6bbfbb0f91a1",
                "a2ab72287223eee3"
            ]
        ]
    },
    {
        "id": "7939e05aa888c731",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `is_bad_co2` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "342d3dad35afaf35"
            ]
        ]
    },
    {
        "id": "2c2307eb2236c6eb",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `is_alert_co2` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1160,
        "wires": [
            [
                "342d3dad35afaf35"
            ]
        ]
    },
    {
        "id": "17f12a607ef97b34",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "co2GoodMin",
        "func": "msg.topic = `co2GoodMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "cf3968a891da92f1"
            ]
        ]
    },
    {
        "id": "a64a34731f63eb7d",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "co2BadMin",
        "func": "msg.topic = `co2BadMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1140,
        "wires": [
            [
                "5375cf6cec01f591"
            ]
        ]
    },
    {
        "id": "06545a04f1f43e52",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "co2BadMax",
        "func": "msg.topic = `co2BadMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "f3f5498717368426"
            ]
        ]
    },
    {
        "id": "6060c0b6c837af01",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "co2AlertMax",
        "func": "msg.topic = `co2AlertMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1180,
        "wires": [
            [
                "cf3968a891da92f1"
            ]
        ]
    },
    {
        "id": "b3082d0205452c30",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7c2752ee86195c7f",
        "type": "comment",
        "z": "0dc433aabc974959",
        "name": "CO2",
        "info": "",
        "x": 90,
        "y": 920,
        "wires": []
    },
    {
        "id": "645a8780ee08ec9c",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SensorSetting CO2",
        "func": "let coSensorOffice = flow.get('coSensorOffice') || 0;\n\nlet co2_good = flow.get('co2_good') || 0;\nlet co2_bad = flow.get('co2_bad') || 0;\nlet co2_alert = flow.get('co2_alert') || 0;\n\n\nco2_good = msg.payload[0].is_good_co2;\nco2_bad = msg.payload[0].is_bad_co2;\nco2_alert = msg.payload[0].is_alert_co2;\n\n\n// SET VARIABLEN\nflow.set('co2_good', co2_good);\nflow.set('co2_bad', co2_bad);\nflow.set('co2_alert', co2_alert);\n\nmsg.payload = coSensorOffice;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 860,
        "wires": [
            [
                "64d2f4ebd9857ec2",
                "5dd88eb97c5e59d5"
            ]
        ]
    },
    {
        "id": "64d2f4ebd9857ec2",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK Co2",
        "func": "let coSensorOffice = flow.get('coSensorOffice') || 0;\n\nlet co2_good = flow.get('co2_good') || 0;\nlet co2_bad = flow.get('co2_bad') || 0;\nlet co2_alert = flow.get('co2_alert') || 0;\n\nmsg.topic = 'ppm';\nmsg = {ui_control:{min:0, max:2200, seg1:co2_good, seg2:co2_bad, seg3:co2_alert}, topic:`${msg.topic}`};\n\nmsg.payload = coSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 860,
        "wires": [
            [
                "7c03cea47d4ecdc4",
                "48bda19ea12335b5"
            ]
        ]
    },
    {
        "id": "7c03cea47d4ecdc4",
        "type": "debug",
        "z": "0dc433aabc974959",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 820,
        "wires": []
    },
    {
        "id": "48bda19ea12335b5",
        "type": "ui_gauge",
        "z": "0dc433aabc974959",
        "name": "gauge CO2",
        "group": "4db58dc8f8f33f5b",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "ppm",
        "format": "{{value}}",
        "min": 0,
        "max": "2200",
        "colors": [
            "#00b500",
            "#ffd500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2010,
        "y": 860,
        "wires": []
    },
    {
        "id": "5dd88eb97c5e59d5",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK CO2",
        "func": "let coSensorOffice = flow.get('coSensorOffice') || 0;\n\nmsg.topic = 'ppm';\nmsg = {ui_control:{min:0, max:2200}, topic:`${msg.topic}`};\n\nmsg.payload = coSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 900,
        "wires": [
            [
                "3320433568036474"
            ]
        ]
    },
    {
        "id": "3320433568036474",
        "type": "ui_chart",
        "z": "0dc433aabc974959",
        "name": "chart CO2",
        "group": "4db58dc8f8f33f5b",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "2200",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2010,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "675a776568eaa825",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "db_good",
        "func": "msg.payload = msg.payload[0].db_good;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 1380,
        "wires": [
            [
                "53cfac6a9d0baf3b",
                "8b82f8146ff35d39"
            ]
        ]
    },
    {
        "id": "47f4f151fc561041",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "db_bad",
        "func": "msg.payload = msg.payload[0].db_bad;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 1500,
        "wires": [
            [
                "da92937551b8ca88",
                "ee80dab47d84b00c"
            ]
        ]
    },
    {
        "id": "53cfac6a9d0baf3b",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Leise bis",
        "tooltip": "",
        "group": "ecb95cacf3b2b8c2",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}dB",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 560,
        "y": 1380,
        "wires": [
            [
                "e17afcdaf7067522"
            ]
        ]
    },
    {
        "id": "da92937551b8ca88",
        "type": "ui_numeric",
        "z": "0dc433aabc974959",
        "name": "",
        "label": "Zu laut ab",
        "tooltip": "",
        "group": "ecb95cacf3b2b8c2",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}dB",
        "min": 0,
        "max": "100",
        "step": "5",
        "className": "",
        "x": 560,
        "y": 1500,
        "wires": [
            [
                "46d64e1079849efe"
            ]
        ]
    },
    {
        "id": "e17afcdaf7067522",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `db_good` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1380,
        "wires": [
            [
                "bd969f618d7f1e42"
            ]
        ]
    },
    {
        "id": "46d64e1079849efe",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `db_bad` = '\" + msg.payload + \"' WHERE id = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1500,
        "wires": [
            [
                "bd969f618d7f1e42"
            ]
        ]
    },
    {
        "id": "bd969f618d7f1e42",
        "type": "mysql",
        "z": "0dc433aabc974959",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 1440,
        "wires": [
            [
                "a2ab72287223eee3",
                "cf3c6bbfbb0f91a1"
            ]
        ]
    },
    {
        "id": "8b82f8146ff35d39",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "db_good",
        "func": "msg.topic = `db_good`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1420,
        "wires": [
            [
                "da92937551b8ca88"
            ]
        ]
    },
    {
        "id": "ee80dab47d84b00c",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "db_bad",
        "func": "msg.topic = `db_bad`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1460,
        "wires": [
            [
                "53cfac6a9d0baf3b"
            ]
        ]
    },
    {
        "id": "bc601a5143c13f7b",
        "type": "comment",
        "z": "0dc433aabc974959",
        "name": "DB",
        "info": "",
        "x": 90,
        "y": 1320,
        "wires": []
    },
    {
        "id": "150712062a696e0b",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "SensorSetting DB",
        "func": "let dbSensorOffice = flow.get('dbSensorOffice') || 0;\n\nlet db_good = flow.get('db_good') || 0;\nlet db_bad = flow.get('db_bad') || 0;\n\ndb_good = msg.payload[0].db_good;\ndb_bad = msg.payload[0].db_bad;\n\n// SET VARIABLEN\nflow.set('db_good', db_good);\nflow.set('db_bad', db_bad);\n\nmsg.payload = dbSensorOffice;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 980,
        "wires": [
            [
                "db3f65dfb4921199",
                "858d0f2020ce6e53"
            ]
        ]
    },
    {
        "id": "db3f65dfb4921199",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK Co2",
        "func": "let dbSensorOffice = flow.get('dbSensorOffice') || 0;\n\nlet db_good = flow.get('db_good') || 0;\nlet db_bad = flow.get('db_bad') || 0;\n\nmsg.topic = 'dB';\nmsg = {ui_control:{min:0, max:120, seg1:db_good, seg2:db_bad}, topic:`${msg.topic}`};\n\nmsg.payload = dbSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 980,
        "wires": [
            [
                "bdfb244bd2be9015"
            ]
        ]
    },
    {
        "id": "bdfb244bd2be9015",
        "type": "ui_gauge",
        "z": "0dc433aabc974959",
        "name": "gauge DB",
        "group": "ecb95cacf3b2b8c2",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "dB",
        "format": "{{value}}",
        "min": 0,
        "max": "120",
        "colors": [
            "#00b500",
            "#ffd500",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2000,
        "y": 980,
        "wires": []
    },
    {
        "id": "858d0f2020ce6e53",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "CHECK CO2",
        "func": "let dbSensorOffice = flow.get('dbSensorOffice') || 0;\n\nmsg.topic = 'dB';\nmsg = {ui_control:{min:0, max:120}, topic:`${msg.topic}`};\n\nmsg.payload = dbSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 1020,
        "wires": [
            [
                "29a155070357f9be"
            ]
        ]
    },
    {
        "id": "29a155070357f9be",
        "type": "ui_chart",
        "z": "0dc433aabc974959",
        "name": "chart dB",
        "group": "ecb95cacf3b2b8c2",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "120",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2000,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "1bf9965c12c9f8bb",
        "type": "inject",
        "z": "0dc433aabc974959",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1030,
        "y": 80,
        "wires": [
            [
                "fbf9a54b5d0c1970"
            ]
        ]
    },
    {
        "id": "fbf9a54b5d0c1970",
        "type": "function",
        "z": "0dc433aabc974959",
        "name": "Inject",
        "func": "let init = flow.get('init') || 1;\n\n// SET VARIABLEN\nflow.set('init', init);\nmsg.payload = init;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 80,
        "wires": [
            [
                "cf3c6bbfbb0f91a1"
            ]
        ]
    },
    {
        "id": "c5c9a434b40cc45d",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 220,
        "wires": [
            [
                "83a13e21247eeead",
                "212f95c40482a7a8"
            ]
        ]
    },
    {
        "id": "212f95c40482a7a8",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 670,
        "y": 220,
        "wires": [
            [
                "e74d257cadf09676",
                "c03bf1c64cb099d7",
                "1cc51bf90a4ecbd8",
                "57b555ed6e8d4f33",
                "317fc3d698906b9d"
            ]
        ]
    },
    {
        "id": "83a13e21247eeead",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "c202a2b556179f7b",
        "type": "inject",
        "z": "930c0d79fd93db70",
        "name": "INIT",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "0.0",
        "topic": "SELECT * FROM `room_settings` WHERE `id` = '2'",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "c5c9a434b40cc45d",
                "a877a9fb69198ade"
            ]
        ]
    },
    {
        "id": "0121ea5a1ffa2789",
        "type": "ui_numeric",
        "z": "930c0d79fd93db70",
        "name": "",
        "label": "min",
        "tooltip": "",
        "group": "afae9d74aa8939b3",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "8dd7973787b78e1e"
            ]
        ]
    },
    {
        "id": "a9c25317adc11e0a",
        "type": "ui_numeric",
        "z": "930c0d79fd93db70",
        "name": "",
        "label": "Optimal",
        "tooltip": "",
        "group": "afae9d74aa8939b3",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptimal",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 560,
        "y": 500,
        "wires": [
            [
                "64d1693e774cf3fa"
            ]
        ]
    },
    {
        "id": "6bd95e492e85a069",
        "type": "ui_numeric",
        "z": "930c0d79fd93db70",
        "name": "",
        "label": "max",
        "tooltip": "",
        "group": "afae9d74aa8939b3",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 550,
        "y": 620,
        "wires": [
            [
                "fe94052698809d04"
            ]
        ]
    },
    {
        "id": "e74d257cadf09676",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "min_temp",
        "func": "msg.payload = msg.payload[0].min_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 380,
        "wires": [
            [
                "0121ea5a1ffa2789",
                "da8e8e3e9be0b957"
            ]
        ]
    },
    {
        "id": "c03bf1c64cb099d7",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "opt_temp",
        "func": "msg.payload = msg.payload[0].opt_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 500,
        "wires": [
            [
                "a9c25317adc11e0a",
                "7bbabc899b0df7f2",
                "d62ae3b89b6e7f6e"
            ]
        ]
    },
    {
        "id": "1cc51bf90a4ecbd8",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "max_temp",
        "func": "msg.payload = msg.payload[0].max_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 620,
        "wires": [
            [
                "6bd95e492e85a069",
                "75affcd7d8393e07"
            ]
        ]
    },
    {
        "id": "8dd7973787b78e1e",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `min_temp` = '\" + msg.payload + \"' WHERE id = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            [
                "7d1b55256c148699"
            ]
        ]
    },
    {
        "id": "7d1b55256c148699",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "c5c9a434b40cc45d",
                "a31c1e1f0752ed4d",
                "57d3addf01a2a0f7"
            ]
        ]
    },
    {
        "id": "64d1693e774cf3fa",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `opt_temp` = '\" + msg.payload + \"' WHERE id = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 500,
        "wires": [
            [
                "7d1b55256c148699"
            ]
        ]
    },
    {
        "id": "fe94052698809d04",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `max_temp` = '\" + msg.payload + \"' WHERE id = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 560,
        "wires": [
            [
                "7d1b55256c148699"
            ]
        ]
    },
    {
        "id": "da8e8e3e9be0b957",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "tempMin",
        "func": "msg.topic = `tempMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 420,
        "wires": [
            [
                "a9c25317adc11e0a"
            ]
        ]
    },
    {
        "id": "7bbabc899b0df7f2",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "tempOptMin",
        "func": "msg.topic = `tempOptMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 540,
        "wires": [
            [
                "6bd95e492e85a069"
            ]
        ]
    },
    {
        "id": "d62ae3b89b6e7f6e",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "tempOptMax",
        "func": "msg.topic = `tempOptMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 460,
        "wires": [
            [
                "0121ea5a1ffa2789"
            ]
        ]
    },
    {
        "id": "75affcd7d8393e07",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 580,
        "wires": [
            [
                "a9c25317adc11e0a"
            ]
        ]
    },
    {
        "id": "72bbeeb42484df34",
        "type": "comment",
        "z": "930c0d79fd93db70",
        "name": " WHERE id = '2'",
        "info": "",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "730e45d0fa876b9f",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SensorOffice",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet humiSensorOffice = flow.get('humiSensorOffice');\n\ntempSensorOffice = msg.payload[0].temp;\nhumiSensorOffice = msg.payload[0].humi;\n\n// SET VARIABLEN\nflow.set('tempSensorOffice', tempSensorOffice);\nflow.set('humiSensorOffice', humiSensorOffice);\n\nmsg.payload = tempSensorOffice;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 500,
        "wires": [
            [
                "102b4ed35e9a8bed"
            ]
        ]
    },
    {
        "id": "f9c20ea7912c93ca",
        "type": "inject",
        "z": "930c0d79fd93db70",
        "name": "5min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1330,
        "y": 400,
        "wires": [
            [
                "a31c1e1f0752ed4d",
                "47629903b76a4603"
            ]
        ]
    },
    {
        "id": "a31c1e1f0752ed4d",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = 1 ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 500,
        "wires": [
            [
                "d19b056fd207f1f4"
            ]
        ]
    },
    {
        "id": "d19b056fd207f1f4",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1710,
        "y": 500,
        "wires": [
            [
                "730e45d0fa876b9f"
            ]
        ]
    },
    {
        "id": "102b4ed35e9a8bed",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 600,
        "wires": [
            [
                "93ca79aa706068be"
            ]
        ]
    },
    {
        "id": "93ca79aa706068be",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1710,
        "y": 600,
        "wires": [
            [
                "953c2e28d31ed89a",
                "f74bbd9855866fcc",
                "b4fa2acbeb241aa6"
            ]
        ]
    },
    {
        "id": "953c2e28d31ed89a",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SensorSetting TEMP",
        "func": "let tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\ntempOfficeMin = msg.payload[0].min_temp;\ntempOfficeOpt = msg.payload[0].opt_temp;\ntempOfficeMax = msg.payload[0].max_temp;\n\n\n// SET VARIABLEN\nflow.set('tempOfficeMin', tempOfficeMin);\nflow.set('tempOfficeOpt', tempOfficeOpt);\nflow.set('tempOfficeMax', tempOfficeMax);\n\nmsg.payload = tempOfficeOpt;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 700,
        "wires": [
            [
                "b7447c60b6ad4ea8",
                "9bb13f919c6d0dfa"
            ]
        ]
    },
    {
        "id": "47629903b76a4603",
        "type": "mqtt out",
        "z": "930c0d79fd93db70",
        "name": "",
        "topic": "/interval/room/wz",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1530,
        "y": 360,
        "wires": []
    },
    {
        "id": "57b555ed6e8d4f33",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "min_humi",
        "func": "msg.payload = msg.payload[0].min_humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 780,
        "wires": [
            [
                "4c31a2b53d16eed9",
                "cb14065a6622cf92"
            ]
        ]
    },
    {
        "id": "317fc3d698906b9d",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "max_humi",
        "func": "msg.payload = msg.payload[0].max_humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 900,
        "wires": [
            [
                "fc61d6b38c14ef57",
                "663c1a9b5293770d"
            ]
        ]
    },
    {
        "id": "4c31a2b53d16eed9",
        "type": "ui_numeric",
        "z": "930c0d79fd93db70",
        "name": "",
        "label": "min",
        "tooltip": "",
        "group": "dda6c71d7afc8b96",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 550,
        "y": 780,
        "wires": [
            [
                "d90664c2eb19c87c"
            ]
        ]
    },
    {
        "id": "fc61d6b38c14ef57",
        "type": "ui_numeric",
        "z": "930c0d79fd93db70",
        "name": "",
        "label": "max",
        "tooltip": "",
        "group": "dda6c71d7afc8b96",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 550,
        "y": 900,
        "wires": [
            [
                "3854c548a9db7397"
            ]
        ]
    },
    {
        "id": "a877a9fb69198ade",
        "type": "mqtt out",
        "z": "930c0d79fd93db70",
        "name": "",
        "topic": "/interval/wz/select",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 330,
        "y": 120,
        "wires": []
    },
    {
        "id": "d90664c2eb19c87c",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `min_humidity` = '\" + msg.payload + \"' WHERE id = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 780,
        "wires": [
            [
                "4ccf590478e41e0f"
            ]
        ]
    },
    {
        "id": "3854c548a9db7397",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `max_humidity` = '\" + msg.payload + \"' WHERE id = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 900,
        "wires": [
            [
                "4ccf590478e41e0f"
            ]
        ]
    },
    {
        "id": "57d3addf01a2a0f7",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "4ccf590478e41e0f",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 840,
        "wires": [
            [
                "c5c9a434b40cc45d",
                "a31c1e1f0752ed4d"
            ]
        ]
    },
    {
        "id": "cb14065a6622cf92",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "humMin",
        "func": "msg.topic = `humMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 820,
        "wires": [
            [
                "fc61d6b38c14ef57"
            ]
        ]
    },
    {
        "id": "663c1a9b5293770d",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 860,
        "wires": [
            [
                "4c31a2b53d16eed9"
            ]
        ]
    },
    {
        "id": "e58fb610b6518e89",
        "type": "comment",
        "z": "930c0d79fd93db70",
        "name": "Temperatur",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "69963670003512ae",
        "type": "comment",
        "z": "930c0d79fd93db70",
        "name": "Humidity",
        "info": "",
        "x": 100,
        "y": 720,
        "wires": []
    },
    {
        "id": "f74bbd9855866fcc",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SensorSetting HUMI",
        "func": "let humiOfficeMin = flow.get('humiOfficeMin') || 0;\nlet humiOfficeMax = flow.get('humiOfficeMax') || 0;\n\nhumiOfficeMin = msg.payload[0].min_humidity;\nhumiOfficeMax = msg.payload[0].max_humidity;\n\n// SET VARIABLEN\nflow.set('humiOfficeMin', humiOfficeMin);\nflow.set('humiOfficeMax', humiOfficeMax);\n\nmsg.payload = humiOfficeMax;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 860,
        "wires": [
            [
                "605844d174013300",
                "f79f5521774a2851"
            ]
        ]
    },
    {
        "id": "b4fa2acbeb241aa6",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 600,
        "wires": []
    },
    {
        "id": "52e3fd4f8aacb75f",
        "type": "ui_gauge",
        "z": "930c0d79fd93db70",
        "name": "gauge Humidity",
        "group": "dda6c71d7afc8b96",
        "order": 2,
        "width": "6",
        "height": "4",
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#eaa81a"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2020,
        "y": 860,
        "wires": []
    },
    {
        "id": "605844d174013300",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "CHECK Humidity",
        "func": "let humiSensorOffice = flow.get('humiSensorOffice');\nlet humiOfficeMin = flow.get('humiOfficeMin');\nlet humiOfficeMax = flow.get('humiOfficeMax');\n\nmsg.topic = 'dfsdfd';\nmsg = {ui_control:{min:0, max:100, seg1:humiOfficeMin, seg2:humiOfficeMax}, topic:`${msg.topic}`};\n\nmsg.payload = humiSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 860,
        "wires": [
            [
                "2e9e6795b933e8d1",
                "52e3fd4f8aacb75f"
            ]
        ]
    },
    {
        "id": "2e9e6795b933e8d1",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 820,
        "wires": []
    },
    {
        "id": "b7447c60b6ad4ea8",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "CHECK Temp",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\nmsg.topic = 'dfsdfd';\nlet start = tempOfficeMin - 5;\nlet end = tempOfficeMax + 5 ;\nmsg = {ui_control:{min:start, max:end, seg1:tempOfficeMin, seg2:tempOfficeMax}, topic:`${msg.topic}`};\n\nmsg.payload = tempSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 700,
        "wires": [
            [
                "947f3edb36609011",
                "4d4d5330563957ff"
            ]
        ]
    },
    {
        "id": "947f3edb36609011",
        "type": "ui_gauge",
        "z": "930c0d79fd93db70",
        "name": "gauge Temp",
        "group": "afae9d74aa8939b3",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#58a8fd",
            "#00b500",
            "#e6d200"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2010,
        "y": 700,
        "wires": []
    },
    {
        "id": "4d4d5330563957ff",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 660,
        "wires": []
    },
    {
        "id": "6d95689075a8608a",
        "type": "inject",
        "z": "930c0d79fd93db70",
        "name": "INIT",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "0.0",
        "topic": "SELECT * FROM `room_settings` WHERE `id` = '2'",
        "payload": "SELECT * FROM `room_settings` WHERE `id` = '2'",
        "payloadType": "str",
        "x": 672.8958129882812,
        "y": 114.88888549804688,
        "wires": [
            [
                "fb3347b96b654097",
                "7445e129c7edc605"
            ]
        ]
    },
    {
        "id": "fb3347b96b654097",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "a4fec0710d1ef388",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1310,
        "y": 200,
        "wires": [
            [
                "35dad3f917270786"
            ]
        ]
    },
    {
        "id": "7445e129c7edc605",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1049.8958129882812,
        "y": 253.88888549804688,
        "wires": [
            [
                "b91c275991486bcb",
                "a4fec0710d1ef388"
            ]
        ]
    },
    {
        "id": "b91c275991486bcb",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 300,
        "wires": []
    },
    {
        "id": "35dad3f917270786",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 200,
        "wires": []
    },
    {
        "id": "f772d6bfac068565",
        "type": "inject",
        "z": "930c0d79fd93db70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM `room_settings` WHERE `id` = '2'",
        "payload": "",
        "payloadType": "date",
        "x": 700,
        "y": 60,
        "wires": [
            [
                "cc1e21e861321591",
                "a73657e7a626f7a5"
            ]
        ]
    },
    {
        "id": "cc1e21e861321591",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 60,
        "wires": [
            [
                "1435d2ac77744b0c"
            ]
        ]
    },
    {
        "id": "1435d2ac77744b0c",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1230,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a73657e7a626f7a5",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 20,
        "wires": []
    },
    {
        "id": "3e102d6b68e61b65",
        "type": "inject",
        "z": "930c0d79fd93db70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "SELECT * FROM `sensor_data` WHERE `sensor_id` = 1 ORDER BY `updated` DESC LIMIT 0, 1",
        "payload": "",
        "payloadType": "date",
        "x": 1660,
        "y": 320,
        "wires": [
            [
                "d4c5e5b4b970f2a4",
                "62716b912a85f44e",
                "d2b62e505c987659"
            ]
        ]
    },
    {
        "id": "d4c5e5b4b970f2a4",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 120,
        "wires": []
    },
    {
        "id": "62716b912a85f44e",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = 1 ORDER BY `updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 160,
        "wires": [
            [
                "d66cd31b5b067910"
            ]
        ]
    },
    {
        "id": "d66cd31b5b067910",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1851.8958740234375,
        "y": 108.88888549804688,
        "wires": []
    },
    {
        "id": "2ffbc15fdfc2491e",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 2130,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d2b62e505c987659",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "GET sensor_data",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = 1 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 320,
        "wires": [
            [
                "bb4ede295ca9232e",
                "2ffbc15fdfc2491e"
            ]
        ]
    },
    {
        "id": "bb4ede295ca9232e",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 280,
        "wires": []
    },
    {
        "id": "2c701a378d0085dd",
        "type": "inject",
        "z": "930c0d79fd93db70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "SELECT * FROM `sensor_data` WHERE `sensor_id` = 1 ORDER BY `updated` DESC LIMIT 0, 1",
        "payload": "",
        "payloadType": "date",
        "x": 1740,
        "y": 420,
        "wires": [
            [
                "9a92d2e81a816992",
                "5d669d5b21acc59a"
            ]
        ]
    },
    {
        "id": "9a92d2e81a816992",
        "type": "debug",
        "z": "930c0d79fd93db70",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 380,
        "wires": []
    },
    {
        "id": "5d669d5b21acc59a",
        "type": "mysql",
        "z": "930c0d79fd93db70",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1970,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9bb13f919c6d0dfa",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "CHECK Temp",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\nmsg.topic = '°C';\nlet start = tempOfficeMin - 5;\nlet end = tempOfficeMax + 5 ;\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nmsg.payload = tempSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 740,
        "wires": [
            [
                "2cab307979bd9330"
            ]
        ]
    },
    {
        "id": "2cab307979bd9330",
        "type": "ui_chart",
        "z": "930c0d79fd93db70",
        "name": "chart Temperatur",
        "group": "afae9d74aa8939b3",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2030,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f79f5521774a2851",
        "type": "function",
        "z": "930c0d79fd93db70",
        "name": "CHECK Humidity",
        "func": "let humiSensorOffice = flow.get('humiSensorOffice');\nlet humiOfficeMin = flow.get('humiOfficeMin');\nlet humiOfficeMax = flow.get('humiOfficeMax');\n\nmsg.topic = '%';\nmsg = {ui_control:{min:0, max:100}, topic:`${msg.topic}`};\n\nmsg.payload = humiSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 900,
        "wires": [
            [
                "938c3bad1da4f252"
            ]
        ]
    },
    {
        "id": "938c3bad1da4f252",
        "type": "ui_chart",
        "z": "930c0d79fd93db70",
        "name": "chart Luftfeuchte",
        "group": "dda6c71d7afc8b96",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2030,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "5e20bbc63e3aa434",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "4c41182d478af299",
                "70c7124bbff564ab"
            ]
        ]
    },
    {
        "id": "70c7124bbff564ab",
        "type": "mysql",
        "z": "53b67eedfb3a15c5",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "a530b213a2522df9",
                "b76fa41f333fe5b8",
                "bc094a684df55bf4",
                "48e95a3b7ce347d2",
                "ca2d71b3bd5e4b1a"
            ]
        ]
    },
    {
        "id": "4c41182d478af299",
        "type": "debug",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "f98959ee22a25282",
        "type": "inject",
        "z": "53b67eedfb3a15c5",
        "name": "INIT",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "0.0",
        "topic": "SELECT * FROM `room_settings` WHERE `id` = '3'",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "5e20bbc63e3aa434",
                "e565658cd8a79e5a"
            ]
        ]
    },
    {
        "id": "bd2c2d436b6923ca",
        "type": "ui_numeric",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "label": "min",
        "tooltip": "",
        "group": "5270da3bb1dfbe4e",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "db97592fbbd8d1bb"
            ]
        ]
    },
    {
        "id": "3ef7254704ea0ff2",
        "type": "ui_numeric",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "label": "Optimal",
        "tooltip": "",
        "group": "5270da3bb1dfbe4e",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptimal",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 560,
        "y": 440,
        "wires": [
            [
                "c011e1be3749db4e"
            ]
        ]
    },
    {
        "id": "4925ebec6fee037a",
        "type": "ui_numeric",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "label": "max",
        "tooltip": "",
        "group": "5270da3bb1dfbe4e",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 550,
        "y": 560,
        "wires": [
            [
                "d5615e66ebcc9c53"
            ]
        ]
    },
    {
        "id": "a530b213a2522df9",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "min_temp",
        "func": "msg.payload = msg.payload[0].min_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 320,
        "wires": [
            [
                "bd2c2d436b6923ca",
                "8338ccaeac5d6892"
            ]
        ]
    },
    {
        "id": "b76fa41f333fe5b8",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "opt_temp",
        "func": "msg.payload = msg.payload[0].opt_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 440,
        "wires": [
            [
                "3ef7254704ea0ff2",
                "d8540dd9df84570a",
                "81093bc1ee406acb"
            ]
        ]
    },
    {
        "id": "bc094a684df55bf4",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "max_temp",
        "func": "msg.payload = msg.payload[0].max_temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 560,
        "wires": [
            [
                "4925ebec6fee037a",
                "4380c50ef2e65999"
            ]
        ]
    },
    {
        "id": "db97592fbbd8d1bb",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `min_temp` = '\" + msg.payload + \"' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "0ac26fb995f42c20"
            ]
        ]
    },
    {
        "id": "0ac26fb995f42c20",
        "type": "mysql",
        "z": "53b67eedfb3a15c5",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 440,
        "wires": [
            [
                "5e20bbc63e3aa434",
                "a22956cbab1239da",
                "514295beae841dc6"
            ]
        ]
    },
    {
        "id": "c011e1be3749db4e",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `opt_temp` = '\" + msg.payload + \"' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            [
                "0ac26fb995f42c20"
            ]
        ]
    },
    {
        "id": "d5615e66ebcc9c53",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `max_temp` = '\" + msg.payload + \"' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 500,
        "wires": [
            [
                "0ac26fb995f42c20"
            ]
        ]
    },
    {
        "id": "8338ccaeac5d6892",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "tempMin",
        "func": "msg.topic = `tempMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 360,
        "wires": [
            [
                "3ef7254704ea0ff2"
            ]
        ]
    },
    {
        "id": "d8540dd9df84570a",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "tempOptMin",
        "func": "msg.topic = `tempOptMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 480,
        "wires": [
            [
                "4925ebec6fee037a"
            ]
        ]
    },
    {
        "id": "81093bc1ee406acb",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "tempOptMax",
        "func": "msg.topic = `tempOptMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 400,
        "wires": [
            [
                "bd2c2d436b6923ca"
            ]
        ]
    },
    {
        "id": "4380c50ef2e65999",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 520,
        "wires": [
            [
                "3ef7254704ea0ff2"
            ]
        ]
    },
    {
        "id": "f756db82c6aa2825",
        "type": "comment",
        "z": "53b67eedfb3a15c5",
        "name": " WHERE id = '3'",
        "info": "",
        "x": 320,
        "y": 120,
        "wires": []
    },
    {
        "id": "97bb259c377b7c32",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "SensorOffice",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet humiSensorOffice = flow.get('humiSensorOffice');\n\ntempSensorOffice = msg.payload[0].temp;\nhumiSensorOffice = msg.payload[0].humi;\n\n// SET VARIABLEN\nflow.set('tempSensorOffice', tempSensorOffice);\nflow.set('humiSensorOffice', humiSensorOffice);\n\nmsg.payload = tempSensorOffice;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 440,
        "wires": [
            [
                "cb690c82e3c70667"
            ]
        ]
    },
    {
        "id": "e738282ef0087d3e",
        "type": "inject",
        "z": "53b67eedfb3a15c5",
        "name": "5min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1330,
        "y": 280,
        "wires": [
            [
                "1e8abfaaf6b54803",
                "881b1dc1c987dfae"
            ]
        ]
    },
    {
        "id": "a22956cbab1239da",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = 2 ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 440,
        "wires": [
            [
                "018c81f12721dd16"
            ]
        ]
    },
    {
        "id": "018c81f12721dd16",
        "type": "mysql",
        "z": "53b67eedfb3a15c5",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1710,
        "y": 440,
        "wires": [
            [
                "97bb259c377b7c32"
            ]
        ]
    },
    {
        "id": "cb690c82e3c70667",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 540,
        "wires": [
            [
                "d522733b77fdbb8c"
            ]
        ]
    },
    {
        "id": "d522733b77fdbb8c",
        "type": "mysql",
        "z": "53b67eedfb3a15c5",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1710,
        "y": 540,
        "wires": [
            [
                "c431bf732587c81a",
                "3a466471e6453d3c",
                "2bec036a9ddf5b39"
            ]
        ]
    },
    {
        "id": "c431bf732587c81a",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "SensorSetting TEMP",
        "func": "let tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\ntempOfficeMin = msg.payload[0].min_temp;\ntempOfficeOpt = msg.payload[0].opt_temp;\ntempOfficeMax = msg.payload[0].max_temp;\n\n\n// SET VARIABLEN\nflow.set('tempOfficeMin', tempOfficeMin);\nflow.set('tempOfficeOpt', tempOfficeOpt);\nflow.set('tempOfficeMax', tempOfficeMax);\n\nmsg.payload = tempOfficeOpt;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 640,
        "wires": [
            [
                "ff7557e9871ba366",
                "4393a5133c07cba6"
            ]
        ]
    },
    {
        "id": "1e8abfaaf6b54803",
        "type": "mqtt out",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "topic": "/interval/room/wz",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1550,
        "y": 180,
        "wires": []
    },
    {
        "id": "48e95a3b7ce347d2",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "min_humi",
        "func": "msg.payload = msg.payload[0].min_humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 720,
        "wires": [
            [
                "6cb7acc97460d837",
                "4fa0985bcde9db19"
            ]
        ]
    },
    {
        "id": "ca2d71b3bd5e4b1a",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "max_humi",
        "func": "msg.payload = msg.payload[0].max_humidity;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 840,
        "wires": [
            [
                "51e12795d8d853c3",
                "8206ec390d18802f"
            ]
        ]
    },
    {
        "id": "6cb7acc97460d837",
        "type": "ui_numeric",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "label": "min",
        "tooltip": "",
        "group": "45567883aec63278",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 550,
        "y": 720,
        "wires": [
            [
                "5a6055574de773ba"
            ]
        ]
    },
    {
        "id": "51e12795d8d853c3",
        "type": "ui_numeric",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "label": "max",
        "tooltip": "",
        "group": "45567883aec63278",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 550,
        "y": 840,
        "wires": [
            [
                "ca90687afd4ce2b0"
            ]
        ]
    },
    {
        "id": "e565658cd8a79e5a",
        "type": "mqtt out",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "topic": "/interval/kc/select",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "5a6055574de773ba",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `min_humidity` = '\" + msg.payload + \"' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 720,
        "wires": [
            [
                "08422298f8559e55"
            ]
        ]
    },
    {
        "id": "ca90687afd4ce2b0",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "UPDATE `room_settings`",
        "func": "msg.topic = \"UPDATE `room_settings` SET `max_humidity` = '\" + msg.payload + \"' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 840,
        "wires": [
            [
                "08422298f8559e55"
            ]
        ]
    },
    {
        "id": "514295beae841dc6",
        "type": "debug",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 500,
        "wires": []
    },
    {
        "id": "08422298f8559e55",
        "type": "mysql",
        "z": "53b67eedfb3a15c5",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "5e20bbc63e3aa434",
                "a22956cbab1239da"
            ]
        ]
    },
    {
        "id": "4fa0985bcde9db19",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "humMin",
        "func": "msg.topic = `humMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 760,
        "wires": [
            [
                "51e12795d8d853c3"
            ]
        ]
    },
    {
        "id": "8206ec390d18802f",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 800,
        "wires": [
            [
                "6cb7acc97460d837"
            ]
        ]
    },
    {
        "id": "409d00111430e345",
        "type": "comment",
        "z": "53b67eedfb3a15c5",
        "name": "Temperatur",
        "info": "",
        "x": 110,
        "y": 260,
        "wires": []
    },
    {
        "id": "2607fe6404b6f758",
        "type": "comment",
        "z": "53b67eedfb3a15c5",
        "name": "Humidity",
        "info": "",
        "x": 100,
        "y": 660,
        "wires": []
    },
    {
        "id": "3a466471e6453d3c",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "SensorSetting HUMI",
        "func": "let humiOfficeMin = flow.get('humiOfficeMin') || 0;\nlet humiOfficeMax = flow.get('humiOfficeMax') || 0;\n\nhumiOfficeMin = msg.payload[0].min_humidity;\nhumiOfficeMax = msg.payload[0].max_humidity;\n\n// SET VARIABLEN\nflow.set('humiOfficeMin', humiOfficeMin);\nflow.set('humiOfficeMax', humiOfficeMax);\n\nmsg.payload = humiOfficeMax;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 800,
        "wires": [
            [
                "578f6fd80941ed6a",
                "f9c072a2fce4abf3"
            ]
        ]
    },
    {
        "id": "2bec036a9ddf5b39",
        "type": "debug",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 540,
        "wires": []
    },
    {
        "id": "aa26852e2ea6e1c0",
        "type": "ui_gauge",
        "z": "53b67eedfb3a15c5",
        "name": "gauge Humidity",
        "group": "45567883aec63278",
        "order": 2,
        "width": "6",
        "height": "4",
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#00b500",
            "#eaa81a"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2020,
        "y": 800,
        "wires": []
    },
    {
        "id": "578f6fd80941ed6a",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "CHECK Humidity",
        "func": "let humiSensorOffice = flow.get('humiSensorOffice');\nlet humiOfficeMin = flow.get('humiOfficeMin');\nlet humiOfficeMax = flow.get('humiOfficeMax');\n\nmsg.topic = '%';\nmsg = {ui_control:{min:0, max:100, seg1:humiOfficeMin, seg2:humiOfficeMax}, topic:`${msg.topic}`};\n\nmsg.payload = humiSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 800,
        "wires": [
            [
                "b01e6a96f507a9a5",
                "aa26852e2ea6e1c0"
            ]
        ]
    },
    {
        "id": "b01e6a96f507a9a5",
        "type": "debug",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 760,
        "wires": []
    },
    {
        "id": "ff7557e9871ba366",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "CHECK Temp",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\nmsg.topic = '°C';\nlet start = tempOfficeMin - 5;\nlet end = tempOfficeMax + 5 ;\nmsg = {ui_control:{min:start, max:end, seg1:tempOfficeMin, seg2:tempOfficeMax}, topic:`${msg.topic}`};\n\nmsg.payload = tempSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 640,
        "wires": [
            [
                "aa1b33d975af47ec",
                "cbeb46aeafab5767"
            ]
        ]
    },
    {
        "id": "aa1b33d975af47ec",
        "type": "ui_gauge",
        "z": "53b67eedfb3a15c5",
        "name": "gauge Temp",
        "group": "5270da3bb1dfbe4e",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 2010,
        "y": 640,
        "wires": []
    },
    {
        "id": "cbeb46aeafab5767",
        "type": "debug",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 600,
        "wires": []
    },
    {
        "id": "f9c072a2fce4abf3",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "CHECK Humidity",
        "func": "let humiSensorOffice = flow.get('humiSensorOffice');\nlet humiOfficeMin = flow.get('humiOfficeMin');\nlet humiOfficeMax = flow.get('humiOfficeMax');\n\nmsg.topic = '%';\nmsg = {ui_control:{min:0, max:100}, topic:`${msg.topic}`};\n\nmsg.payload = humiSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 840,
        "wires": [
            [
                "99a1d78f8fd4ab8d"
            ]
        ]
    },
    {
        "id": "4393a5133c07cba6",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "CHECK Temp",
        "func": "let tempSensorOffice = flow.get('tempSensorOffice');\nlet tempOfficeMin = flow.get('tempOfficeMin') || 0;\nlet tempOfficeOpt = flow.get('tempOfficeOpt') || 0;\nlet tempOfficeMax = flow.get('tempOfficeMax') || 0;\n\nmsg.topic = '°C';\nlet start = tempOfficeMin - 5;\nlet end = tempOfficeMax + 5 ;\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nmsg.payload = tempSensorOffice;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 680,
        "wires": [
            [
                "7cf2a02f73dc2937"
            ]
        ]
    },
    {
        "id": "99a1d78f8fd4ab8d",
        "type": "ui_chart",
        "z": "53b67eedfb3a15c5",
        "name": "chart Luftfeuchte",
        "group": "45567883aec63278",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2030,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "7cf2a02f73dc2937",
        "type": "ui_chart",
        "z": "53b67eedfb3a15c5",
        "name": "chart Temperatur",
        "group": "5270da3bb1dfbe4e",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2030,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "86900cfa043086da",
        "type": "inject",
        "z": "53b67eedfb3a15c5",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1110,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "881b1dc1c987dfae",
        "type": "function",
        "z": "53b67eedfb3a15c5",
        "name": "Inject",
        "func": "let init = context.get('init') || 1;\n\n// SET VARIABLEN\ncontext.set('init', init);\nmsg.payload = init;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 280,
        "wires": [
            [
                "a22956cbab1239da"
            ]
        ]
    },
    {
        "id": "51c87c693c7b2a1b",
        "type": "comment",
        "z": "53b67eedfb3a15c5",
        "name": "For Init",
        "info": "",
        "x": 1510,
        "y": 240,
        "wires": []
    },
    {
        "id": "9a824439f2601b8b",
        "type": "debug",
        "z": "53b67eedfb3a15c5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 40,
        "wires": []
    },
    {
        "id": "b1ac9b9568568bfd",
        "type": "inject",
        "z": "c17bc758ed437b81",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "027651292fccd352",
                "c7306ffae8bb4efb",
                "b0e57c5a936be6c7"
            ]
        ]
    },
    {
        "id": "72e5b3fc09d64de3",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "room_id",
        "func": "// FLOW GET\nlet room_id = flow.get('room_id');\n\n// MSG\nmsg.payload = room_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "f7f14b6ccc0a9f8e"
            ]
        ]
    },
    {
        "id": "f7f14b6ccc0a9f8e",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '\" + msg.payload + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "94faf7ba585df9a1"
            ]
        ]
    },
    {
        "id": "94faf7ba585df9a1",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1190,
        "y": 180,
        "wires": [
            [
                "16ba596376f91e9b"
            ]
        ]
    },
    {
        "id": "16ba596376f91e9b",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "Flow VARS room_settings",
        "func": "// SET VARIABLEN\n///////////////////////////////\nlet room_id = flow.get('room_id') || 3;\n\nlet min_temp = flow.get('min_temp') || 19;\nlet opt_temp = flow.get('opt_temp') || 21;\nlet max_temp = flow.get('max_temp') || 24;\n\nlet min_humidity = flow.get('min_humidity') || 40;\nlet max_humidity = flow.get('max_humidity') || 70;\n\nlet is_good_co2 = flow.get('is_good_co2') || 900;\nlet is_bad_co2 = flow.get('is_bad_co2') || 1400;\nlet is_alert_co2 = flow.get('is_alert_co2') || 1600;\n\nlet db_good = flow.get('db_good') || 40;\nlet db_bad = flow.get('db_bad') || 70;\n\n///////////////////////////////\nmin_temp = msg.payload[0].min_temp;\nopt_temp = msg.payload[0].opt_temp;\nmax_temp = msg.payload[0].max_temp;\n\nmin_humidity = msg.payload[0].min_humidity;\nmax_humidity = msg.payload[0].max_humidity;\n\nis_good_co2 = msg.payload[0].is_good_co2;\nis_bad_co2 = msg.payload[0].is_bad_co2;\nis_alert_co2 = msg.payload[0].is_alert_co2;\n\ndb_good = msg.payload[0].db_good;\ndb_bad = msg.payload[0].db_bad;\n\n// SET VARIABLEN\n///////////////////////////////\nflow.set('room_id', room_id);\n\nflow.set('min_temp', min_temp);\nflow.set('opt_temp', opt_temp);\nflow.set('max_temp', max_temp);\n\nflow.set('min_humidity', min_humidity);\nflow.set('max_humidity', max_humidity);\n\nflow.set('is_good_co2', is_good_co2);\nflow.set('is_bad_co2', is_bad_co2);\nflow.set('is_alert_co2', is_alert_co2);\n\nflow.set('db_good', db_good);\nflow.set('db_bad', db_bad);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9b05e9d98eadec3a",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "sensor_id",
        "func": "// FLOW GET\nlet sensor_id = flow.get('sensor_id');\n\n// MSG\nmsg.payload = sensor_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 240,
        "wires": [
            [
                "7b43553773db906e"
            ]
        ]
    },
    {
        "id": "7b43553773db906e",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 240,
        "wires": [
            [
                "5819d07b8586375b"
            ]
        ]
    },
    {
        "id": "5819d07b8586375b",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "16970dffacf6bc26"
            ]
        ]
    },
    {
        "id": "16970dffacf6bc26",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "Flow VARS sensor_data",
        "func": "// SET VARIABLEN\n///////////////////////////////\nlet sensor_id = flow.get('sensor_id') || 2;\n\nlet temp = flow.get('temp') || 0;\nlet humi = flow.get('humi') || 0;\nlet co = flow.get('co') || 0;\nlet db = flow.get('db') || 0;\nlet battery = flow.get('battery') || 100;\n\n///////////////////////////////\ntemp = msg.payload[0].temp;\nhumi = msg.payload[0].humi;\nco = msg.payload[0].co;\ndb = msg.payload[0].db;\nbattery = msg.payload[0].battery;\n\n// SET VARIABLEN\n///////////////////////////////\nflow.set('sensor_id', sensor_id);\n\nflow.set('temp', temp);\nflow.set('humi', humi);\nflow.set('co', co);\nflow.set('db', db);\nflow.set('battery', battery);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "027651292fccd352",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SET Room & Sensor ID",
        "func": "// FLOW GET\nlet room_id = flow.get('room_id') || 3;\nlet sensor_id = flow.get('sensor_id') || 2;\n\n// SET\nroom_id = 3;\nsensor_id = 2;\n\n// FLOW SET\nflow.set('room_id', room_id);\nflow.set('sensor_id', sensor_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 200,
        "wires": [
            [
                "72e5b3fc09d64de3",
                "9b05e9d98eadec3a"
            ]
        ]
    },
    {
        "id": "c4f46dca612602b8",
        "type": "inject",
        "z": "c17bc758ed437b81",
        "name": "5min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "027651292fccd352",
                "c62a2c4d0ce44623",
                "c7306ffae8bb4efb",
                "b0e57c5a936be6c7"
            ]
        ]
    },
    {
        "id": "10b0384d0bbf7146",
        "type": "comment",
        "z": "c17bc758ed437b81",
        "name": "Temperatur",
        "info": "",
        "x": 810,
        "y": 400,
        "wires": []
    },
    {
        "id": "d1149e4f40b1b3b2",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\n// MSG\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 540,
        "wires": [
            [
                "ddb4969749dc5cde",
                "21be44cc881f09f0"
            ]
        ]
    },
    {
        "id": "bd2f5f1b2a36f2c4",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "max_temp",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp') || 24;\n\n// MSG\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 620,
        "wires": [
            [
                "2d6edf7d8dd0f641",
                "1fe30dc27a075b95"
            ]
        ]
    },
    {
        "id": "ddb4969749dc5cde",
        "type": "ui_numeric",
        "z": "c17bc758ed437b81",
        "name": "",
        "label": "Minimal",
        "tooltip": "",
        "group": "03604adbe40ccb34",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 1260,
        "y": 460,
        "wires": [
            [
                "e2f5e3facb38c26f",
                "21be44cc881f09f0"
            ]
        ]
    },
    {
        "id": "2d6edf7d8dd0f641",
        "type": "ui_numeric",
        "z": "c17bc758ed437b81",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "03604adbe40ccb34",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 1260,
        "y": 700,
        "wires": [
            [
                "68510ac62592098f",
                "1fe30dc27a075b95"
            ]
        ]
    },
    {
        "id": "21be44cc881f09f0",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "tempMin",
        "func": "msg.topic = `tempMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 540,
        "wires": [
            [
                "2d6edf7d8dd0f641"
            ]
        ]
    },
    {
        "id": "e2f5e3facb38c26f",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\nmin_temp = msg.payload;\n\n// FLOAT SET\nflow.set('min_temp', min_temp);\n\n// MSG\nmsg.payload = min_temp;\n\nmsg.topic = \"UPDATE `room_settings` SET `min_temp` = '\" + min_temp + \"' WHERE id = '3'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 540,
        "wires": [
            [
                "9441cce20112f8d8",
                "0539d02c939589f9",
                "ea81a1f611d458c0",
                "8230f72d28d0c6fb",
                "abe77d34591dce4e"
            ]
        ]
    },
    {
        "id": "68510ac62592098f",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp');\n\nmax_temp = msg.payload;\n\n// FLOAT SET\nflow.set('max_temp', max_temp);\n\n// MSG\nmsg.payload = max_temp;\n\nmsg.topic = \"UPDATE `room_settings` SET `max_temp` = '\" + max_temp + \"' WHERE id = '3'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 620,
        "wires": [
            [
                "9441cce20112f8d8",
                "0539d02c939589f9",
                "ea81a1f611d458c0",
                "8230f72d28d0c6fb",
                "abe77d34591dce4e"
            ]
        ]
    },
    {
        "id": "9441cce20112f8d8",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1890,
        "y": 600,
        "wires": [
            [
                "2ab8521f120b5411"
            ]
        ]
    },
    {
        "id": "2ab8521f120b5411",
        "type": "debug",
        "z": "c17bc758ed437b81",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 600,
        "wires": []
    },
    {
        "id": "c7306ffae8bb4efb",
        "type": "delay",
        "z": "c17bc758ed437b81",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 880,
        "wires": [
            [
                "d1149e4f40b1b3b2",
                "bd2f5f1b2a36f2c4",
                "0539d02c939589f9",
                "ea81a1f611d458c0",
                "abe77d34591dce4e",
                "8230f72d28d0c6fb",
                "d039276272a12c54",
                "5a2964f02b024c91",
                "e282257fbedfc792",
                "721edc53c708145f",
                "585b33efab19d9f0"
            ]
        ]
    },
    {
        "id": "c62a2c4d0ce44623",
        "type": "mqtt out",
        "z": "c17bc758ed437b81",
        "name": "",
        "topic": "/interval/room/3",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 400,
        "y": 140,
        "wires": []
    },
    {
        "id": "1fe30dc27a075b95",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 620,
        "wires": [
            [
                "ddb4969749dc5cde"
            ]
        ]
    },
    {
        "id": "0539d02c939589f9",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "gauge Temp ui_control",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\n\nlet min_temp = flow.get('min_temp');\nlet opt_temp = flow.get('opt_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nlet start = min_temp - 5;\nlet end = max_temp + 5;\n\n// MSG\nmsg.topic = '°C';\nmsg = {ui_control:{min:start, max:end, seg1:min_temp, seg2:max_temp}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 820,
        "wires": [
            [
                "94331adc045078d2"
            ]
        ]
    },
    {
        "id": "94331adc045078d2",
        "type": "ui_gauge",
        "z": "c17bc758ed437b81",
        "name": "gauge Temp",
        "group": "03604adbe40ccb34",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1110,
        "y": 820,
        "wires": []
    },
    {
        "id": "ea81a1f611d458c0",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Temp ui_control",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\n\nlet min_temp = flow.get('min_temp');\nlet opt_temp = flow.get('opt_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nlet start = min_temp - 3;\nlet end = max_temp + 3;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 860,
        "wires": [
            [
                "426bcac037b95383"
            ]
        ]
    },
    {
        "id": "abe77d34591dce4e",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Temp max_temp",
        "func": "// FLOW GET\nlet max_temp = flow.get('max_temp');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 940,
        "wires": [
            [
                "426bcac037b95383"
            ]
        ]
    },
    {
        "id": "8230f72d28d0c6fb",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Temp min_temp",
        "func": "// FLOW GET\nlet min_temp = flow.get('min_temp');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 900,
        "wires": [
            [
                "426bcac037b95383"
            ]
        ]
    },
    {
        "id": "b0e57c5a936be6c7",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SET Outdoor",
        "func": "// FLOW GET\nlet outdoor_id = flow.get('outdoor_id') || 4;\n\n// SET\noutdoor_id = 4;\n\n// FLOW SET\nflow.set('outdoor_id', outdoor_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            [
                "2ce0d59bbbf93cbb"
            ]
        ]
    },
    {
        "id": "2ce0d59bbbf93cbb",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "outdoor",
        "func": "// FLOW GET\nlet outdoor_id = flow.get('outdoor_id');\n\n// MSG\nmsg.payload = outdoor_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 300,
        "wires": [
            [
                "16c7ca8091c8143a"
            ]
        ]
    },
    {
        "id": "16c7ca8091c8143a",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 300,
        "wires": [
            [
                "f2ca4b26155db456"
            ]
        ]
    },
    {
        "id": "f2ca4b26155db456",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1190,
        "y": 300,
        "wires": [
            [
                "62753ac2c81ba937"
            ]
        ]
    },
    {
        "id": "62753ac2c81ba937",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "Flow VARS sensor_data (Outdoor)",
        "func": "// FLOW GET\n///////////////////////////////\nlet outdoor_temp = flow.get('outdoor_temp') || 0;\nlet outdoor_humi = flow.get('outdoor_humi') || 0;\n\n///////////////////////////////\noutdoor_temp = msg.payload[0].temp;\noutdoor_humi = msg.payload[0].humi;\n\n// FLOW SET\nflow.set('outdoor_temp', outdoor_temp);\nflow.set('outdoor_humi', outdoor_humi);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d039276272a12c54",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// MSG\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1020,
        "wires": [
            [
                "fc4abf4985ba6abc",
                "22cc6e37f3d1927f"
            ]
        ]
    },
    {
        "id": "fc4abf4985ba6abc",
        "type": "ui_text",
        "z": "c17bc758ed437b81",
        "group": "cc7d80cc7bb13156",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<h4>Temperatur</h4>",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5a2964f02b024c91",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "temp",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1160,
        "wires": [
            [
                "42420f48afe9691f"
            ]
        ]
    },
    {
        "id": "e282257fbedfc792",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1200,
        "wires": [
            [
                "42420f48afe9691f"
            ]
        ]
    },
    {
        "id": "42420f48afe9691f",
        "type": "ui_chart",
        "z": "c17bc758ed437b81",
        "name": "chart Outdoor & Indoor",
        "group": "cc7d80cc7bb13156",
        "order": 2,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1160,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "f411da0cf35a8d21",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "text outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// MSG\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2120,
        "wires": [
            [
                "9ede7e0c2131bdd8",
                "a917acdb4a94ac7e"
            ]
        ]
    },
    {
        "id": "9ede7e0c2131bdd8",
        "type": "ui_text",
        "z": "c17bc758ed437b81",
        "group": "cc7d80cc7bb13156",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Headline humi",
        "label": "<h4>Luftfeuchte</h4>",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 2120,
        "wires": []
    },
    {
        "id": "a917acdb4a94ac7e",
        "type": "debug",
        "z": "c17bc758ed437b81",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 2080,
        "wires": []
    },
    {
        "id": "22cc6e37f3d1927f",
        "type": "debug",
        "z": "c17bc758ed437b81",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 1080,
        "wires": []
    },
    {
        "id": "426bcac037b95383",
        "type": "ui_chart",
        "z": "c17bc758ed437b81",
        "name": "chart Temp",
        "group": "03604adbe40ccb34",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "721edc53c708145f",
        "type": "delay",
        "z": "c17bc758ed437b81",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 1440,
        "wires": [
            [
                "c887e21e3a57f6be",
                "02d70a0d8bb6e902",
                "f411da0cf35a8d21",
                "f6bd571cd48bbe71",
                "1730444f7cc3e099",
                "1b9b6deae75a042e",
                "c2a7be4647db9dc2",
                "580278a390233616",
                "94e08bc9764f5293"
            ]
        ]
    },
    {
        "id": "c887e21e3a57f6be",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "min_humidity",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\n\n// MSG\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1520,
        "wires": [
            [
                "4a284082de4667c3",
                "c02cc544eef761c4"
            ]
        ]
    },
    {
        "id": "02d70a0d8bb6e902",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\n// MSG\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1600,
        "wires": [
            [
                "602f72f8d0d45277",
                "4512554c2475327e"
            ]
        ]
    },
    {
        "id": "602f72f8d0d45277",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "humiMax",
        "func": "msg.topic = `humiMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1600,
        "wires": [
            [
                "4a284082de4667c3"
            ]
        ]
    },
    {
        "id": "c02cc544eef761c4",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "humMin",
        "func": "msg.topic = `humMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1520,
        "wires": [
            [
                "4512554c2475327e"
            ]
        ]
    },
    {
        "id": "4a284082de4667c3",
        "type": "ui_numeric",
        "z": "c17bc758ed437b81",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "fd0cbb5183778ce4",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 1030,
        "y": 1460,
        "wires": [
            [
                "1224573e24b4bf9a",
                "c02cc544eef761c4"
            ]
        ]
    },
    {
        "id": "1224573e24b4bf9a",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\n\nmin_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nmsg.payload = min_humidity;\n\nmsg.topic = \"UPDATE `room_settings` SET `min_humidity` = '\" + min_humidity + \"' WHERE id = '3'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1520,
        "wires": [
            [
                "707fe81073cf8475",
                "1b9b6deae75a042e",
                "c2a7be4647db9dc2",
                "580278a390233616",
                "94e08bc9764f5293"
            ]
        ]
    },
    {
        "id": "b86215d93baa2187",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\nmax_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nmsg.max_humidity = max_humidity;\nmsg.topic = \"UPDATE `room_settings` SET `max_humidity` = '\" + max_humidity + \"' WHERE id = '3'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1600,
        "wires": [
            [
                "707fe81073cf8475",
                "1b9b6deae75a042e",
                "c2a7be4647db9dc2",
                "580278a390233616",
                "94e08bc9764f5293"
            ]
        ]
    },
    {
        "id": "4512554c2475327e",
        "type": "ui_numeric",
        "z": "c17bc758ed437b81",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "fd0cbb5183778ce4",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 1020,
        "y": 1660,
        "wires": [
            [
                "b86215d93baa2187",
                "602f72f8d0d45277"
            ]
        ]
    },
    {
        "id": "707fe81073cf8475",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1610,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "f6bd571cd48bbe71",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart outdoor_humi",
        "func": "// FLOW GET\nlet humi = flow.get('humi') || 0;\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2280,
        "wires": [
            [
                "ca41772ad2bca731"
            ]
        ]
    },
    {
        "id": "ca41772ad2bca731",
        "type": "ui_chart",
        "z": "c17bc758ed437b81",
        "name": "chart Outdoor & Indoor humi",
        "group": "cc7d80cc7bb13156",
        "order": 4,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "1730444f7cc3e099",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2340,
        "wires": [
            [
                "ca41772ad2bca731"
            ]
        ]
    },
    {
        "id": "585b33efab19d9f0",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Temp ui_control",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// SET\nlet start = -20;\nlet end = 50;\n\nif(temp > outdoor_temp) {\n    start = outdoor_temp - 5;\n    end = temp + 1;\n} else {\n    start = temp + 5;\n    end = outdoor_temp - 1;\n}\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1120,
        "wires": [
            [
                "42420f48afe9691f"
            ]
        ]
    },
    {
        "id": "1bb7e2b523e9f584",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nlet start = min_humidity - 5;\nlet end = max_humidity + 5;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n//msg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "1b9b6deae75a042e",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "gauge Temp ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = '%';\nmsg = {ui_control:{min:start, max:end, seg1:min_humidity, seg2:max_humidity}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1720,
        "wires": [
            [
                "f5f6eea242d7285d"
            ]
        ]
    },
    {
        "id": "f5f6eea242d7285d",
        "type": "ui_gauge",
        "z": "c17bc758ed437b81",
        "name": "gauge Humi",
        "group": "fd0cbb5183778ce4",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1010,
        "y": 1720,
        "wires": []
    },
    {
        "id": "4804966923b0e744",
        "type": "comment",
        "z": "c17bc758ed437b81",
        "name": "Outdoor",
        "info": "",
        "x": 720,
        "y": 2060,
        "wires": []
    },
    {
        "id": "c2a7be4647db9dc2",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity') || 40;\nlet max_humidity = flow.get('max_humidity') || 70;\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1780,
        "wires": [
            [
                "2df00ac3592b845e"
            ]
        ]
    },
    {
        "id": "580278a390233616",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Temp min_temp",
        "func": "// FLOW GET\nlet min_humidity = flow.get('min_humidity');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1820,
        "wires": [
            [
                "2df00ac3592b845e"
            ]
        ]
    },
    {
        "id": "94e08bc9764f5293",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "chart Temp max_temp",
        "func": "// FLOW GET\nlet max_humidity = flow.get('max_humidity');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1860,
        "wires": [
            [
                "2df00ac3592b845e"
            ]
        ]
    },
    {
        "id": "2df00ac3592b845e",
        "type": "ui_chart",
        "z": "c17bc758ed437b81",
        "name": "chart Humi",
        "group": "fd0cbb5183778ce4",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "4dd5e452d0fe4dba",
        "type": "cronplus",
        "z": "ff130a5b5bc711f1",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 5 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 300,
        "wires": [
            [
                "835092c2caa0139d",
                "c7e00d6ae766f0fe",
                "c3b5adb7f0d74a09",
                "b3bd4ff481d78732",
                "3828cd7df779218b",
                "894b16f028158c66",
                "c789d4ba2a8ac2a7",
                "a3d5fd6f95bc5836",
                "08c8ebf19e6a7c23"
            ]
        ]
    },
    {
        "id": "47a084ab817968a6",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "INSERT",
        "info": "",
        "x": 840,
        "y": 140,
        "wires": []
    },
    {
        "id": "c3b5adb7f0d74a09",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "OW: INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet ow_current_temp = global.get('ow_current_temp') || 0;\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// OW\nlet ow_temp = context.get('ow_temp') || 0.00;\now_temp = ow_current_temp;\n\nlet ow_hum = context.get('ow_hum') || 0.00;\now_hum = ow_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < ow_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(ow_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(ow_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < ow_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(ow_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(ow_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('2', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 220,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "c7e00d6ae766f0fe",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "WB: INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet wb_current_temp = global.get('wb_current_temp') || 0;\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\n\n// WB\nlet wb_temp = context.get('wb_temp') || 0.00;\nwb_temp = wb_current_temp;\n\nlet wb_hum = context.get('wb_hum') || 0.00;\nwb_hum = wb_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < wb_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(wb_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(wb_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < wb_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(wb_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(wb_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nmsg.payload = wb_current_humidity;\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('3', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 260,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "b3bd4ff481d78732",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "WA: INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet wa_current_temp = global.get('wa_current_temp') || 0;\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\n\n// WB\nlet wa_temp = context.get('wa_temp') || 0.00;\nwa_temp = wa_current_temp;\n\nlet wa_hum = context.get('wa_hum') || 0.00;\nwa_hum = wa_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < wa_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(wa_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(wa_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < wa_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(wa_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(wa_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nmsg.payload = wa_current_humidity;\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('4', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 300,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "835092c2caa0139d",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/cron/compare_data/insert",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 510,
        "y": 180,
        "wires": []
    },
    {
        "id": "0322e9a2232a9749",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1210,
        "y": 240,
        "wires": [
            [
                "f0649a6fb732627f"
            ]
        ]
    },
    {
        "id": "4d1c2c4dd6dbf8d5",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1960,
        "y": 180,
        "wires": [
            [
                "d7605e113cb319f6"
            ]
        ]
    },
    {
        "id": "d7605e113cb319f6",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "Data from YR",
        "func": "msg.topic = \"SELECT co.temp, co.humi FROM `apis` AS `api` JOIN `compare_data` AS `co` ON co.api_id = api.id WHERE api.id = '1'\";\nmsg.payload = `yr`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2175.8958129882812,
        "y": 184.22222900390625,
        "wires": [
            [
                "2716d3c08c462192"
            ]
        ]
    },
    {
        "id": "2716d3c08c462192",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 2386.8958129882812,
        "y": 184.22222900390625,
        "wires": [
            [
                "017d381b4cf9a7b8"
            ]
        ]
    },
    {
        "id": "017d381b4cf9a7b8",
        "type": "json",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2570,
        "y": 180,
        "wires": [
            [
                "56b1e6e08d2a80a2"
            ]
        ]
    },
    {
        "id": "56b1e6e08d2a80a2",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "sum_temp",
        "func": "let list = msg.payload;\nlet sum_temp = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_temp = sum_temp + list[i].temp;\n}\n\nmsg.payload = sum_temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 180,
        "wires": [
            [
                "6e89688406548b43"
            ]
        ]
    },
    {
        "id": "6e89688406548b43",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2950,
        "y": 180,
        "wires": []
    },
    {
        "id": "d035e41bbe09fb58",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2710,
        "y": 120,
        "wires": []
    },
    {
        "id": "100378d5be7c2e73",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `yr_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(temp) as `ow_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '2'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1240,
        "wires": [
            [
                "1bf367fde44d8e92"
            ]
        ]
    },
    {
        "id": "1bf367fde44d8e92",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1220,
        "wires": [
            [
                "cb5c676fd5f9f284"
            ]
        ]
    },
    {
        "id": "cb5c676fd5f9f284",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1240,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "f61247d38d88d87f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `ow_sum_temp",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(temp) as `ow_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '2'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1280,
        "wires": [
            [
                "fdd18a058e1c339c"
            ]
        ]
    },
    {
        "id": "fdd18a058e1c339c",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1280,
        "wires": [
            [
                "0530fc7b4c66e9aa"
            ]
        ]
    },
    {
        "id": "0530fc7b4c66e9aa",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\now_sum_temp = msg.payload[0].ow_sum_temp;\now_sum_temp = ow_sum_temp.toFixed(2);\now_sum_temp = `-${ow_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1280,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "2c7150e5f83d934f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1340,
        "wires": [
            [
                "49f9f789c0561e80"
            ]
        ]
    },
    {
        "id": "49f9f789c0561e80",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_temp",
        "func": "// GET VARIABLEN\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwb_sum_temp = msg.payload[0].wb_sum_temp;\nwb_sum_temp = wb_sum_temp.toFixed(2);\nwb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_temp', wb_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_temp);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1320,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "ed0f58e7cea930f3",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "HOUR",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "7b2c610b34574b1d",
                "f61247d38d88d87f",
                "100378d5be7c2e73",
                "26516b7b451f0db0",
                "7ef99ade1be61a8c",
                "f561a8614a172b3d",
                "4a1e8067f5140607",
                "ca1404be0d066a92"
            ]
        ]
    },
    {
        "id": "7b2c610b34574b1d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `wb_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT SUM(temp) as `wb_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '3'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1320,
        "wires": [
            [
                "2c7150e5f83d934f"
            ]
        ]
    },
    {
        "id": "dc26421c79597122",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "DAY",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 day)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1440,
        "wires": [
            [
                "100378d5be7c2e73",
                "f61247d38d88d87f",
                "7b2c610b34574b1d",
                "26516b7b451f0db0",
                "7ef99ade1be61a8c",
                "f561a8614a172b3d",
                "4a1e8067f5140607",
                "ca1404be0d066a92"
            ]
        ]
    },
    {
        "id": "9f2a8d0f8580bf32",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "MONTH",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 month)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1500,
        "wires": [
            [
                "100378d5be7c2e73",
                "f61247d38d88d87f",
                "7b2c610b34574b1d",
                "26516b7b451f0db0",
                "7ef99ade1be61a8c",
                "f561a8614a172b3d",
                "4a1e8067f5140607",
                "ca1404be0d066a92"
            ]
        ]
    },
    {
        "id": "26516b7b451f0db0",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "\"SELECT SUM(temp) as `wa_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT SUM(temp) as `wa_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '4'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1360,
        "wires": [
            [
                "74f6c022d9b9814c"
            ]
        ]
    },
    {
        "id": "74f6c022d9b9814c",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1400,
        "wires": [
            [
                "412970fa52a11cb3"
            ]
        ]
    },
    {
        "id": "412970fa52a11cb3",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_temp",
        "func": "// GET VARIABLEN\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwa_sum_temp = msg.payload[0].wa_sum_temp;\nwa_sum_temp = wa_sum_temp.toFixed(2);\nwa_sum_temp = `-${wa_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_temp', wa_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_temp);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1360,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "7ef99ade1be61a8c",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiYR",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(humi) as yr_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "b86e948d6a3730da"
            ]
        ]
    },
    {
        "id": "b86e948d6a3730da",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1500,
        "wires": [
            [
                "f9b84431080e2fe6"
            ]
        ]
    },
    {
        "id": "f9b84431080e2fe6",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_hum",
        "func": "// GET VARIABLEN\nlet yr_sum_hum2 = flow.get('yr_sum_hum') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_hum = msg.payload[0].yr_sum_hum;\nyr_sum_hum = yr_sum_hum.toFixed(2);\nyr_sum_hum = `-${yr_sum_hum}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_hum2', yr_sum_hum2);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_hum);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1520,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "9c6a1746d7031e29",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "HUMIDITY",
        "info": "",
        "x": 480,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f561a8614a172b3d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiOW",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(humi) as ow_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1560,
        "wires": [
            [
                "d83049c8ea6dfb37"
            ]
        ]
    },
    {
        "id": "d83049c8ea6dfb37",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1560,
        "wires": [
            [
                "0cc7023f1daa3ae1"
            ]
        ]
    },
    {
        "id": "0cc7023f1daa3ae1",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_hum",
        "func": "// GET VARIABLEN\nlet ow_sum_hum = flow.get('ow_sum_hum') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\now_sum_hum = msg.payload[0].ow_sum_hum;\now_sum_hum = ow_sum_hum.toFixed(2);\now_sum_hum = `-${ow_sum_hum}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_hum', ow_sum_hum);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_hum);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1560,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "4a1e8067f5140607",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiWB",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT SUM(humi) as wb_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1600,
        "wires": [
            [
                "df0243ef6bd9f1f4"
            ]
        ]
    },
    {
        "id": "df0243ef6bd9f1f4",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1620,
        "wires": [
            [
                "4bcd8f7a6c01d696"
            ]
        ]
    },
    {
        "id": "4bcd8f7a6c01d696",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_hum",
        "func": "// GET VARIABLEN\nlet wb_sum_hum = flow.get('wb_sum_hum') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwb_sum_hum = msg.payload[0].wb_sum_hum;\nwb_sum_hum = wb_sum_hum.toFixed(2);\nwb_sum_hum = `-${wb_sum_hum}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_hum', wb_sum_hum);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_hum);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1600,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "ca1404be0d066a92",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiWA",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT SUM(humi) as wa_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '4'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1640,
        "wires": [
            [
                "d1c464d5c4f2136d"
            ]
        ]
    },
    {
        "id": "d1c464d5c4f2136d",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1680,
        "wires": [
            [
                "7c1c77fb4ce22f60"
            ]
        ]
    },
    {
        "id": "7c1c77fb4ce22f60",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_hum",
        "func": "// GET VARIABLEN\nlet wa_sum_hum = flow.get('wa_sum_hum') || 0;\nlet api = msg.headers.sum;\n//let offerer = msg.headers.sum;\n\n// FUNKTION\nwa_sum_hum = msg.payload[0].wa_sum_hum;\nwa_sum_hum = wa_sum_hum.toFixed(2);\nwa_sum_hum = `-${wa_sum_hum}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_hum', wa_sum_hum);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_hum);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1640,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "6586d537d6997b26",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "TEMPERATUR",
        "info": "",
        "x": 500,
        "y": 1200,
        "wires": []
    },
    {
        "id": "73978670d8a7076e",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 1,
        "width": "6",
        "height": "3",
        "label": "Temperatur °C",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "°C",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ffbf0f",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "80e316de51758a76",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 2,
        "width": "6",
        "height": "3",
        "label": "Luftfeuchte %",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#72b8fd",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "8915ae7c5e0d9e8b",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/cron/compare/hello",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 390,
        "y": 440,
        "wires": []
    },
    {
        "id": "fe4f3a386e59f65a",
        "type": "cronplus",
        "z": "ff130a5b5bc711f1",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "str",
                "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
                "expressionType": "cron",
                "expression": "0 6 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 620,
        "wires": [
            [
                "8915ae7c5e0d9e8b",
                "f42915855d4b06df",
                "ce5912f0e9f07f4c"
            ]
        ]
    },
    {
        "id": "f42915855d4b06df",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 560,
        "wires": []
    },
    {
        "id": "0f3c28d6f2b40e07",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "text /cron/compare/hello",
        "label": "/cron/compare/hello",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 500,
        "wires": []
    },
    {
        "id": "3828cd7df779218b",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text /cron/compare_data/insert",
        "label": "/cron/compare_data/insert",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "894b16f028158c66",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "c789d4ba2a8ac2a7",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "next /cron/compare_data/insert",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "ce5912f0e9f07f4c",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "next desc /cron/compare/hello",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 430,
        "y": 540,
        "wires": []
    },
    {
        "id": "f0649a6fb732627f",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/cron/compare_data/insert/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1480,
        "y": 240,
        "wires": []
    },
    {
        "id": "a3d5fd6f95bc5836",
        "type": "delay",
        "z": "ff130a5b5bc711f1",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "ed0f58e7cea930f3"
            ]
        ]
    },
    {
        "id": "9850fd95eb6c14ef",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2340,
        "wires": []
    },
    {
        "id": "7ee1c5f826b21f43",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1220,
        "wires": [
            [
                "ed0f58e7cea930f3"
            ]
        ]
    },
    {
        "id": "91e19817b7caa0c6",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_temp_1h",
        "func": "let sql = \"SELECT * FROM `yr_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1980,
        "wires": [
            [
                "35e9eeeaa2d60f79"
            ]
        ]
    },
    {
        "id": "a47cdec4909a0d00",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "x": 370,
        "y": 2700,
        "wires": [
            [
                "841601c6ccdeb208"
            ]
        ]
    },
    {
        "id": "35e9eeeaa2d60f79",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 1980,
        "wires": [
            [
                "f535bdb3560d9207",
                "a7ec37e18ae897a9",
                "f35bdf5cb26a4f20"
            ]
        ]
    },
    {
        "id": "841601c6ccdeb208",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 9,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "HOUR2",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2780,
        "wires": [
            [
                "91e19817b7caa0c6",
                "db149bfe027d51ad",
                "56d606156425b79c",
                "198d59bbfadaf85a",
                "d3aaa1e7c94b102b",
                "59ac5f7fbe724440",
                "727d77fab665d3b8",
                "45ef2b7266b948ae"
            ]
        ]
    },
    {
        "id": "f535bdb3560d9207",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2260,
        "wires": [
            [
                "5cf78e3730b938b9"
            ]
        ]
    },
    {
        "id": "db149bfe027d51ad",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_temp_1h`",
        "func": "let sql = \"SELECT * FROM `ow_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2040,
        "wires": [
            [
                "51927836d2086bb1"
            ]
        ]
    },
    {
        "id": "51927836d2086bb1",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2040,
        "wires": [
            [
                "695a7a8515fc863d"
            ]
        ]
    },
    {
        "id": "695a7a8515fc863d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\n\n// FUNKTION\now_sum_temp = msg.payload[0].ow_sum_temp;\now_sum_temp = ow_sum_temp.toFixed(2);\now_sum_temp = `-${ow_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2320,
        "wires": [
            [
                "5cf78e3730b938b9",
                "780b439ed13c88c3"
            ]
        ]
    },
    {
        "id": "89ec105b245e4e08",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "DAY2",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 day)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 2860,
        "wires": [
            [
                "3b7acb53dafe710d",
                "0ae198bc2dca6bf8",
                "d42d6c1dd21579cb",
                "cc52706ec8bb874e",
                "6e4579f681274c4a",
                "6f9774cf44caf4df",
                "b5b7523a5991796d",
                "612b3bbedd3832fc"
            ]
        ]
    },
    {
        "id": "3b7acb53dafe710d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_temp_1d",
        "func": "let sql = \"SELECT * FROM `yr_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2260,
        "wires": [
            [
                "6619e1677926c992"
            ]
        ]
    },
    {
        "id": "0ae198bc2dca6bf8",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_temp_1d`",
        "func": "let sql = \"SELECT * FROM `ow_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2320,
        "wires": [
            [
                "70ef16d2a4e59d03"
            ]
        ]
    },
    {
        "id": "6619e1677926c992",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2260,
        "wires": [
            [
                "f535bdb3560d9207",
                "f35bdf5cb26a4f20"
            ]
        ]
    },
    {
        "id": "70ef16d2a4e59d03",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2320,
        "wires": [
            [
                "695a7a8515fc863d"
            ]
        ]
    },
    {
        "id": "5cf78e3730b938b9",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 7,
        "width": "6",
        "height": "3",
        "label": "Temperatur °C",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "°C",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ffbf0f",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1560,
        "y": 2340,
        "wires": [
            [
                "9850fd95eb6c14ef"
            ]
        ]
    },
    {
        "id": "56d606156425b79c",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_temp_1h`",
        "func": "let sql = \"SELECT * FROM `wb_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2100,
        "wires": [
            [
                "33c67d01dd0f4333"
            ]
        ]
    },
    {
        "id": "33c67d01dd0f4333",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2100,
        "wires": [
            [
                "bd61e61059bacf32"
            ]
        ]
    },
    {
        "id": "bd61e61059bacf32",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_temp",
        "func": "// GET VARIABLEN\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\n\n// FUNKTION\nwb_sum_temp = msg.payload[0].wb_sum_temp;\nwb_sum_temp = wb_sum_temp.toFixed(2);\nwb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_temp', wb_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_temp);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2380,
        "wires": [
            [
                "5cf78e3730b938b9"
            ]
        ]
    },
    {
        "id": "d42d6c1dd21579cb",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_temp_1d`",
        "func": "let sql = \"SELECT * FROM `wb_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2380,
        "wires": [
            [
                "40f7abc710c2cebe"
            ]
        ]
    },
    {
        "id": "40f7abc710c2cebe",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2380,
        "wires": [
            [
                "bd61e61059bacf32"
            ]
        ]
    },
    {
        "id": "198d59bbfadaf85a",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_temp_1h`",
        "func": "let sql = \"SELECT * FROM `wa_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2160,
        "wires": [
            [
                "f37e7a99ed6e65d9"
            ]
        ]
    },
    {
        "id": "f37e7a99ed6e65d9",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2160,
        "wires": [
            [
                "2a276ba23201a9eb"
            ]
        ]
    },
    {
        "id": "2a276ba23201a9eb",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_temp",
        "func": "// GET VARIABLEN\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\n\n// FUNKTION\nwa_sum_temp = msg.payload[0].wa_sum_temp;\nwa_sum_temp = wa_sum_temp.toFixed(2);\nwa_sum_temp = `-${wa_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_temp', wa_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_temp);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2440,
        "wires": [
            [
                "5cf78e3730b938b9"
            ]
        ]
    },
    {
        "id": "cc52706ec8bb874e",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_temp_1d`",
        "func": "let sql = \"SELECT * FROM `wa_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2440,
        "wires": [
            [
                "2aa447d0ee94b724"
            ]
        ]
    },
    {
        "id": "2aa447d0ee94b724",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2440,
        "wires": [
            [
                "2a276ba23201a9eb"
            ]
        ]
    },
    {
        "id": "91f785fe9742d32e",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "MONTH2",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 month)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2940,
        "wires": [
            [
                "d576e12b014f2ce5",
                "258a92b69d4f4a3f",
                "d22dcae7ef3a5bbe",
                "d1dc15db4249248a",
                "fb16eb51eee69c9f",
                "d3c7fe675a3c5c4d",
                "065b0fe11503171b",
                "d00f9d4bd188fdbb"
            ]
        ]
    },
    {
        "id": "d576e12b014f2ce5",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_temp_1m",
        "func": "let sql = \"SELECT * FROM `yr_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2560,
        "wires": [
            [
                "20287b89c2540113"
            ]
        ]
    },
    {
        "id": "258a92b69d4f4a3f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_temp_1m`",
        "func": "let sql = \"SELECT * FROM `ow_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2620,
        "wires": [
            [
                "5369ac459efa6c3e"
            ]
        ]
    },
    {
        "id": "d22dcae7ef3a5bbe",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_temp_1m`",
        "func": "let sql = \"SELECT * FROM `wb_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2680,
        "wires": [
            [
                "5a37a519ad058eb2"
            ]
        ]
    },
    {
        "id": "d1dc15db4249248a",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_temp_1m`",
        "func": "let sql = \"SELECT * FROM `wa_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2740,
        "wires": [
            [
                "522a3d74ccba9c0f"
            ]
        ]
    },
    {
        "id": "20287b89c2540113",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2560,
        "wires": [
            [
                "f535bdb3560d9207"
            ]
        ]
    },
    {
        "id": "5369ac459efa6c3e",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2620,
        "wires": [
            [
                "695a7a8515fc863d"
            ]
        ]
    },
    {
        "id": "5a37a519ad058eb2",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2680,
        "wires": [
            [
                "bd61e61059bacf32"
            ]
        ]
    },
    {
        "id": "522a3d74ccba9c0f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2740,
        "wires": [
            [
                "2a276ba23201a9eb"
            ]
        ]
    },
    {
        "id": "5e5cc5e58ddaecc0",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "TEMPERATUR",
        "info": "",
        "x": 660,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b288c730afb6d9c8",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "HUMIDITY",
        "info": "",
        "x": 640,
        "y": 2860,
        "wires": []
    },
    {
        "id": "b8db6288473fb5cb",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 2220,
        "wires": []
    },
    {
        "id": "a7ec37e18ae897a9",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 1920,
        "wires": []
    },
    {
        "id": "780b439ed13c88c3",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2300,
        "wires": []
    },
    {
        "id": "d3aaa1e7c94b102b",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `yr_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2900,
        "wires": [
            [
                "8bbcedf30b3dd2d4"
            ]
        ]
    },
    {
        "id": "8bbcedf30b3dd2d4",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2900,
        "wires": [
            [
                "04c84f2ef314e78f",
                "b481ff84bbbd95ae"
            ]
        ]
    },
    {
        "id": "04c84f2ef314e78f",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 2840,
        "wires": []
    },
    {
        "id": "59ac5f7fbe724440",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `ow_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2960,
        "wires": [
            [
                "51e89abeeaa051d2"
            ]
        ]
    },
    {
        "id": "51e89abeeaa051d2",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2960,
        "wires": [
            [
                "299aa726ac05c969",
                "1b85974faf1eac6b"
            ]
        ]
    },
    {
        "id": "299aa726ac05c969",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 2900,
        "wires": []
    },
    {
        "id": "727d77fab665d3b8",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `wb_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3020,
        "wires": [
            [
                "4c033639dcd9dd04"
            ]
        ]
    },
    {
        "id": "4c033639dcd9dd04",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3020,
        "wires": [
            [
                "5bdb0eb51b049271"
            ]
        ]
    },
    {
        "id": "45ef2b7266b948ae",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `wa_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3080,
        "wires": [
            [
                "510e1f8a1b8a5889"
            ]
        ]
    },
    {
        "id": "510e1f8a1b8a5889",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3080,
        "wires": [
            [
                "9c670ea3ccd70e20"
            ]
        ]
    },
    {
        "id": "6e4579f681274c4a",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `ow_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3240,
        "wires": [
            [
                "e99c793959f89334"
            ]
        ]
    },
    {
        "id": "e99c793959f89334",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3240,
        "wires": [
            [
                "1b85974faf1eac6b"
            ]
        ]
    },
    {
        "id": "6f9774cf44caf4df",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `yr_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3180,
        "wires": [
            [
                "15125689ae87297d"
            ]
        ]
    },
    {
        "id": "15125689ae87297d",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3180,
        "wires": [
            [
                "b481ff84bbbd95ae"
            ]
        ]
    },
    {
        "id": "b5b7523a5991796d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `wb_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3300,
        "wires": [
            [
                "73aed26e2a9f3d15"
            ]
        ]
    },
    {
        "id": "73aed26e2a9f3d15",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3300,
        "wires": [
            [
                "5bdb0eb51b049271"
            ]
        ]
    },
    {
        "id": "612b3bbedd3832fc",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `wa_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3360,
        "wires": [
            [
                "43b3f28cd22d684d"
            ]
        ]
    },
    {
        "id": "43b3f28cd22d684d",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3360,
        "wires": [
            [
                "9c670ea3ccd70e20"
            ]
        ]
    },
    {
        "id": "1a9a14b319afbda7",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 8,
        "width": "6",
        "height": "3",
        "label": "Luftfeuchte %",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#72b8fd",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1600,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "b481ff84bbbd95ae",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_humi",
        "func": "// GET VARIABLEN\nlet yr_sum_humi = flow.get('yr_sum_humi') || 0;\n\n// FUNKTION\nyr_sum_humi = msg.payload[0].yr_sum_humi;\nyr_sum_humi = yr_sum_humi.toFixed(2);\nyr_sum_humi = `-${yr_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_humi', yr_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_humi);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3180,
        "wires": [
            [
                "1a9a14b319afbda7",
                "bbada1c7541bb108"
            ]
        ]
    },
    {
        "id": "1b85974faf1eac6b",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_humi",
        "func": "// GET VARIABLENi\nlet ow_sum_hum = flow.get('ow_sum_hum') || 0;\n\n// FUNKTION\now_sum_humi = msg.payload[0].ow_sum_humi;\now_sum_humi = ow_sum_humi.toFixed(2);\now_sum_humi = `-${ow_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_humi', ow_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_humi);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3240,
        "wires": [
            [
                "1a9a14b319afbda7"
            ]
        ]
    },
    {
        "id": "5bdb0eb51b049271",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_hum",
        "func": "// GET VARIABLEN\nlet wb_sum_humi = flow.get('wb_sum_humi') || 0;\n\n// FUNKTION\nwb_sum_humi = msg.payload[0].wb_sum_humi;\nwb_sum_humi = wb_sum_humi.toFixed(2);\nwb_sum_humi = `-${wb_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_humi', wb_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_humi);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3300,
        "wires": [
            [
                "1a9a14b319afbda7"
            ]
        ]
    },
    {
        "id": "9c670ea3ccd70e20",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_humi",
        "func": "// GET VARIABLEN\nlet wa_sum_humi = flow.get('wa_sum_humi') || 0;\n\n// FUNKTION\nwa_sum_humi = msg.payload[0].wa_sum_humi;\nwa_sum_humi = wa_sum_humi.toFixed(2);\nwa_sum_humi = `-${wa_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_humi', wa_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_humi);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3360,
        "wires": [
            [
                "1a9a14b319afbda7"
            ]
        ]
    },
    {
        "id": "bbada1c7541bb108",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 3160,
        "wires": []
    },
    {
        "id": "fb16eb51eee69c9f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `yr_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3460,
        "wires": [
            [
                "b5d1c8e14647ceb7"
            ]
        ]
    },
    {
        "id": "d3c7fe675a3c5c4d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `ow_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3520,
        "wires": [
            [
                "d55f974d2cf1c54f"
            ]
        ]
    },
    {
        "id": "065b0fe11503171b",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `wb_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3580,
        "wires": [
            [
                "086a838e8e48d3ef"
            ]
        ]
    },
    {
        "id": "d00f9d4bd188fdbb",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `wa_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3640,
        "wires": [
            [
                "aa2ede634bc361eb"
            ]
        ]
    },
    {
        "id": "b5d1c8e14647ceb7",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3460,
        "wires": [
            [
                "b481ff84bbbd95ae"
            ]
        ]
    },
    {
        "id": "d55f974d2cf1c54f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3520,
        "wires": [
            [
                "1b85974faf1eac6b"
            ]
        ]
    },
    {
        "id": "086a838e8e48d3ef",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3580,
        "wires": [
            [
                "5bdb0eb51b049271"
            ]
        ]
    },
    {
        "id": "aa2ede634bc361eb",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3640,
        "wires": [
            [
                "9c670ea3ccd70e20"
            ]
        ]
    },
    {
        "id": "a8628ee5e8a4ed36",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 1980,
        "wires": [
            [
                "91e19817b7caa0c6"
            ]
        ]
    },
    {
        "id": "f35bdf5cb26a4f20",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2180,
        "wires": [
            [
                "b8db6288473fb5cb"
            ]
        ]
    },
    {
        "id": "49bc84b579dd3872",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "compare_ow",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet ow_current_temp = global.get('ow_current_temp') || 0;\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// OW\nlet ow_temp = context.get('ow_temp') || 0.00;\now_temp = JSON.parse(ow_current_temp).ow_temp;\n\nlet ow_hum = context.get('ow_hum') || 0.00;\now_hum = JSON.parse(ow_current_humidity).ow_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < ow_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(ow_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(ow_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < ow_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(ow_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(ow_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('2', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1027.1180419921875,
        "y": 79.88888549804688,
        "wires": [
            []
        ]
    },
    {
        "id": "08c8ebf19e6a7c23",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "YR: \"INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet yr_current_temp = global.get('yr_current_temp') || 0;\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\n// YR\nlet yr_temp = context.get('yr_temp') || 0.00;\nyr_temp = yr_current_temp;\n\nlet yr_hum = context.get('yr_yhum') || 0.00;\nyr_hum = yr_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < yr_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(yr_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(yr_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < yr_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(yr_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(yr_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('1', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nmsg.payload = yr_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "67ae88b22a26bcfe",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 500,
        "wires": []
    },
    {
        "id": "f25ef0c6f2cd348d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `yr_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(temp) as `yr_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '1'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b4bd8fcdcfb47a9f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1290,
        "y": 560,
        "wires": [
            [
                "67ae88b22a26bcfe"
            ]
        ]
    },
    {
        "id": "3ce1a3f1fad74daa",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "x": 770,
        "y": 520,
        "wires": [
            [
                "f25ef0c6f2cd348d",
                "05f164f42c6b0ec8"
            ]
        ]
    },
    {
        "id": "05f164f42c6b0ec8",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `ow_sum_temp",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(temp) as `ow_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '2'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 580,
        "wires": [
            [
                "b4bd8fcdcfb47a9f"
            ]
        ]
    },
    {
        "id": "27013491b1d42b2f",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 380,
        "wires": []
    },
    {
        "id": "69958cbef501b3e2",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 380,
        "wires": [
            [
                "73d4b811c8c5ce91"
            ]
        ]
    },
    {
        "id": "73d4b811c8c5ce91",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "GLOBAL",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet yr_current_temp = global.get('yr_current_temp') || 0;\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\nmsg.payload = `${na_outdoor_temp} : ${yr_current_temp}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 380,
        "wires": [
            [
                "27013491b1d42b2f"
            ]
        ]
    },
    {
        "id": "a7a67db80860f1f2",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 1 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 840,
        "wires": [
            [
                "6d28437d6e116d9f"
            ]
        ]
    },
    {
        "id": "6e2c03093e79d53a",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 860,
        "wires": [
            [
                "a7a67db80860f1f2",
                "b0b6fe7144a29263",
                "4de46ff0a453d73c",
                "71b845e944db0583",
                "3837d26f87d562ee",
                "f441eb3ccf31da5f"
            ]
        ]
    },
    {
        "id": "f8809afca47dcf39",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].temperatur;\nyr_sum_temp = yr_sum_temp.toFixed(2);\n//yr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 840,
        "wires": [
            [
                "0e19a26ac81dd983",
                "3503eb0b174c3e6e"
            ]
        ]
    },
    {
        "id": "b0b6fe7144a29263",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 2 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 900,
        "wires": [
            [
                "201f40eb65cc1469"
            ]
        ]
    },
    {
        "id": "2ceb50c55d997b9e",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\now_sum_temp = msg.payload[0].temperatur;\now_sum_temp = ow_sum_temp.toFixed(2);\n//ow_sum_temp = `-${ow_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 900,
        "wires": [
            [
                "0e19a26ac81dd983",
                "a184c0f46f7c4153"
            ]
        ]
    },
    {
        "id": "6d28437d6e116d9f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 840,
        "wires": [
            [
                "f8809afca47dcf39"
            ]
        ]
    },
    {
        "id": "4de46ff0a453d73c",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 3 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 960,
        "wires": [
            [
                "09b1a587f9eeb775"
            ]
        ]
    },
    {
        "id": "12a2f701b9883ca0",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_temp",
        "func": "// GET VARIABLEN\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwb_sum_temp = msg.payload[0].temperatur;\nwb_sum_temp = wb_sum_temp.toFixed(2);\n//wb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_temp', wb_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_temp);\nmsg.topic = 'wb';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "0e19a26ac81dd983",
                "6875c61d54c69d20"
            ]
        ]
    },
    {
        "id": "201f40eb65cc1469",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 900,
        "wires": [
            [
                "2ceb50c55d997b9e"
            ]
        ]
    },
    {
        "id": "09b1a587f9eeb775",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 960,
        "wires": [
            [
                "12a2f701b9883ca0"
            ]
        ]
    },
    {
        "id": "df83e6a1afc99ab2",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "Home / Api-Check",
        "info": "",
        "x": 1410,
        "y": 680,
        "wires": []
    },
    {
        "id": "0ae5ca30952bbff6",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "Check Diff",
        "info": "",
        "x": 1380,
        "y": 1260,
        "wires": []
    },
    {
        "id": "71b845e944db0583",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/interval/current_compare/api",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 540,
        "y": 660,
        "wires": []
    },
    {
        "id": "3837d26f87d562ee",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 4 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1020,
        "wires": [
            [
                "eae858c895eaf41f"
            ]
        ]
    },
    {
        "id": "eae858c895eaf41f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1020,
        "wires": [
            [
                "394d14e6a6b60986"
            ]
        ]
    },
    {
        "id": "394d14e6a6b60986",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_temp",
        "func": "// GET VARIABLEN\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwa_sum_temp = msg.payload[0].temperatur;\nwa_sum_temp = wa_sum_temp.toFixed(2);\n//wb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_temp', wa_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_temp);\nmsg.topic = 'wa';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1020,
        "wires": [
            [
                "0e19a26ac81dd983",
                "cc3b892c40c86676"
            ]
        ]
    },
    {
        "id": "f441eb3ccf31da5f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT `temp` FROM `sensor_data` WHERE sensor_id = '4' ORDER BY `updated` desc LIMIT 0, 1\";\nmsg.payload = `Netatmo Outdoor`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 780,
        "wires": [
            [
                "657e973f49860608"
            ]
        ]
    },
    {
        "id": "657e973f49860608",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 780,
        "wires": [
            [
                "1ea3ab37456e7cdd"
            ]
        ]
    },
    {
        "id": "1ea3ab37456e7cdd",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "sensor_sum_temp",
        "func": "// GET VARIABLEN\nlet sensor_sum_temp = flow.get('sensor_sum_temp') || 0;\n\n// FUNKTION\nsensor_sum_temp = msg.payload[0].temp;\n//sensor_sum_temp = sensor_sum_temp.toFixed(2);\n//yr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('sensor_sum_temp', sensor_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(sensor_sum_temp);\nmsg.topic = 'sen';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "0e19a26ac81dd983",
                "3503eb0b174c3e6e",
                "a184c0f46f7c4153",
                "6875c61d54c69d20",
                "cc3b892c40c86676"
            ]
        ]
    },
    {
        "id": "2c43b380943590e2",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "App-Vergleich",
        "info": "",
        "x": 1390,
        "y": 780,
        "wires": []
    },
    {
        "id": "a184c0f46f7c4153",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur OW",
        "group": "60f0ebd00e6b60cd",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#aec7e8",
            "#98df8a",
            "#ff7f0e",
            "#98df8a",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "6875c61d54c69d20",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur WB",
        "group": "65f8c5e11dd5d55d",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#98df8a",
            "#ff7f0e",
            "#98df8a",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "cc3b892c40c86676",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur WA",
        "group": "9fae8a7151b26655",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c",
            "#94d986",
            "#ff7f0e",
            "#94d986",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "dea76a87f591efe7",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "App-Vergleich",
        "info": "",
        "x": 1631.2291259765625,
        "y": 684.3333129882812,
        "wires": []
    },
    {
        "id": "30a9bd9b40aee0ea",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur °C NOW",
        "group": "6843c9d76c2010bd",
        "order": 1,
        "width": "6",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1660,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "0e19a26ac81dd983",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur °C NOW",
        "group": "2e2cb0c53355f590",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1420,
        "y": 720,
        "wires": [
            [
                "30a9bd9b40aee0ea"
            ]
        ]
    },
    {
        "id": "3503eb0b174c3e6e",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur YR",
        "group": "275a2431d292dd0b",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#93d885",
            "#ff7f0e",
            "#93d885",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "3afb01419e7d6bc0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "payload[0].forecast_time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1410,
        "y": 120,
        "wires": []
    },
    {
        "id": "33d6c9f469c07e09",
        "type": "inject",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 260,
        "wires": [
            [
                "cee62cde25d95489",
                "f19982e021d36c7b",
                "4cbc6a2333d9de15"
            ]
        ]
    },
    {
        "id": "dd47978c9bb4e2ac",
        "type": "debug",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "cee62cde25d95489",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_21h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_21h` WHERE `api_id` = 3\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "dd47978c9bb4e2ac",
                "4003e4b9f67b4a28"
            ]
        ]
    },
    {
        "id": "4003e4b9f67b4a28",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 200,
        "wires": [
            [
                "36c61ceab2a2958e",
                "328b2608062c4b3c",
                "34ea73fefcc0bdbb"
            ]
        ]
    },
    {
        "id": "36c61ceab2a2958e",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "FCT DATE SMALL",
        "func": "// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    fct = `${d}.${mon}.${y}`;\n    return fct;\n}\n\ncontent = fctDate(msg.payload[0].forecast_time);\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "3afb01419e7d6bc0"
            ]
        ]
    },
    {
        "id": "328b2608062c4b3c",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 200,
        "wires": []
    },
    {
        "id": "34ea73fefcc0bdbb",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 240,
        "wires": []
    },
    {
        "id": "e4856f39e172510e",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 3",
        "info": "",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "f19982e021d36c7b",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_21h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_21h` WHERE `api_id` = 2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 360,
        "wires": [
            [
                "cbad6b19f4d4175a"
            ]
        ]
    },
    {
        "id": "64c867ed11cb3c49",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 2",
        "info": "",
        "x": 580,
        "y": 320,
        "wires": []
    },
    {
        "id": "cbad6b19f4d4175a",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 360,
        "wires": [
            [
                "2f9441f053fe9dcc",
                "a01a5042bc7b8728"
            ]
        ]
    },
    {
        "id": "e736e96718b020b9",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "openweather",
        "label": "openweather",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 320,
        "wires": []
    },
    {
        "id": "2f9441f053fe9dcc",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 360,
        "wires": []
    },
    {
        "id": "a01a5042bc7b8728",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 10,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "16acd95ac73efab6",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "weatherbit",
        "label": "weatherbit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "dfb1952e0a9a0325",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "FCT DATETIME SMALL",
        "func": "// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\ncontent = fctDate(msg.payload[0].forecast_time);\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4cbc6a2333d9de15",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `outdoor_21h`",
        "func": "msg.topic = \"SELECT * FROM `outdoor_21h`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 520,
        "wires": [
            [
                "5597af7b2b81264a"
            ]
        ]
    },
    {
        "id": "75806f5dfc4d8d67",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`sensor_id` = 4",
        "info": "",
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "5597af7b2b81264a",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 520,
        "wires": [
            [
                "9040cfa365fb2b23",
                "2def69af6133987b"
            ]
        ]
    },
    {
        "id": "76435295be4e3a75",
        "type": "inject",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 820,
        "wires": [
            [
                "6f827d0880d161ef",
                "d3fe5444eeccf1de"
            ]
        ]
    },
    {
        "id": "cc9f61bb0096d226",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Sensor Outdoor",
        "label": "Sensor Outdoor",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "9040cfa365fb2b23",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "payload[0].temp",
        "label": "",
        "format": "{{msg.payload[0].temp}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 520,
        "wires": []
    },
    {
        "id": "2def69af6133987b",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "payload[0].humi",
        "label": "",
        "format": "{{msg.payload[0].humi}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 560,
        "wires": []
    },
    {
        "id": "6537e7188953f0f3",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 3",
        "info": "",
        "x": 580,
        "y": 720,
        "wires": []
    },
    {
        "id": "6f827d0880d161ef",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_18h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_18h` WHERE `api_id` = 3\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 760,
        "wires": [
            [
                "8479f6b24627b70a"
            ]
        ]
    },
    {
        "id": "8479f6b24627b70a",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 760,
        "wires": [
            [
                "c642661445ba8ed5",
                "f4e7a9fd8720bf5e",
                "b3c99021d2145dc0"
            ]
        ]
    },
    {
        "id": "7571e560618e099d",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "weatherbit",
        "label": "weatherbit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 720,
        "wires": []
    },
    {
        "id": "f4e7a9fd8720bf5e",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 760,
        "wires": []
    },
    {
        "id": "b3c99021d2145dc0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 800,
        "wires": []
    },
    {
        "id": "c642661445ba8ed5",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "FCT DATE SMALL",
        "func": "// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    fct = `${d}.${mon}.${y}`;\n    return fct;\n}\n\ncontent = fctDate(msg.payload[0].forecast_time);\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 680,
        "wires": [
            [
                "7b02d74a9e7388e6"
            ]
        ]
    },
    {
        "id": "7b02d74a9e7388e6",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "payload[0].forecast_time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1410,
        "y": 680,
        "wires": []
    },
    {
        "id": "736ea761aa6e8ebe",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`sensor_id` = 4",
        "info": "",
        "x": 600,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e4e41f09a88df880",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `outdoor_18h`",
        "func": "msg.topic = \"SELECT * FROM `outdoor_18h`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "89333f4746a035b1"
            ]
        ]
    },
    {
        "id": "89333f4746a035b1",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 1060,
        "wires": [
            [
                "76976eca9b13f57f",
                "e930469903ad5216"
            ]
        ]
    },
    {
        "id": "76976eca9b13f57f",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "payload[0].temp",
        "label": "",
        "format": "{{msg.payload[0].temp}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e0b55b998db73099",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Sensor Outdoor",
        "label": "Sensor Outdoor",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e930469903ad5216",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "payload[0].humi",
        "label": "",
        "format": "{{msg.payload[0].humi}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d3fe5444eeccf1de",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_18h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_18h` WHERE `api_id` = 2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 900,
        "wires": [
            [
                "1f99d51f07220907"
            ]
        ]
    },
    {
        "id": "8f315c461d54b545",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 2",
        "info": "",
        "x": 580,
        "y": 860,
        "wires": []
    },
    {
        "id": "1f99d51f07220907",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 900,
        "wires": [
            [
                "bea3d9db4d24da5a",
                "8c78469dfd0d07e9"
            ]
        ]
    },
    {
        "id": "afc5a14e7cf532e0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "openweather",
        "label": "openweather",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "bea3d9db4d24da5a",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 900,
        "wires": []
    },
    {
        "id": "8c78469dfd0d07e9",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 10,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 940,
        "wires": []
    },
    {
        "id": "96ccf58d0468af77",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`sensor_id` = 4",
        "info": "",
        "x": 600,
        "y": 1280,
        "wires": []
    },
    {
        "id": "3b59211a1802b448",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `outdoor_0h`",
        "func": "msg.topic = \"SELECT * FROM `outdoor_0h`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1320,
        "wires": [
            [
                "89881693d3e4262f"
            ]
        ]
    },
    {
        "id": "89881693d3e4262f",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 1320,
        "wires": [
            [
                "d8b2d5ce91754ae8",
                "a8b0fc4426466d74"
            ]
        ]
    },
    {
        "id": "d8b2d5ce91754ae8",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "020fb88ae35ffb4a",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "payload[0].temp",
        "label": "",
        "format": "{{msg.payload[0].temp}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1320,
        "wires": []
    },
    {
        "id": "30479956c050b4f0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "020fb88ae35ffb4a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Sensor Outdoor",
        "label": "Sensor Outdoor",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a8b0fc4426466d74",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "020fb88ae35ffb4a",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "payload[0].humi",
        "label": "",
        "format": "{{msg.payload[0].humi}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1360,
        "wires": []
    },
    {
        "id": "85195632490f1871",
        "type": "inject",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 1320,
        "wires": [
            [
                "3b59211a1802b448"
            ]
        ]
    },
    {
        "id": "0097e6416d98f285",
        "type": "http request",
        "z": "f62f66d5823b7337",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.met.no/weatherapi/locationforecast/2.0/compact?lon=13.4580&lat=52.5105&altitude=90",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "c0d078144616ee92",
                "4088e88382076b83",
                "9b3808baabb97fe3"
            ]
        ]
    },
    {
        "id": "699774d28707a73f",
        "type": "inject",
        "z": "f62f66d5823b7337",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 220,
        "wires": [
            [
                "0097e6416d98f285"
            ]
        ]
    },
    {
        "id": "c0d078144616ee92",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties.meta.updated_at",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 240,
        "wires": []
    },
    {
        "id": "4088e88382076b83",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_clouds`, `air_pressure`, `wind_speed`, `wind_direction_deg`) VALUES ('1', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_temperature + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.relative_humidity + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.cloud_area_fraction + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_pressure_at_sea_level + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_speed + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_from_direction + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "26a99367a49ede11"
            ]
        ]
    },
    {
        "id": "26a99367a49ede11",
        "type": "mysql",
        "z": "f62f66d5823b7337",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "363356fbb90f6f29",
                "2b13a06a01edfea3"
            ]
        ]
    },
    {
        "id": "8c670596fcfb799a",
        "type": "mqtt out",
        "z": "f62f66d5823b7337",
        "name": "",
        "topic": "/cron/current_data/yr",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "3c36f5ae2a4cb93b",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "b8fba3477f3f2672",
        "type": "cronplus",
        "z": "f62f66d5823b7337",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "yr",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 1 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "0097e6416d98f285",
                "52581775394f6167",
                "fc2aa46806510d4d",
                "8c670596fcfb799a"
            ]
        ]
    },
    {
        "id": "51cd753c1d3a7676",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "fc2aa46806510d4d",
        "type": "ui_text",
        "z": "f62f66d5823b7337",
        "group": "95336c470a1da5f7",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/yr",
        "label": "/cron/current_data/yr",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "52581775394f6167",
        "type": "ui_text",
        "z": "f62f66d5823b7337",
        "group": "95336c470a1da5f7",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/yr",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 120,
        "wires": []
    },
    {
        "id": "d586ec97aa30e7aa",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "`api_id` = 1",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "b667a740e7c51a60",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "363356fbb90f6f29",
        "type": "mqtt out",
        "z": "f62f66d5823b7337",
        "name": "",
        "topic": "/cron/current_data/yr/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "9b3808baabb97fe3",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties.timeseries[0].data.next_1_hours.details.precipitation_amount",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 280,
        "wires": []
    },
    {
        "id": "2b13a06a01edfea3",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "SELECT * FROM `api_data_current`",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 1 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 680,
        "wires": [
            [
                "bfd7f818aed9862d"
            ]
        ]
    },
    {
        "id": "bfd7f818aed9862d",
        "type": "mysql",
        "z": "f62f66d5823b7337",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "aafd4e8d61be588e",
                "54cedf27ed56e259",
                "cb0b429ce31439e5"
            ]
        ]
    },
    {
        "id": "42cd19d4b3af337f",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "View: Hello / Outdoor",
        "info": "",
        "x": 960,
        "y": 780,
        "wires": []
    },
    {
        "id": "aafd4e8d61be588e",
        "type": "ui_text",
        "z": "f62f66d5823b7337",
        "group": "a2915d3249cfafbe",
        "order": 4,
        "width": "2",
        "height": "2",
        "name": "Temp YR Hello",
        "label": "YR",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "e1b7b2c339a9d4ae",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "54cedf27ed56e259",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "yr_current_temp",
        "func": "// GET VARIABLEN\nlet yr_current_temp = global.get('yr_current_temp') || 0;\n\n// FUNKTION\nyr_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('yr_current_temp', yr_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 680,
        "wires": [
            [
                "51cd753c1d3a7676"
            ]
        ]
    },
    {
        "id": "cb0b429ce31439e5",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "yr_current_humidity",
        "func": "// GET VARIABLEN\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\n// FUNKTION\nyr_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('yr_current_humidity', yr_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 720,
        "wires": [
            [
                "5c051cb5d2465d89"
            ]
        ]
    },
    {
        "id": "e9126bbc1291e71f",
        "type": "inject",
        "z": "f62f66d5823b7337",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "2b13a06a01edfea3"
            ]
        ]
    },
    {
        "id": "1a8563fd73cf0538",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "`api_id` = 1",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "5c051cb5d2465d89",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "dc90b6f7a1d5053c",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "9526b1e6b5053e7d",
        "type": "function",
        "z": "90217cda5f3aeef5",
        "name": "INSERT INTO `api_data_forecast`",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_clouds`, `air_pressure`, `wind_speed`, `wind_direction_deg`) VALUES ('1', '\" + msg.payload.properties.timeseries[0].time + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_temperature + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.relative_humidity + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.cloud_area_fraction + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_pressure_at_sea_level + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_speed + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_from_direction + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO `api_data_forecast`';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 180,
        "wires": [
            [
                "77011f87a597993c"
            ]
        ]
    },
    {
        "id": "77011f87a597993c",
        "type": "mysql",
        "z": "90217cda5f3aeef5",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "5f9fc01d51be2b29"
            ]
        ]
    },
    {
        "id": "9983289a95d6c00e",
        "type": "comment",
        "z": "90217cda5f3aeef5",
        "name": "FORECAST / INSERT",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "146243646f133373",
        "type": "http request",
        "z": "90217cda5f3aeef5",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.met.no/weatherapi/locationforecast/2.0/compact?lon=13.4580&lat=52.5105&altitude=90",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "9526b1e6b5053e7d"
            ]
        ]
    },
    {
        "id": "0bfab30fd1ece233",
        "type": "mqtt out",
        "z": "90217cda5f3aeef5",
        "name": "",
        "topic": "/cron/forecast_data/yr",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "7d8816fa2b6624a6",
        "type": "cronplus",
        "z": "90217cda5f3aeef5",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYRForecast",
                "topic": "yrForecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "45 23 */1 * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 180,
        "wires": [
            [
                "0bfab30fd1ece233",
                "94b9817431b267c0",
                "6bf2788fa7284912"
            ]
        ]
    },
    {
        "id": "12bd51f0298f6ba9",
        "type": "inject",
        "z": "90217cda5f3aeef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "146243646f133373"
            ]
        ]
    },
    {
        "id": "5f9fc01d51be2b29",
        "type": "mqtt out",
        "z": "90217cda5f3aeef5",
        "name": "",
        "topic": "/cron/forecast_data/yr/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1370,
        "y": 180,
        "wires": []
    },
    {
        "id": "6bf2788fa7284912",
        "type": "ui_text",
        "z": "90217cda5f3aeef5",
        "group": "1f94dc0cd60b6d46",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/yr",
        "label": "/cron/forecast_data/yr",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 470,
        "y": 40,
        "wires": []
    },
    {
        "id": "94b9817431b267c0",
        "type": "ui_text",
        "z": "90217cda5f3aeef5",
        "group": "1f94dc0cd60b6d46",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/yr",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 480,
        "y": 80,
        "wires": []
    },
    {
        "id": "8f69156c1b02bf03",
        "type": "inject",
        "z": "90217cda5f3aeef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2c8edd7f46311292",
        "type": "http request",
        "z": "b82b95c5cd6b861b",
        "name": "lat=52.5105&lon=13.4580",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?lat=52.5105&lon=13.4580&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 970,
        "y": 260,
        "wires": [
            [
                "ef6cb408f51d0a26"
            ]
        ]
    },
    {
        "id": "5d2b54dc0b44d70e",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "ef6cb408f51d0a26",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `wind_speed`, `wind_direction_deg`) VALUES ('2', '\" + msg.payload.main.temp + \"', '\" + msg.payload.main.humidity + \"', '\" + msg.payload.weather[0].description + \"', '\" + msg.payload.clouds.all + \"', '\" + msg.payload.main.pressure + \"', '\" + msg.payload.wind.speed + \"', '\" + msg.payload.wind.deg + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "fb38e38676539ae8"
            ]
        ]
    },
    {
        "id": "c6a33c3a2feca6f8",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "`api_id` = 2",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "fb38e38676539ae8",
        "type": "mysql",
        "z": "b82b95c5cd6b861b",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "694aa16d52c7f742",
                "1153f3789a4fe97f"
            ]
        ]
    },
    {
        "id": "4294385b249cdfb6",
        "type": "cronplus",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "yr",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 1 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "2c8edd7f46311292",
                "d635139beb748ea3",
                "f5f97fdc6e6fcb1a",
                "e581ef9752e84b92"
            ]
        ]
    },
    {
        "id": "f3ad32dcba2e1398",
        "type": "inject",
        "z": "b82b95c5cd6b861b",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "2c8edd7f46311292"
            ]
        ]
    },
    {
        "id": "e581ef9752e84b92",
        "type": "mqtt out",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "topic": "/cron/current_data/ow",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "f5f97fdc6e6fcb1a",
        "type": "ui_text",
        "z": "b82b95c5cd6b861b",
        "group": "95336c470a1da5f7",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/ow",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "d635139beb748ea3",
        "type": "ui_text",
        "z": "b82b95c5cd6b861b",
        "group": "95336c470a1da5f7",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/ow",
        "label": "/cron/current_data/ow",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "99be81588eae3afe",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "694aa16d52c7f742",
        "type": "mqtt out",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "topic": "/cron/current_data/ow/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "a48da9909695baa9",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "f2d6e99be34d408c",
        "type": "inject",
        "z": "b82b95c5cd6b861b",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "1153f3789a4fe97f"
            ]
        ]
    },
    {
        "id": "3d35a8af9c421642",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "`api_id` = 2",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "1153f3789a4fe97f",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "SELECT * FROM `api_data_current`",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 2 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 680,
        "wires": [
            [
                "bce3cecbf57ace44"
            ]
        ]
    },
    {
        "id": "bce3cecbf57ace44",
        "type": "mysql",
        "z": "b82b95c5cd6b861b",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "1a1910bbdc408269",
                "a563f3f673bef1c9",
                "48427d89b86c9217"
            ]
        ]
    },
    {
        "id": "19129fd5ec620185",
        "type": "debug",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "a751c199af52da91",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "View: Hello / Outdoor",
        "info": "",
        "x": 960,
        "y": 780,
        "wires": []
    },
    {
        "id": "48427d89b86c9217",
        "type": "ui_text",
        "z": "b82b95c5cd6b861b",
        "group": "a2915d3249cfafbe",
        "order": 5,
        "width": "2",
        "height": "2",
        "name": "Temp OW Hello",
        "label": "OW",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "a4d4743a14fb5a29",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "1a1910bbdc408269",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "ow_current_temp",
        "func": "// GET VARIABLEN\nlet ow_current_temp = global.get('ow_current_temp') || 0;\n\n// FUNKTION\now_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('ow_current_temp', ow_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 680,
        "wires": [
            [
                "19129fd5ec620185"
            ]
        ]
    },
    {
        "id": "a563f3f673bef1c9",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "ow_current_humidity",
        "func": "// GET VARIABLEN\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// FUNKTION\now_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('ow_current_humidity', ow_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "4b89155773c0d03c"
            ]
        ]
    },
    {
        "id": "4b89155773c0d03c",
        "type": "debug",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "32208f4a8f0fcd77",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "https://openweathermap.org/current",
        "info": "",
        "x": 1000,
        "y": 180,
        "wires": []
    },
    {
        "id": "4e472399c84eb734",
        "type": "http request",
        "z": "b6a2ad0c72d43d34",
        "name": "lat=13.4580&lon=52.5105",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "api.openweathermap.org/data/2.5/forecast?lat=13.4580&lon=52.5105&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "3dafa779826dd8fe",
                "bb290b5ee3592f5c",
                "ee1fc2b141ab884a"
            ]
        ]
    },
    {
        "id": "635e862dae957563",
        "type": "ui_text",
        "z": "b6a2ad0c72d43d34",
        "group": "c3da97eba3f6cdd7",
        "order": 1,
        "width": 6,
        "height": 10,
        "name": "Content",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 2000,
        "y": 800,
        "wires": []
    },
    {
        "id": "411e01d0402d759d",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "setForecast",
        "func": "// GET VARIABLEN\nlet forecast = flow.get('forecast') || {};\nlet limit = 8;\n\n// FUNKTION\nforecast = `{`;\n\nfor(let i=0; i < msg.payload.list.length && i <= limit; i++) {\n    \n    forecast = `${forecast}\n    \"${i}\": \n    [\n        \"${msg.payload.list[i].dt_txt}\", \n        \"${msg.payload.list[i].main.temp}\",\n        \"${msg.payload.list[i].main.humidity}\"\n    ]`;\n    \n    if(i < limit) {\n        forecast = `${forecast},`;\n    }\n}\n\nforecast = `${forecast}\n}`;\n\n// SET VARIABLEN\nflow.set('forecast', forecast);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = forecast;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 660,
        "wires": [
            [
                "0f145398465fbeff"
            ]
        ]
    },
    {
        "id": "0f145398465fbeff",
        "type": "json",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 970,
        "y": 800,
        "wires": [
            [
                "7f12f9751820fc18"
            ]
        ]
    },
    {
        "id": "7f12f9751820fc18",
        "type": "file",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "filename": "data/forecast",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1150,
        "y": 800,
        "wires": [
            [
                "8c8d12e1484a9899"
            ]
        ]
    },
    {
        "id": "8c8d12e1484a9899",
        "type": "file in",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "filename": "data/forecast",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1350,
        "y": 800,
        "wires": [
            [
                "7081bdd21d4e2688"
            ]
        ]
    },
    {
        "id": "7081bdd21d4e2688",
        "type": "json",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 800,
        "wires": [
            [
                "b07c238e2ab822b5"
            ]
        ]
    },
    {
        "id": "b07c238e2ab822b5",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "getForecast",
        "func": "// GET VARIABLEN\nlet forecastView = '';\n\n// FUNKTION\nfor (const [key, value] of Object.entries(msg.payload)) {\n  forecastView = forecastView + convert_date(value[0]) + `<br>`;\n  forecastView = forecastView + `<i class=\"fa fa-thermometer-half\" aria-hidden=\"true\"></i> ` + value[1] + `°C | `;\n  forecastView = forecastView + value[2] + `%<br><br>`;\n}\n\nfunction convert_date(intdate) {\n    const date = new Date(intdate);\n\n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    now = `${h}:${min} ${d}.${mon}.${y}`;\n    \n    return now;\n}\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = forecastView;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 800,
        "wires": [
            [
                "635e862dae957563"
            ]
        ]
    },
    {
        "id": "74f6545892d334a5",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "READ",
        "info": "",
        "x": 1330,
        "y": 760,
        "wires": []
    },
    {
        "id": "a9ffd70c32dc89fd",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Request",
        "info": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "f60f5d4e84747f17",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "WRITE",
        "info": "",
        "x": 1130,
        "y": 760,
        "wires": []
    },
    {
        "id": "5347dc66353cddb2",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "GET",
        "info": "",
        "x": 1790,
        "y": 760,
        "wires": []
    },
    {
        "id": "eb14b07b4a23d75b",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "SET",
        "info": "",
        "x": 1310,
        "y": 620,
        "wires": []
    },
    {
        "id": "797c6b2734b6ca81",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "View",
        "info": "",
        "x": 1990,
        "y": 720,
        "wires": []
    },
    {
        "id": "5379b371332862fa",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Convert",
        "info": "",
        "x": 970,
        "y": 760,
        "wires": []
    },
    {
        "id": "31f851579da3fddd",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Convert",
        "info": "",
        "x": 1630,
        "y": 760,
        "wires": []
    },
    {
        "id": "c8bf171f2d45336a",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 990,
        "y": 680,
        "wires": [
            [
                "8c8d12e1484a9899"
            ]
        ]
    },
    {
        "id": "c15d6621306f7b4f",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "INIT",
        "info": "",
        "x": 970,
        "y": 640,
        "wires": []
    },
    {
        "id": "bb290b5ee3592f5c",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`) VALUES ('2', '\" + msg.payload.list[1].dt_txt + \"', '\" + msg.payload.list[1].main.temp + \"', '\" + msg.payload.list[1].main.humidity + \"', '\" + msg.payload.list[1].weather[0].description + \"','\" + msg.payload.list[1].clouds.all + \"', '\" + msg.payload.list[1].main.pressure + \"', '\" + msg.payload.list[1].pop + \"', '\" + msg.payload.list[1].wind.speed + \"', '\" + msg.payload.list[1].wind.deg + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "4713dc648b8bdf83",
                "5ab90645f8abedf0"
            ]
        ]
    },
    {
        "id": "4713dc648b8bdf83",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "5ab90645f8abedf0",
        "type": "mysql",
        "z": "b6a2ad0c72d43d34",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1050,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d1d5627fbd1bf7e8",
        "type": "cronplus",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronOWForecast",
                "topic": "ow-forecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "12 0,3,6,9,12,15,18,21 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 180,
        "y": 340,
        "wires": [
            [
                "ffad4279e5111809",
                "4e472399c84eb734",
                "115d0e2d56b079d4",
                "05e14fb454358505"
            ]
        ]
    },
    {
        "id": "ffad4279e5111809",
        "type": "mqtt out",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "topic": "/cron/forecast_data/ow",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 420,
        "y": 240,
        "wires": []
    },
    {
        "id": "e2990b6f0c512cf5",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "3. Stunde",
        "info": "",
        "x": 640,
        "y": 280,
        "wires": []
    },
    {
        "id": "82ea8f3a6fdcce62",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Stunde: 0,3,6,9,12,15,18,21",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "ffaed8b75bf85a5a",
        "type": "mysql",
        "z": "b6a2ad0c72d43d34",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1050,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "89de4893ed67db82",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "6. Stunde",
        "info": "",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "3dafa779826dd8fe",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "70d5b1504f8dbdb1",
        "type": "http request",
        "z": "b6a2ad0c72d43d34",
        "name": "Berlin",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "api.openweathermap.org/data/2.5/forecast?lat={{{topic.lat}}}&lon={{{topic.lon}}}&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1050,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1f1fccdc29c6c415",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1061.2291259765625,
        "y": 384.8888854980469,
        "wires": []
    },
    {
        "id": "150ed1c96a6b574f",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "api.openweathermap.org/data/2.5/forecast?lat=13.4580&lon=52.5105&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "payloadType": "str",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "4e472399c84eb734"
            ]
        ]
    },
    {
        "id": "ee1fc2b141ab884a",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`) VALUES ('2', '\" + msg.payload.list[2].dt_txt + \"', '\" + msg.payload.list[2].main.temp + \"', '\" + msg.payload.list[2].main.humidity + \"', '\" + msg.payload.list[2].weather[0].description + \"','\" + msg.payload.list[2].clouds.all + \"', '\" + msg.payload.list[2].main.pressure + \"', '\" + msg.payload.list[2].pop + \"', '\" + msg.payload.list[2].wind.speed + \"', '\" + msg.payload.list[2].wind.deg + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": [
            [
                "1f1fccdc29c6c415",
                "ffaed8b75bf85a5a"
            ]
        ]
    },
    {
        "id": "96d604375ff8af9c",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "api.openweathermap.org/data/2.5/forecast?lat=13.4580&lon=52.5105&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "payloadType": "str",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "f039f410bdbb1b8a"
            ]
        ]
    },
    {
        "id": "59d2e4be1733a522",
        "type": "mysql",
        "z": "b6a2ad0c72d43d34",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 670,
        "y": 560,
        "wires": [
            [
                "354f0e7e999b8a74"
            ]
        ]
    },
    {
        "id": "f039f410bdbb1b8a",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "SELECT `api_data_forecast` ...",
        "func": "msg.topic = \"SELECT * FROM `api_data_forecast` WHERE `api_id` = 2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "59d2e4be1733a522"
            ]
        ]
    },
    {
        "id": "354f0e7e999b8a74",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 560,
        "wires": []
    },
    {
        "id": "05e14fb454358505",
        "type": "ui_text",
        "z": "b6a2ad0c72d43d34",
        "group": "1f94dc0cd60b6d46",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/ow",
        "label": "/cron/forecast_data/ow",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "115d0e2d56b079d4",
        "type": "ui_text",
        "z": "b6a2ad0c72d43d34",
        "group": "1f94dc0cd60b6d46",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/ow",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "58924adca05e55da",
        "type": "http request",
        "z": "b6a2ad0c72d43d34",
        "name": "lat=13.4580&lon=52.5105",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=13.4580&lon=52.5105&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 390,
        "y": 980,
        "wires": [
            [
                "4bdab55ec08df45a"
            ]
        ]
    },
    {
        "id": "83c4161e4ae8f746",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Request",
        "info": "",
        "x": 340,
        "y": 940,
        "wires": []
    },
    {
        "id": "a0a2523c52f7ac8c",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "https://openweathermap.org/api/hourly-forecast",
        "info": "",
        "x": 460,
        "y": 900,
        "wires": []
    },
    {
        "id": "f4f1b7dd9c9d0cb3",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "https://openweathermap.org/forecast5",
        "info": "",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "42b1fc3e5532a3b8",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 980,
        "wires": [
            [
                "58924adca05e55da"
            ]
        ]
    },
    {
        "id": "4bdab55ec08df45a",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 980,
        "wires": []
    },
    {
        "id": "48277557288d1e06",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys_sunrise",
        "func": "// GET VARIABLEN\nlet sys_sunrise = flow.get('sys_sunrise') || 0;\n\n// FUNKTION\nsys_sunrise = msg.payload.sunrise;\n\n// SET VARIABLEN\nflow.set('sys_sunrise', sys_sunrise);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys_sunrise;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1060,
        "wires": [
            [
                "3d10a8765ff07baa"
            ]
        ]
    },
    {
        "id": "328a9c2fcddea503",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys_sunset",
        "func": "// GET VARIABLEN\nlet sys_sunset = flow.get('sys_sunset') || 0;\n\n// FUNKTION\nsys_sunset = msg.payload.sunset;\n\n// SET VARIABLEN\nflow.set('sys_sunset', sys_sunset);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys_sunset;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1100,
        "wires": [
            [
                "f00a189b5d453d95"
            ]
        ]
    },
    {
        "id": "5a649fac7fc948a7",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys",
        "func": "// GET VARIABLEN\nlet sys = flow.get('sys') || 0;\n\n// FUNKTION\nsys = msg.payload.sys;\n\n// SET VARIABLEN\nflow.set('sys', sys);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1020,
        "wires": [
            [
                "48277557288d1e06",
                "328a9c2fcddea503"
            ]
        ]
    },
    {
        "id": "db8196e2a58b061e",
        "type": "http request",
        "z": "ddd61edf8d8f5ce2",
        "name": "Berlin",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?q=Berlin&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 800,
        "wires": [
            [
                "7d78cb4c0a316aa1",
                "c3bbe56e3fd921aa",
                "812ee0d99229456e",
                "5a649fac7fc948a7",
                "88ded4fad3d03744",
                "2ceb1d162a097e37",
                "dd580be66d435bae",
                "85c23d534094847b",
                "a38fa710235fcae4",
                "80f50b86215efe48"
            ]
        ]
    },
    {
        "id": "812ee0d99229456e",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main",
        "func": "// GET VARIABLEN\nlet main = flow.get('main') || 0;\n\n// FUNKTION\nmain = msg.payload.main;\n\n// SET VARIABLEN\nflow.set('main', main);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "6fbc41ee6e77ea24",
                "56ab50748b931c65",
                "35eb680bd848b9b7"
            ]
        ]
    },
    {
        "id": "7d78cb4c0a316aa1",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather",
        "func": "// GET VARIABLEN\nlet weather = flow.get('weather') || 0;\n\n// FUNKTION\nweather = msg.payload.weather[0];\n\n// SET VARIABLEN\nflow.set('weather', weather);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 620,
        "wires": [
            [
                "aad5ed3437dd4c01",
                "1e6515eec4565317",
                "83dd913f9d5c4ff9"
            ]
        ]
    },
    {
        "id": "c3bbe56e3fd921aa",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind",
        "func": "// GET VARIABLEN\nlet wind = flow.get('wind') || 0;\n\n// FUNKTION\nwind = msg.payload.wind;\n\n// SET VARIABLEN\nflow.set('wind', wind);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 740,
        "wires": [
            [
                "6d6970e4b24398db",
                "b279c1e1495b48da"
            ]
        ]
    },
    {
        "id": "2ceb1d162a097e37",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all",
        "func": "// GET VARIABLEN\nlet clouds_all = flow.get('clouds_all') || 0;\n\n// FUNKTION\nclouds_all = msg.payload.clouds.all;\n\n// SET VARIABLEN\nflow.set('clouds_all', clouds_all);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = clouds_all;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 860,
        "wires": [
            [
                "cf40801eef0ad09e"
            ]
        ]
    },
    {
        "id": "88ded4fad3d03744",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "name",
        "func": "// GET VARIABLEN\nlet name = flow.get('name') || 0;\n\n// FUNKTION\nname = msg.payload.name;\n\n// SET VARIABLEN\nflow.set('name', name);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = name;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 980,
        "wires": [
            [
                "46e6fbeff51aefe7"
            ]
        ]
    },
    {
        "id": "dd580be66d435bae",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord",
        "func": "// GET VARIABLEN\nlet coord = flow.get('coord') || 0;\n\n// FUNKTION\ncoord = msg.payload.coord;\n\n// SET VARIABLEN\nflow.set('coord', coord);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "2330772a5a5ed9ec",
                "297b168802b4a64a"
            ]
        ]
    },
    {
        "id": "dfce64c56dfea1a6",
        "type": "inject",
        "z": "ddd61edf8d8f5ce2",
        "name": "60 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 60,
        "y": 440,
        "wires": [
            [
                "db8196e2a58b061e",
                "3a20fb083ad87a15"
            ]
        ]
    },
    {
        "id": "6fbc41ee6e77ea24",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity",
        "func": "// GET VARIABLEN\nlet main_humidity = flow.get('main_humidity') || 0;\n\n// FUNKTION\nmain_humidity = msg.payload.humidity;\n\n// SET VARIABLEN\nflow.set('main_humidity', main_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 340,
        "wires": [
            [
                "37615a29a00329cb",
                "c88a615761a0bce4",
                "a3cf79842064010e",
                "088ee34d32558547",
                "00a21318c440bff0"
            ]
        ]
    },
    {
        "id": "56ab50748b931c65",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp",
        "func": "// GET VARIABLEN\nlet main_temp = flow.get('main_temp') || 0;\n\n// FUNKTION\nmain_temp = msg.payload.temp;\n\n// SET VARIABLEN\nflow.set('main_temp', main_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 220,
        "wires": [
            [
                "7338a014aa5d7a30",
                "fba9e3d4b7a32d7c",
                "66f5f701db52321e",
                "9d8316e460c6d437",
                "4a7792fb4da6f19c"
            ]
        ]
    },
    {
        "id": "35eb680bd848b9b7",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure",
        "func": "// GET VARIABLEN\nlet main_pressure = flow.get('main_pressure') || 0;\n\n// FUNKTION\nmain_pressure = msg.payload.pressure;\n\n// SET VARIABLEN\nflow.set('main_pressure', main_pressure);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_pressure;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 380,
        "wires": [
            [
                "67dd73ff2b4ac974",
                "70373dc283a85ab4"
            ]
        ]
    },
    {
        "id": "aad5ed3437dd4c01",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_main",
        "func": "// GET VARIABLEN\nlet weather_main = flow.get('weather_main') || 0;\n\n// FUNKTION\nweather_main = msg.payload.main;\n\n// SET VARIABLEN\nflow.set('weather_main', weather_main);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_main;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 580,
        "wires": [
            [
                "9d8173ee77d5baae"
            ]
        ]
    },
    {
        "id": "1e6515eec4565317",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_description",
        "func": "// GET VARIABLEN\nlet weather_main = flow.get('weather_description') || 0;\n\n// FUNKTION\nweather_description = msg.payload.description;\n\n// SET VARIABLEN\nflow.set('weather_description', weather_description);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_description;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "83dd913f9d5c4ff9",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_icon",
        "func": "// GET VARIABLEN\nlet weather_icon = flow.get('weather_icon') || 0;\n\n// FUNKTION\nweather_icon = msg.payload.icon;\n\n// SET VARIABLEN\nflow.set('weather_icon', weather_icon);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_icon;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "6d6970e4b24398db",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed",
        "func": "// GET VARIABLEN\nlet wind_speed = flow.get('wind_speed') || 0;\n\n// FUNKTION\nwind_speed = msg.payload.speed;\n\n// SET VARIABLEN\nflow.set('wind_speed', wind_speed);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind_speed;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 740,
        "wires": [
            [
                "da1598ab397e9daf",
                "1f4e9f5ca177a4fb"
            ]
        ]
    },
    {
        "id": "b279c1e1495b48da",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_deg",
        "func": "// GET VARIABLEN\nlet wind_speed = flow.get('wind_deg') || 0;\n\n// FUNKTION\nwind_deg = msg.payload.deg;\n\n// SET VARIABLEN\nflow.set('wind_deg', wind_deg);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind_deg;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 780,
        "wires": [
            [
                "5502778a80f45e82"
            ]
        ]
    },
    {
        "id": "2330772a5a5ed9ec",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord_lon",
        "func": "// GET VARIABLEN\nlet coord_lon = flow.get('coord_lon') || 0;\n\n// FUNKTION\ncoord_lon = msg.payload.lon;\n\n// SET VARIABLEN\nflow.set('coord_lon', coord_lon);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord_lon;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1160,
        "wires": [
            [
                "9fedbbcfbb6eecaa"
            ]
        ]
    },
    {
        "id": "297b168802b4a64a",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord_lat",
        "func": "// GET VARIABLEN\nlet coord_lat = flow.get('coord_lat') || 0;\n\n// FUNKTION\ncoord_lat = msg.payload.lat;\n\n// SET VARIABLEN\nflow.set('coord_lat', coord_lat);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord_lat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "37b7fce468461e6f"
            ]
        ]
    },
    {
        "id": "9d8173ee77d5baae",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "e70d0760bcc08d3a",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "weather_main_text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1210,
        "y": 580,
        "wires": []
    },
    {
        "id": "7338a014aa5d7a30",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_gauge",
        "group": "28f7dbdd3547c09e",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} °C",
        "min": "-20",
        "max": "50",
        "colors": [
            "#2a50ea",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "30",
        "className": "",
        "x": 1210,
        "y": 220,
        "wires": []
    },
    {
        "id": "37615a29a00329cb",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_gauge",
        "group": "f697df7ca894247c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} %",
        "min": 0,
        "max": "100",
        "colors": [
            "#4b6470",
            "#00b400",
            "#e7770d"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1220,
        "y": 380,
        "wires": []
    },
    {
        "id": "c88a615761a0bce4",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_chart",
        "group": "f697df7ca894247c",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "da1598ab397e9daf",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_gauge",
        "group": "7177e1bbce7a0779",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} m/s",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "8",
        "seg2": "12",
        "className": "",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "89f5412216e665f9",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all_gauge",
        "group": "e70d0760bcc08d3a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "% freier Himmel",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "10",
        "seg2": "50",
        "className": "",
        "x": 1210,
        "y": 900,
        "wires": []
    },
    {
        "id": "1f4e9f5ca177a4fb",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_chart",
        "group": "7177e1bbce7a0779",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fba9e3d4b7a32d7c",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_chart",
        "group": "28f7dbdd3547c09e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0798ce47f6aa3654",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all_chart",
        "group": "e70d0760bcc08d3a",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "5502778a80f45e82",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "7177e1bbce7a0779",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "wind_deg",
        "label": "",
        "format": "{{msg.payload}} °",
        "layout": "row-center",
        "className": "",
        "x": 1180,
        "y": 760,
        "wires": []
    },
    {
        "id": "46e6fbeff51aefe7",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "name",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "city_name",
        "x": 310,
        "y": 980,
        "wires": []
    },
    {
        "id": "9fedbbcfbb6eecaa",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "coord_lon",
        "label": "",
        "format": "lon : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1180,
        "y": 1160,
        "wires": []
    },
    {
        "id": "37b7fce468461e6f",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 5,
        "width": "6",
        "height": "1",
        "name": "coord_lat",
        "label": "",
        "format": "lat : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1180,
        "y": 1200,
        "wires": []
    },
    {
        "id": "091892704ce5b1c9",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "sys_sunrise",
        "label": "",
        "format": "sunrise : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cfffe8fe3f29a9b9",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "sys_sunset",
        "label": "",
        "format": "sunset : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1190,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3a20fb083ad87a15",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new Date",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nconst date = new Date();\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "848ffdb9bb12c7d4"
            ]
        ]
    },
    {
        "id": "848ffdb9bb12c7d4",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "DateTime",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 320,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cf40801eef0ad09e",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "func": "// GET VARIABLEN\nlet change = flow.get('change') || 0;\n\n// FUNKTION\nchange = 100 - Number(msg.payload); \n\n// SET VARIABLEN\nflow.set('change', change);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = change;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 860,
        "wires": [
            [
                "c43783c9fee726ef",
                "89f5412216e665f9",
                "0798ce47f6aa3654"
            ]
        ]
    },
    {
        "id": "c43783c9fee726ef",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 940,
        "wires": []
    },
    {
        "id": "67dd73ff2b4ac974",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure_gauge",
        "group": "325d7857240a0cc6",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}} hPa",
        "min": "990",
        "max": "1030",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b400"
        ],
        "seg1": "1000",
        "seg2": "1010",
        "className": "",
        "x": 1220,
        "y": 460,
        "wires": []
    },
    {
        "id": "70373dc283a85ab4",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure",
        "group": "325d7857240a0cc6",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "990",
        "ymax": "1030",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3d10a8765ff07baa",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new DateSunrise",
        "func": "// GET VARIABLEN\nlet sunrise = flow.get('sunrise') || 0;\n\n// FUNKTION\nconst date = new Date(msg.payload * 1000);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nsunrise = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('sunrise', sunrise);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sunrise;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1060,
        "wires": [
            [
                "091892704ce5b1c9"
            ]
        ]
    },
    {
        "id": "f00a189b5d453d95",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new DateSunset",
        "func": "// GET VARIABLEN\nlet sunset = flow.get('sunset') || 0;\n\n// FUNKTION\nconst date = new Date(msg.payload * 1000);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nsunset = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('sunset', sunset);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sunset;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1100,
        "wires": [
            [
                "cfffe8fe3f29a9b9"
            ]
        ]
    },
    {
        "id": "85c23d534094847b",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 700,
        "wires": []
    },
    {
        "id": "c6ba937f717b1144",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : Weather",
        "info": "",
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "66f5f701db52321e",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_chart",
        "group": "4421ea5d2f4fae8e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a3cf79842064010e",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_chart",
        "group": "4421ea5d2f4fae8e",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1580,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a2647b70a0149068",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : wetterchecker",
        "info": "",
        "x": 1570,
        "y": 260,
        "wires": []
    },
    {
        "id": "9d8316e460c6d437",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "temperature_gauge",
        "group": "4421ea5d2f4fae8e",
        "order": 1,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "-20",
        "max": "50",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "30",
        "className": "",
        "x": 1570,
        "y": 380,
        "wires": []
    },
    {
        "id": "088ee34d32558547",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "humidity_gauge",
        "group": "4421ea5d2f4fae8e",
        "order": 4,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "0",
        "max": "100",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#d78c09"
        ],
        "seg1": "40",
        "seg2": "60",
        "className": "",
        "x": 1560,
        "y": 420,
        "wires": []
    },
    {
        "id": "00a21318c440bff0",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "4421ea5d2f4fae8e",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "main_humidity_text",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1550,
        "y": 120,
        "wires": []
    },
    {
        "id": "4a7792fb4da6f19c",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "4421ea5d2f4fae8e",
        "order": 2,
        "width": "5",
        "height": "1",
        "name": "main_temp_text",
        "label": "Temperatur",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 1530,
        "y": 160,
        "wires": []
    },
    {
        "id": "132d945df2db4526",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : wetterchecker",
        "info": "",
        "x": 1550,
        "y": 80,
        "wires": []
    },
    {
        "id": "a38fa710235fcae4",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "msg.payload.rain[\"1h\"]",
        "func": "// GET VARIABLEN\nlet rain = flow.get('rain') || 0;\n\n// FUNKTION\nif (typeof variable === 'undefined') {\n    rain = 0;\n} else {\n    rain = msg.payload.rain[\"1h\"];\n}\n\n// SET VARIABLEN\nflow.set('rain', rain);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = rain;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1260,
        "wires": [
            [
                "c4a190953547dfd6",
                "43811e6b4a782861"
            ]
        ]
    },
    {
        "id": "c4a190953547dfd6",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1260,
        "wires": []
    },
    {
        "id": "43811e6b4a782861",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_chart",
        "group": "3bc48255336fdd1e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 910,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "04a444f92205b34a",
        "type": "cronplus",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronOW",
                "topic": "ow",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "2 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 800,
        "wires": [
            [
                "d6cbec0653b8a1ef",
                "0116abc6b06d2474"
            ]
        ]
    },
    {
        "id": "d6cbec0653b8a1ef",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "ow_cron",
        "func": "// GET VARIABLEN\nlet ow_cron = flow.get('ow_cron') || 0;\n\n// FUNKTION\now_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('ow_cron', ow_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 800,
        "wires": [
            [
                "db8196e2a58b061e",
                "3a20fb083ad87a15"
            ]
        ]
    },
    {
        "id": "80f50b86215efe48",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 800,
        "wires": []
    },
    {
        "id": "ceb27ffd3dafc8e0",
        "type": "inject",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 500,
        "wires": [
            [
                "db8196e2a58b061e"
            ]
        ]
    },
    {
        "id": "0116abc6b06d2474",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 580,
        "wires": []
    },
    {
        "id": "9fc393f045c758ed",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherbit-v1-mashape.p.rapidapi.com\"};\nmsg.url = \"https://weatherbit-v1-mashape.p.rapidapi.com/current?lon=13.4105&lat=52.5244\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "a14a4c69cd41e9ae"
            ]
        ]
    },
    {
        "id": "a14a4c69cd41e9ae",
        "type": "http request",
        "z": "01666d2621fc3afa",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "8da987db4dabcd68",
                "8576431a98a60a11"
            ]
        ]
    },
    {
        "id": "1b5e4afa3b170a0f",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "92556ecc9f50d989",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "2382e0cc0f24b2e5",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "wb_current_temp",
        "func": "// GET VARIABLEN\nlet wb_current_temp = global.get('wb_current_temp') || 0;\n\n// FUNKTION\nwb_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('wb_current_temp', wb_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 680,
        "wires": [
            [
                "a68b3b7e77f976f2"
            ]
        ]
    },
    {
        "id": "a68b3b7e77f976f2",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "fb5eb9c38bcdf113",
        "type": "cronplus",
        "z": "01666d2621fc3afa",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWB",
                "topic": "wb",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 3 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "028b6f9bb80bfd66",
                "5f2a7f03c12f2e46",
                "93d45e2451e668ed",
                "9fc393f045c758ed"
            ]
        ]
    },
    {
        "id": "8da987db4dabcd68",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data [0].temp + \"', '\" + msg.payload.data [0].rh + \"', '\" + msg.payload.data [0].weather.description + \"', '\" + msg.payload.data [0].clouds + \"', '\" + msg.payload.data [0].pres + \"', '\" + msg.payload.data [0].precip + \"', '\" + msg.payload.data [0].wind_spd + \"', '\" + msg.payload.data [0].wind_dir + \"', '\" + msg.payload.data [0].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "4f5b2a493e889792"
            ]
        ]
    },
    {
        "id": "4f5b2a493e889792",
        "type": "mysql",
        "z": "01666d2621fc3afa",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "f5e7e6edfa60885a",
                "e24b6c4574aca3cf"
            ]
        ]
    },
    {
        "id": "8576431a98a60a11",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "028b6f9bb80bfd66",
        "type": "mqtt out",
        "z": "01666d2621fc3afa",
        "name": "",
        "topic": "/cron/current_data/wb",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "5f2a7f03c12f2e46",
        "type": "ui_text",
        "z": "01666d2621fc3afa",
        "group": "95336c470a1da5f7",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/wb",
        "label": "/cron/current_data/wb",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "93d45e2451e668ed",
        "type": "ui_text",
        "z": "01666d2621fc3afa",
        "group": "95336c470a1da5f7",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/wb",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "746a2473c46dd01c",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "RapidAPI",
        "info": "",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "f5e7e6edfa60885a",
        "type": "mqtt out",
        "z": "01666d2621fc3afa",
        "name": "",
        "topic": "/cron/current_data/wb/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "e24b6c4574aca3cf",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "SELECT * FROM `api_data_current",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 3 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "9f1008c633a21087",
                "94f0fc2acb99d80b"
            ]
        ]
    },
    {
        "id": "94f0fc2acb99d80b",
        "type": "mysql",
        "z": "01666d2621fc3afa",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "2382e0cc0f24b2e5",
                "c959aad206469eff",
                "4daa16807b8db93e"
            ]
        ]
    },
    {
        "id": "9f1008c633a21087",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "9767b3636b097349",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "`api_id` = 3",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "9d329da34e5462aa",
        "type": "inject",
        "z": "01666d2621fc3afa",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "e24b6c4574aca3cf"
            ]
        ]
    },
    {
        "id": "c959aad206469eff",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "wb_current_humidity",
        "func": "// GET VARIABLEN\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\n\n// FUNKTION\nwb_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('wb_current_humidity', wb_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "491f812c84ffe9ad"
            ]
        ]
    },
    {
        "id": "491f812c84ffe9ad",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "4daa16807b8db93e",
        "type": "ui_text",
        "z": "01666d2621fc3afa",
        "group": "a2915d3249cfafbe",
        "order": 6,
        "width": "2",
        "height": "2",
        "name": "Temp WB Hello",
        "label": "WB",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "50c6549f0b8b650a",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "View Hello/Home",
        "info": "",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "92e1e9e59233080c",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "386aa6dfe47111f4",
        "type": "inject",
        "z": "01666d2621fc3afa",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "9fc393f045c758ed"
            ]
        ]
    },
    {
        "id": "add64d088b234d32",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "f0f1d58674035bfd",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "`api_id` = 3",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "49c2061c3168a071",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherbit-v1-mashape.p.rapidapi.com\"};\nmsg.url = \"https://weatherbit-v1-mashape.p.rapidapi.com/forecast/hourly?lon=13.4105&lat=52.5244&hours=48\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "185c15b17a957edf"
            ]
        ]
    },
    {
        "id": "4f5691fe8ad5e9c6",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "470c2b470e9db4d2",
        "type": "inject",
        "z": "ae83296a545602f0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "49c2061c3168a071"
            ]
        ]
    },
    {
        "id": "185c15b17a957edf",
        "type": "http request",
        "z": "ae83296a545602f0",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 260,
        "wires": [
            [
                "4f5691fe8ad5e9c6",
                "9b11afd59e4b05c4",
                "bd10af24b7bc892c",
                "c9baf1e1e698c51d",
                "91e9a4b1f0d0631d",
                "de619e243015aa7a"
            ]
        ]
    },
    {
        "id": "9b11afd59e4b05c4",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[0].timestamp_local + \"', '\" + msg.payload.data [0].temp + \"', '\" + msg.payload.data [0].rh + \"', '\" + msg.payload.data [0].weather.description + \"', '\" + msg.payload.data [0].clouds + \"', '\" + msg.payload.data [0].pres + \"', '\" + msg.payload.data [0].precip + \"', '\" + msg.payload.data [0].wind_spd + \"', '\" + msg.payload.data [0].wind_dir + \"', '\" + msg.payload.data [0].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "dc5302f12011c8bf"
            ]
        ]
    },
    {
        "id": "dc5302f12011c8bf",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 260,
        "wires": []
    },
    {
        "id": "bd10af24b7bc892c",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[1].timestamp_local + \"', '\" + msg.payload.data [1].temp + \"', '\" + msg.payload.data [1].rh + \"', '\" + msg.payload.data [1].weather.description + \"', '\" + msg.payload.data [1].clouds + \"', '\" + msg.payload.data [1].pres + \"', '\" + msg.payload.data [1].precip + \"', '\" + msg.payload.data [1].wind_spd + \"', '\" + msg.payload.data [1].wind_dir + \"', '\" + msg.payload.data [1].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 320,
        "wires": [
            [
                "a484c4838378abde"
            ]
        ]
    },
    {
        "id": "a484c4838378abde",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 320,
        "wires": []
    },
    {
        "id": "c9baf1e1e698c51d",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[2].timestamp_local + \"', '\" + msg.payload.data [2].temp + \"', '\" + msg.payload.data [2].rh + \"', '\" + msg.payload.data [2].weather.description + \"', '\" + msg.payload.data [2].clouds + \"', '\" + msg.payload.data [2].pres + \"', '\" + msg.payload.data [2].precip + \"', '\" + msg.payload.data [2].wind_spd + \"', '\" + msg.payload.data [2].wind_dir + \"', '\" + msg.payload.data [2].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "628cdf1ac1aa1f2f"
            ]
        ]
    },
    {
        "id": "628cdf1ac1aa1f2f",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 380,
        "wires": []
    },
    {
        "id": "b0d77ed5542de934",
        "type": "cronplus",
        "z": "ae83296a545602f0",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWBForecast",
                "topic": "wb-forecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "13 0,3,6,9,12,15,18,21 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 260,
        "wires": [
            [
                "a46db28ff780bd4c",
                "49c2061c3168a071",
                "3fe1057a27298120",
                "4e2c102da491e778"
            ]
        ]
    },
    {
        "id": "a46db28ff780bd4c",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "15c985fbcb50f08c",
        "type": "mysql",
        "z": "ae83296a545602f0",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1290,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe1057a27298120",
        "type": "mqtt out",
        "z": "ae83296a545602f0",
        "name": "",
        "topic": "/cron/forecast_data/wb",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "58454b2cbd92f170",
        "type": "ui_text",
        "z": "ae83296a545602f0",
        "group": "1f94dc0cd60b6d46",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/wb",
        "label": "/cron/forecast_data/wb",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "4e2c102da491e778",
        "type": "ui_text",
        "z": "ae83296a545602f0",
        "group": "1f94dc0cd60b6d46",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/wb",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "91e9a4b1f0d0631d",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[2].timestamp_local + \"', '\" + msg.payload.data [2].temp + \"', '\" + msg.payload.data [2].rh + \"', '\" + msg.payload.data [2].weather.description + \"', '\" + msg.payload.data [2].clouds + \"', '\" + msg.payload.data [2].pres + \"', '\" + msg.payload.data [2].precip + \"', '\" + msg.payload.data [2].wind_spd + \"', '\" + msg.payload.data [2].wind_dir + \"', '\" + msg.payload.data [2].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 500,
        "wires": [
            [
                "15c985fbcb50f08c"
            ]
        ]
    },
    {
        "id": "e01ee066b9986337",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "3 Stunden",
        "info": "",
        "x": 820,
        "y": 460,
        "wires": []
    },
    {
        "id": "4caa60968d25233a",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "6 Stunden",
        "info": "",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "de619e243015aa7a",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[5].timestamp_local + \"', '\" + msg.payload.data [5].temp + \"', '\" + msg.payload.data [5].rh + \"', '\" + msg.payload.data [5].weather.description + \"', '\" + msg.payload.data [5].clouds + \"', '\" + msg.payload.data [5].pres + \"', '\" + msg.payload.data [5].precip + \"', '\" + msg.payload.data [5].wind_spd + \"', '\" + msg.payload.data [5].wind_dir + \"', '\" + msg.payload.data [5].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 620,
        "wires": [
            [
                "adf50d6b307d04dd"
            ]
        ]
    },
    {
        "id": "adf50d6b307d04dd",
        "type": "mysql",
        "z": "ae83296a545602f0",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1290,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c70df6e5db23b886",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "Stunde: 0,3,6,9,12,15,18,21",
        "info": "",
        "x": 180,
        "y": 320,
        "wires": []
    },
    {
        "id": "301ab170130c44b4",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "RapidAPI",
        "info": "",
        "x": 440,
        "y": 300,
        "wires": []
    },
    {
        "id": "646b01f96609ebbe",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"};\nmsg.url = \"https://weatherapi-com.p.rapidapi.com/current.json?q=52.5244,13.4105\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "3f79909836ed09f1"
            ]
        ]
    },
    {
        "id": "3f79909836ed09f1",
        "type": "http request",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "13b963269b6532f9",
                "b24347fd0df09d2a"
            ]
        ]
    },
    {
        "id": "13b963269b6532f9",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "7b785326b7600a34",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "e1a53dfb4bf6bced",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "6775d5cad1537bbd",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "wa_current_temp",
        "func": "// GET VARIABLEN\nlet wa_current_temp = global.get('wa_current_temp') || 0;\n\n// FUNKTION\nwa_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('wa_current_temp', wa_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 680,
        "wires": [
            [
                "34a188623c90fb94"
            ]
        ]
    },
    {
        "id": "34a188623c90fb94",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "6220cde3df7d1ddc",
        "type": "cronplus",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWA",
                "topic": "wa",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 4 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "4adfa4f3cca88bc6",
                "11d2160728b0c29f",
                "646b01f96609ebbe"
            ]
        ]
    },
    {
        "id": "f77d1706f7e71d10",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "wa_current_humidity",
        "func": "// GET VARIABLEN\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\n\n// FUNKTION\nwa_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('wa_current_humidity', wa_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "13fb44c0f8577813"
            ]
        ]
    },
    {
        "id": "13fb44c0f8577813",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "b24347fd0df09d2a",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('4', '\" + msg.payload.current.temp_c + \"', '\" + msg.payload.current.humidity + \"', '\" + msg.payload.current.condition.text + \"', '\" + msg.payload.current.cloud + \"', '\" + msg.payload.current.pressure_mb + \"', '\" + msg.payload.current.precip_mm + \"', '\" + msg.payload.current.wind_kph + \"', '\" + msg.payload.current.wind_degree + \"', '\" + msg.payload.current.wind_dir + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "46dc28dc70d512ca"
            ]
        ]
    },
    {
        "id": "46dc28dc70d512ca",
        "type": "mysql",
        "z": "e0f5a1e129ae9af8",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "04e251b254551083",
                "dce437525469387e"
            ]
        ]
    },
    {
        "id": "4adfa4f3cca88bc6",
        "type": "mqtt out",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "topic": "/cron/current_data/wa",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "89aa646e09c7b7e6",
        "type": "ui_text",
        "z": "e0f5a1e129ae9af8",
        "group": "95336c470a1da5f7",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/wa",
        "label": "/cron/current_data/wa",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "11d2160728b0c29f",
        "type": "ui_text",
        "z": "e0f5a1e129ae9af8",
        "group": "95336c470a1da5f7",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/wa",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "a8b2746f4a305584",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "RapidAPI",
        "info": "",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "cabb991b65a5ad9e",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "View Hello/Home",
        "info": "",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "6ddde058a55e3c99",
        "type": "ui_text",
        "z": "e0f5a1e129ae9af8",
        "group": "a2915d3249cfafbe",
        "order": 7,
        "width": "2",
        "height": "2",
        "name": "Temp WA Hello",
        "label": "WA",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "04e251b254551083",
        "type": "mqtt out",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "topic": "/cron/current_data/wa/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "818f7f8dfa7e1598",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "ecf79461f7d2addb",
        "type": "inject",
        "z": "e0f5a1e129ae9af8",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "646b01f96609ebbe"
            ]
        ]
    },
    {
        "id": "8ad6cd684f954955",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "e00535b0c43750bc",
        "type": "inject",
        "z": "e0f5a1e129ae9af8",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "dce437525469387e"
            ]
        ]
    },
    {
        "id": "f2c5ee85b1f26e5d",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "`api_id` = 4",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "dce437525469387e",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "SELECT * FROM `api_data_current",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 4 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "8b27c03cd277cb33",
                "64ca7d4b915473a2"
            ]
        ]
    },
    {
        "id": "8b27c03cd277cb33",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "64ca7d4b915473a2",
        "type": "mysql",
        "z": "e0f5a1e129ae9af8",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "6775d5cad1537bbd",
                "f77d1706f7e71d10",
                "6ddde058a55e3c99"
            ]
        ]
    },
    {
        "id": "33f4cd32b65f6380",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "`api_id` = 4",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "9b37197c57f31216",
        "type": "cronplus",
        "z": "3f73221af720ea53",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWAForecast",
                "topic": "wa-forecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "14 0,3,6,9,12,15,18,21 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "3f0de05484619258",
                "edd9007134aeca76"
            ]
        ]
    },
    {
        "id": "13932704051c97da",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "Stunde: 0,3,6,9,12,15,18,21",
        "info": "",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "3f0de05484619258",
        "type": "mqtt out",
        "z": "3f73221af720ea53",
        "name": "",
        "topic": "/cron/forecast_data/wb",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 640,
        "y": 180,
        "wires": []
    },
    {
        "id": "edd9007134aeca76",
        "type": "ui_text",
        "z": "3f73221af720ea53",
        "group": "1f94dc0cd60b6d46",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/wa",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "4ed7a15508549d70",
        "type": "ui_text",
        "z": "3f73221af720ea53",
        "group": "1f94dc0cd60b6d46",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/wa",
        "label": "/cron/forecast_data/wa",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "862b03615eeaee4e",
        "type": "function",
        "z": "3f73221af720ea53",
        "name": "msg.method",
        "func": "let home_lon = global.get('home_lon');\nlet home_lat = global.get('home_lat');\n\nmsg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"};\nmsg.url = \"https://weatherapi-com.p.rapidapi.com/forecast.json?q=\" + home_lon + \",\" + home_lat + \"\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "a65871d8beccdce7"
            ]
        ]
    },
    {
        "id": "77c752633dc06737",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "a0aba6ac36449a3d",
        "type": "inject",
        "z": "3f73221af720ea53",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 400,
        "wires": [
            [
                "862b03615eeaee4e"
            ]
        ]
    },
    {
        "id": "a65871d8beccdce7",
        "type": "http request",
        "z": "3f73221af720ea53",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 870,
        "y": 340,
        "wires": [
            [
                "77c752633dc06737",
                "f5f0fd80eb6d4592",
                "94dc6edf24d6373f",
                "b75680d017321a9b"
            ]
        ]
    },
    {
        "id": "f92a9fa320f5baa8",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "Request",
        "info": "",
        "x": 860,
        "y": 300,
        "wires": []
    },
    {
        "id": "63b5c7fccb1ed714",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "Method",
        "info": "",
        "x": 650,
        "y": 300,
        "wires": []
    },
    {
        "id": "f5f0fd80eb6d4592",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.forecast.forecastday[0].hour[0].time",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 460,
        "wires": []
    },
    {
        "id": "94dc6edf24d6373f",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.forecast.forecastday[0].hour[1].time",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 500,
        "wires": []
    },
    {
        "id": "b75680d017321a9b",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.forecast.forecastday[0].hour[23].time",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 540,
        "wires": []
    },
    {
        "id": "5ec2f1929eef959a",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "RapidAPI",
        "info": "",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "6b09622327b5bc11",
        "type": "inject",
        "z": "f04b5aab4dbbe0ce",
        "name": "1 Stunde",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "ac2aae5cb9302f1e"
            ]
        ]
    },
    {
        "id": "ac2aae5cb9302f1e",
        "type": "http request",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.weatherstack.com/current?access_key=84559252ac9f4227541753cc2f05924a&query=Berlin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "07954e9cee129f9e",
                "21f5e72e238425c1"
            ]
        ]
    },
    {
        "id": "07954e9cee129f9e",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "func": "msg.payload = msg.payload.current.temperature;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "41313722bc31bf0a",
                "abd8736b62f19848",
                "f9da677b5afe9f98"
            ]
        ]
    },
    {
        "id": "41313722bc31bf0a",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "abd8736b62f19848",
        "type": "ui_text",
        "z": "f04b5aab4dbbe0ce",
        "group": "69fad70e826d02b4",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "weatherstack",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "092c1a89b5351c83",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "INIT",
        "info": "",
        "x": 290,
        "y": 200,
        "wires": []
    },
    {
        "id": "2f3cd8780bda46ca",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "Request",
        "info": "",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "46a7352a0f1a3064",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "SET",
        "info": "",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "dba96ba2e0e4adbc",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "View",
        "info": "",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "f9da677b5afe9f98",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "ws_current_temp",
        "func": "// GET VARIABLEN\nlet ws_current_temp = global.get('ws_current_temp') || 0;\n\n// FUNKTION\nws_current_temp = msg.payload;\nws_current_temp = `{\n    \"ws_temp\": ${ws_current_temp}, \n    \"time\": ${msg.topic}\n}`;\n\n// SET VARIABLEN\nglobal.set('ws_current_temp', ws_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ws_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "ac6f319af1e7e848"
            ]
        ]
    },
    {
        "id": "ac6f319af1e7e848",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 380,
        "wires": []
    },
    {
        "id": "0d99f7aba98aff48",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "GLOBAL",
        "info": "",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "2ae76b95f1044477",
        "type": "cronplus",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "ws",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 300,
        "y": 320,
        "wires": [
            [
                "b1f687238f78ce0b"
            ]
        ]
    },
    {
        "id": "b1f687238f78ce0b",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "ws_cron",
        "func": "// GET VARIABLEN\nlet ws_cron = flow.get('ws_cron') || 0;\n\n// FUNKTION\nws_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('ws_cron', ws_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ws_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "12dc50e3c6145960",
                "ac2aae5cb9302f1e"
            ]
        ]
    },
    {
        "id": "12dc50e3c6145960",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "21f5e72e238425c1",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "bf1846aab83c1cb8",
        "type": "OS",
        "z": "65981bb3f5fcad13",
        "name": "",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "987f3fc6a0cf9775"
            ]
        ]
    },
    {
        "id": "304d50880aaa6bb6",
        "type": "inject",
        "z": "65981bb3f5fcad13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "bf1846aab83c1cb8",
                "2396796470ea044b",
                "bd33ef6bb3bfe78a"
            ]
        ]
    },
    {
        "id": "987f3fc6a0cf9775",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "2396796470ea044b",
        "type": "Memory",
        "z": "65981bb3f5fcad13",
        "name": "",
        "scale": "Byte",
        "x": 500,
        "y": 480,
        "wires": [
            [
                "17c8a556c742ecb6"
            ]
        ]
    },
    {
        "id": "bd33ef6bb3bfe78a",
        "type": "NetworkIntf",
        "z": "65981bb3f5fcad13",
        "name": "",
        "x": 510,
        "y": 540,
        "wires": [
            [
                "c558cc6d10c48282"
            ]
        ]
    },
    {
        "id": "17c8a556c742ecb6",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 480,
        "wires": []
    },
    {
        "id": "c558cc6d10c48282",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "5a155cd8f4ce7ab0",
        "type": "exec",
        "z": "65981bb3f5fcad13",
        "command": "sudo ls /etc/systemd/system",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 600,
        "y": 920,
        "wires": [
            [
                "44e1687f78c6bd02"
            ],
            [],
            []
        ]
    },
    {
        "id": "9e40c2e718eb67be",
        "type": "inject",
        "z": "65981bb3f5fcad13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 900,
        "wires": [
            [
                "5a155cd8f4ce7ab0"
            ]
        ]
    },
    {
        "id": "44e1687f78c6bd02",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 920,
        "wires": []
    },
    {
        "id": "e396c667fee80249",
        "type": "inject",
        "z": "65981bb3f5fcad13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1580,
        "wires": [
            [
                "2126e5075f8c6a63"
            ]
        ]
    },
    {
        "id": "2126e5075f8c6a63",
        "type": "exec",
        "z": "65981bb3f5fcad13",
        "command": "sudo iwconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "a1f1c3cb3f6cbe36"
            ],
            [],
            []
        ]
    },
    {
        "id": "a1f1c3cb3f6cbe36",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 857.1041870117188,
        "y": 1580.7777099609375,
        "wires": []
    },
    {
        "id": "d971e559aec57337",
        "type": "kasa",
        "z": "75ec988a5e12b304",
        "name": "192.168.178.36",
        "device": "192.168.178.36",
        "interval": 60000,
        "eventInterval": 15000,
        "payload": "getInfo",
        "payloadType": "info",
        "debug": true,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "f0913c68ab6def14"
            ]
        ]
    },
    {
        "id": "f0913c68ab6def14",
        "type": "debug",
        "z": "75ec988a5e12b304",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "912ff37c20b44a4f",
        "type": "inject",
        "z": "75ec988a5e12b304",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "d971e559aec57337"
            ]
        ]
    },
    {
        "id": "94f62a1a41c10a09",
        "type": "comment",
        "z": "bd5857c13bc1e1e4",
        "name": "Broker / Server",
        "info": "",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "8659d414c5a82052",
        "type": "function",
        "z": "bd5857c13bc1e1e4",
        "name": "payloadOpject",
        "func": "// GET VARIABLEN\nlet payloadOpject = flow.get('payloadOpject') || 0;\npayloadOpject = msg.payload.packet.payload;\nlet payloadOpjectLenght = msg.payload.packet.payload.length;\n\nlet payloadTopic = msg.payload.packet.topic;\n\nconst now = new Date();\nconst d = str_pad(now.getDate());\nconst m = str_pad(now.getMonth());\nconst y = now.getFullYear();\n\nconst ho = str_pad(now.getHours());\nconst mi = str_pad(now.getMinutes());\nconst se = str_pad(now.getSeconds());\n\n// FUNKTION\nfunction str_pad(n) {\n    return String(\"00\" + n).slice(-2);\n}\n\n\nif(payloadTopic.substring(0, 1) === \"$\") {\n    return;\n} else {\n    payloadOpject = `${ho}:${mi}:${se} ${d}.${m}.${y}<br><span style=\"font-weight:700;\">${payloadTopic} : ${payloadOpject[payloadOpjectLenght - 1]}</span>`;\n}\n\n// SET VARIABLEN\nflow.set('payloadOpject', payloadOpject);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = payloadOpject;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 360,
        "wires": [
            [
                "ded38104e53bcda5",
                "fb0b1fa29ce9779b",
                "53c08854af373f83"
            ]
        ]
    },
    {
        "id": "ded38104e53bcda5",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 360,
        "wires": []
    },
    {
        "id": "fb0b1fa29ce9779b",
        "type": "function",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "func": "// GET VARIABLEN\nlet payloadHistory = flow.get('payloadHistory') || [];\npayloadHistory = msg.payload;\n\nlet viewCount = 10;\n//let now = Date();\n//let nowDate = now.getTime();\n\n/*if(typeof payloadArray === 'undefined') {\n    let payloadArray = [];\n}*/\n//\n\n// FUNKTION\n//payloadArray = payloadHistory.length;\nlet payloadArray = payloadHistory;\n\n/*\nif(payloadArray.length <= viewCount) {\n    payloadArray = payloadArray.push(payloadHistory);\n}*/\n\npayloadHistory = payloadArray;\n\n// SET VARIABLEN\nflow.set('payloadHistory', payloadHistory);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = payloadHistory;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 260,
        "wires": [
            [
                "8a0e605916a7bcc2"
            ]
        ]
    },
    {
        "id": "8a0e605916a7bcc2",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 260,
        "wires": []
    },
    {
        "id": "eab258cb87249986",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 400,
        "wires": []
    },
    {
        "id": "551509987bdc5a10",
        "type": "comment",
        "z": "bd5857c13bc1e1e4",
        "name": "View hello",
        "info": "",
        "x": 1000,
        "y": 400,
        "wires": []
    },
    {
        "id": "75a940421ea4664a",
        "type": "comment",
        "z": "bd5857c13bc1e1e4",
        "name": "View MQTT",
        "info": "",
        "x": 1170,
        "y": 220,
        "wires": []
    },
    {
        "id": "53c08854af373f83",
        "type": "mqtt out",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "topic": "history",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1330,
        "y": 380,
        "wires": []
    },
    {
        "id": "751d9ad35d5daea0",
        "type": "mqtt in",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "topic": "history",
        "qos": "2",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 530,
        "y": 600,
        "wires": [
            [
                "a063c892800f2a04"
            ]
        ]
    },
    {
        "id": "a063c892800f2a04",
        "type": "debug",
        "z": "bd5857c13bc1e1e4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 600,
        "wires": []
    },
    {
        "id": "b2acfc87dc941b64",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 15,
        "width": "1",
        "height": "1",
        "name": "icon bar-chart",
        "label": "",
        "format": "<i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "5ed2ad5498b8a0af",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 10,
        "width": "1",
        "height": "1",
        "name": "icon battery-half",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "9d5d70e4dd1a2809",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 12,
        "width": "1",
        "height": "1",
        "name": "icon",
        "label": "",
        "format": "<i class=\"fa fa-dot-circle-o\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 730,
        "y": 320,
        "wires": []
    },
    {
        "id": "d537bc2c48372187",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 14,
        "width": "1",
        "height": "1",
        "name": "icon",
        "label": "",
        "format": "<i class=\"fa fa-cog\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 910,
        "y": 280,
        "wires": []
    },
    {
        "id": "f65675a6c905fa16",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 13,
        "width": "1",
        "height": "1",
        "name": "icon",
        "label": "",
        "format": "<i class=\"fa fa-pie-chart\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 850,
        "y": 200,
        "wires": []
    },
    {
        "id": "a9d6db05e9783811",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 15,
        "width": "1",
        "height": "1",
        "name": "icon bar-chart",
        "label": "",
        "format": "<i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 560,
        "y": 360,
        "wires": []
    },
    {
        "id": "2ef0a3a0cd96529d",
        "type": "file",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "filename": "data/new.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 540,
        "y": 500,
        "wires": [
            [
                "9e5eccd5885f9229"
            ]
        ]
    },
    {
        "id": "3129aa32ec9c8423",
        "type": "function",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin') || 0;\nlet tempOptMinSetMin = flow.get('tempOptMinSetMin') || 16;\nlet tempOptMinSetMax = flow.get('tempOptMinSetMax') || 17;\n\nlet tempOptimal = flow.get('tempOptimal') || 20;\nlet tempOptimalSetMin = flow.get('tempOptimalSetMin') || 18;\nlet tempOptimalSetMax = flow.get('tempOptimalSetMax') || 22;\n\nlet tempOptMax = flow.get('tempOptMax') || 24;\nlet tempOptMaxSetMin = flow.get('tempOptMaxSetMin') || 23;\nlet tempOptMaxSetMax = flow.get('tempOptMaxSetMax') || 30;\n\n\n// SET VARIABLEN\nflow.set('tempOptMin', tempOptMin);\n\n\nmsg.payload = { \n    \"tempOptMin\": `${tempOptMin}`,\n    \"tempOptMinSetMin\": tempOptMinSetMin, \n    \"tempOptMinSetMax\": tempOptMinSetMax,\n    \"tempOptimal\": tempOptimal,\n    \"tempOptimalSetMin\": tempOptMaxSetMin,\n    \"tempOptimalSetMax\": tempOptMaxSetMax,\n    \"tempOptMax\": 24,\n    \"tempOptMaxSetMin\": 23, \n    \"tempOptMaxSetMax\": 30\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "2ef0a3a0cd96529d"
            ]
        ]
    },
    {
        "id": "9e5eccd5885f9229",
        "type": "file in",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "filename": "data/new.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 760,
        "y": 500,
        "wires": [
            [
                "46ed1b785cc607e7"
            ]
        ]
    },
    {
        "id": "418762b7ad1daa17",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.tempOptMinSetMin",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 460,
        "wires": []
    },
    {
        "id": "46ed1b785cc607e7",
        "type": "json",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 500,
        "wires": [
            [
                "418762b7ad1daa17",
                "6c2b57d172fb1f38",
                "7a9d005b99bb9559",
                "9fb33ca8f9253073"
            ]
        ]
    },
    {
        "id": "6c2b57d172fb1f38",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 420,
        "wires": []
    },
    {
        "id": "7a9d005b99bb9559",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.tempOptMinSetMax",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 500,
        "wires": []
    },
    {
        "id": "9fb33ca8f9253073",
        "type": "ui_numeric",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "label": "tempOptMin",
        "tooltip": "",
        "group": "fd4c240a0b136832",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload.tempOptMin}} °C",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 990,
        "y": 420,
        "wires": [
            [
                "c46480bee9d469c2",
                "c857ba77543fc180"
            ]
        ]
    },
    {
        "id": "c46480bee9d469c2",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 340,
        "wires": []
    },
    {
        "id": "73e7dc1a01221005",
        "type": "debug",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "c857ba77543fc180",
        "type": "function",
        "z": "265d26a9b0b7bbe2",
        "name": "",
        "func": "// GET VARIABLEN\nlet tempOptMin = flow.get('tempOptMin');\ntempOptMin = msg.payload;\n\nmsg.topic = 'tempOptMin';\nmsg.payload = tempOptMin;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 320,
        "wires": [
            [
                "73e7dc1a01221005"
            ]
        ]
    },
    {
        "id": "fe14e6cf546baf1c",
        "type": "inject",
        "z": "5790cdc8bcaea24e",
        "name": "1 Minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "minute",
        "payload": "0",
        "payloadType": "num",
        "x": 380,
        "y": 400,
        "wires": [
            [
                "72a028beb145d59f",
                "5588164fe967468b"
            ]
        ]
    },
    {
        "id": "72a028beb145d59f",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "6fcd0c5687864aac",
        "type": "ui_gauge",
        "z": "5790cdc8bcaea24e",
        "name": "timer",
        "group": "12b21ddaf27bd62f",
        "order": 12,
        "width": "6",
        "height": "4",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "colors": [
            "#00b500",
            "#d1ec04",
            "#f16f04"
        ],
        "seg1": "5",
        "seg2": "7",
        "className": "",
        "x": 810,
        "y": 400,
        "wires": []
    },
    {
        "id": "5588164fe967468b",
        "type": "function",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "func": "// GET VARIABLEN\nlet minute = global.get('minute') || 0;\n\n// FUNKTION\n//fctDate();\nif(minute < 9) {\n    minute = minute  + 1;\n} else {\n    minute = 0;\n}\n\n// SET VARIABLEN\nglobal.set('minute', minute);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = minute;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "821cce3674eda77f",
                "6fcd0c5687864aac"
            ]
        ]
    },
    {
        "id": "821cce3674eda77f",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "893e6a78511243dd",
        "type": "function",
        "z": "5790cdc8bcaea24e",
        "name": "new Date",
        "func": "// GET VARIABLEN\nlet fct = flow.get('fct') || 0;\nfct = 'Sat Sep 17 2022 18:13:15 GMT+0200 (Mitteleuropäische Sommerzeit)';\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n    return fct;\n}\n\n// SET VARIABLEN\nflow.set('fct', fct);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = fct;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 566.8958129882812,
        "y": 545.888916015625,
        "wires": [
            [
                "c58c564a6ecf99c3"
            ]
        ]
    },
    {
        "id": "fd5ca78667ea6178",
        "type": "inject",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 560,
        "wires": [
            [
                "893e6a78511243dd"
            ]
        ]
    },
    {
        "id": "c58c564a6ecf99c3",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 560,
        "wires": []
    },
    {
        "id": "c17c5ec9e1e1d3aa",
        "type": "function",
        "z": "d01c02834d8a7616",
        "name": "",
        "func": "//let result = finalResult = Object.assign(yr,wo);\n\nlet maxSpeed = {\n    \"yr\": 25.04,\n    \"wo\": 250.06\n};\n\n\nlet sortable = [];\n\nfor (var vehicle in maxSpeed) {\n    sortable.push([vehicle, maxSpeed[vehicle]]);\n}\n\nsortable.sort(function(a, b) {\n    return a[1] - b[1];\n});\n\n//let result = finalResult = Object.assign(yr,wo);\n\nmsg.payload = sortable;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "830857b53b30ac10"
            ]
        ]
    },
    {
        "id": "5539e8bff6374d01",
        "type": "inject",
        "z": "d01c02834d8a7616",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "c17c5ec9e1e1d3aa"
            ]
        ]
    },
    {
        "id": "830857b53b30ac10",
        "type": "debug",
        "z": "d01c02834d8a7616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 480,
        "wires": []
    },
    {
        "id": "3322574ea2a15343",
        "type": "function",
        "z": "d01c02834d8a7616",
        "name": "",
        "func": "let Buch = { \n    \"yr\": [\n        {\"gfg\": \"gggg\"}\n        ],\n\t\"titel\" : \"Ab die Post\",\n\t\"value\" : \"344254565X\"\n}\n\nconst grade = {\n  \"score\": \"92\"  \n};\n\nlet result = finalResult = Object.assign(Buch,grade);\n\n//Buch = Buch.push({\"titel2\" : \"2Ab die Post\"});\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 539.8958129882812,
        "y": 544.888916015625,
        "wires": [
            []
        ]
    },
    {
        "id": "efabd99b0cd769a0",
        "type": "function",
        "z": "58922ec04b12f464",
        "name": "time1",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nnow = msg.payload;\n\n//new Date();\n\n//const date = new Date().toISOString();\n\n//toISOString()\n//toLocaleString()\n\n\nlet d = date.getDate(msg.payload);\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours(msg.payload);\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = date;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 340,
        "wires": [
            [
                "c558b4e8e6b604db"
            ]
        ]
    },
    {
        "id": "c558b4e8e6b604db",
        "type": "debug",
        "z": "58922ec04b12f464",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 340,
        "wires": []
    },
    {
        "id": "884f07ef28136669",
        "type": "inject",
        "z": "58922ec04b12f464",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 340,
        "wires": [
            [
                "efabd99b0cd769a0"
            ]
        ]
    },
    {
        "id": "6d2d1e96fc0c2b9d",
        "type": "ui_date_picker",
        "z": "58922ec04b12f464",
        "name": "datepicker",
        "label": "",
        "group": "4345da5d2dd2dc78",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "94397f78ca6e1dd4"
            ]
        ]
    },
    {
        "id": "d164358a7960e79f",
        "type": "inject",
        "z": "58922ec04b12f464",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "6d2d1e96fc0c2b9d"
            ]
        ]
    },
    {
        "id": "d2afaf06d0a1cba5",
        "type": "debug",
        "z": "58922ec04b12f464",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 200,
        "wires": []
    },
    {
        "id": "534c5d85be271538",
        "type": "ui_text",
        "z": "58922ec04b12f464",
        "group": "4345da5d2dd2dc78",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "date picker text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 260,
        "wires": []
    },
    {
        "id": "94397f78ca6e1dd4",
        "type": "function",
        "z": "58922ec04b12f464",
        "name": "time1",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nnow = msg.payload;\n\n//new Date();\n// const date = new Date().toISOString();\nconst date = new Date(now);\n\n//toISOString()\n//toLocaleString()\n\n\nlet d = date.getDate(msg.payload);\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours(msg.payload);\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${y}-${mon}-${d} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800.8958129882812,
        "y": 276.8888854980469,
        "wires": [
            [
                "534c5d85be271538",
                "d2afaf06d0a1cba5"
            ]
        ]
    },
    {
        "id": "dd868eae695bbc6d",
        "type": "http request",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.open-notify.org/iss-now.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "b9c3028be6ca90a7"
            ]
        ]
    },
    {
        "id": "0549bd69816299a8",
        "type": "inject",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "dd868eae695bbc6d"
            ]
        ]
    },
    {
        "id": "b9c3028be6ca90a7",
        "type": "debug",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "f99ffeeb5b6a9c8b",
        "type": "http request",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.nasa.gov/planetary/apod?api_key=M5QNJXrCmdIHm8YRk4V2F9Pb7qJpcqdid7ekkVcZ",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "817f60ca707fc064"
            ]
        ]
    },
    {
        "id": "f25c8e3478119865",
        "type": "inject",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 420,
        "wires": [
            [
                "f99ffeeb5b6a9c8b"
            ]
        ]
    },
    {
        "id": "817f60ca707fc064",
        "type": "debug",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "5d4e67b45f251cbd",
        "type": "http request",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 550,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "48e27ad35704a6b3",
        "type": "ui_form",
        "z": "ddc2d3725b628a90",
        "name": "",
        "label": "Chat",
        "group": "0c3e23847ca5c44f",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Message",
                "value": "msg",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "msg": ""
        },
        "payload": "",
        "submit": "SEND",
        "cancel": "CLEAR",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 670,
        "y": 400,
        "wires": [
            [
                "2a77229564ba2cf5",
                "268b3b1186b64376"
            ]
        ]
    },
    {
        "id": "2a77229564ba2cf5",
        "type": "debug",
        "z": "ddc2d3725b628a90",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 340,
        "wires": []
    },
    {
        "id": "268b3b1186b64376",
        "type": "mqtt out",
        "z": "ddc2d3725b628a90",
        "name": "",
        "topic": "msg",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 850,
        "y": 480,
        "wires": []
    },
    {
        "id": "897d9dfa45252ba0",
        "type": "mqtt in",
        "z": "ddc2d3725b628a90",
        "name": "",
        "topic": "msg/#",
        "qos": "0",
        "datatype": "json",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 850,
        "y": 580,
        "wires": [
            [
                "b703df2fc2217f28",
                "24b9fa9887eab9a2"
            ]
        ]
    },
    {
        "id": "b703df2fc2217f28",
        "type": "debug",
        "z": "ddc2d3725b628a90",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 580,
        "wires": []
    },
    {
        "id": "24b9fa9887eab9a2",
        "type": "ui_text",
        "z": "ddc2d3725b628a90",
        "group": "0c3e23847ca5c44f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "view",
        "label": "{{msg.payload.msg}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "5891490bd1966e44",
        "type": "comment",
        "z": "4cf46ae5bde8e96d",
        "name": "RapidAPI",
        "info": "",
        "x": 500,
        "y": 300,
        "wires": []
    },
    {
        "id": "820b802ee8b49d8f",
        "type": "function",
        "z": "4cf46ae5bde8e96d",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"webcamstravel.p.rapidapi.com\"};\nmsg.url = \"https://webcamstravel.p.rapidapi.com/webcams/list/nearby=52.5105,13.458,50\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 340,
        "wires": [
            [
                "23e123f483512663",
                "a50a39311a8b3e73"
            ]
        ]
    },
    {
        "id": "23e123f483512663",
        "type": "http request",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "e7b01fc32df0f488"
            ]
        ]
    },
    {
        "id": "e31153bf9a783407",
        "type": "comment",
        "z": "4cf46ae5bde8e96d",
        "name": "Request",
        "info": "",
        "x": 700,
        "y": 300,
        "wires": []
    },
    {
        "id": "9632b38d9589964c",
        "type": "inject",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 340,
        "wires": [
            [
                "820b802ee8b49d8f"
            ]
        ]
    },
    {
        "id": "e7b01fc32df0f488",
        "type": "debug",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "a50a39311a8b3e73",
        "type": "debug",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "54c81ca05f5557a8",
        "type": "inject",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "7ef0cf8ed36274fe"
            ]
        ]
    },
    {
        "id": "7ef0cf8ed36274fe",
        "type": "function",
        "z": "4cf46ae5bde8e96d",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"webcamstravel.p.rapidapi.com\"};\nmsg.url = \"https://webcamstravel.p.rapidapi.com/webcams/list/webcam=1367307910\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "117fee2e9d81afa7"
            ]
        ]
    },
    {
        "id": "117fee2e9d81afa7",
        "type": "http request",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 460,
        "wires": [
            [
                "b9f5ad03c0cfe3f1"
            ]
        ]
    },
    {
        "id": "b9f5ad03c0cfe3f1",
        "type": "debug",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 460,
        "wires": []
    },
    {
        "id": "073b1e2e64f9d0ac",
        "type": "mysql",
        "z": "2fca283a32ad4608",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 810,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "cc572fd7165db948",
        "type": "inject",
        "z": "2fca283a32ad4608",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "ac14096ab779c694"
            ]
        ]
    },
    {
        "id": "ac14096ab779c694",
        "type": "function",
        "z": "2fca283a32ad4608",
        "name": "DELETE FROM `msg`",
        "func": "let sql = \"DELETE FROM `msg` WHERE `updated` <= DATE_SUB(NOW(), INTERVAL 1 HOUR)\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 360,
        "wires": [
            [
                "82bc4260803f1166",
                "593f32f3db7f7280",
                "073b1e2e64f9d0ac"
            ]
        ]
    },
    {
        "id": "82bc4260803f1166",
        "type": "debug",
        "z": "2fca283a32ad4608",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "593f32f3db7f7280",
        "type": "debug",
        "z": "2fca283a32ad4608",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "4aea6f5063f935e3",
        "type": "mysql",
        "z": "c68bf3193e71610e",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "740e867aed664593",
                "210e2760d418e2aa"
            ]
        ]
    },
    {
        "id": "740e867aed664593",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "5d07d43f8bf6e395",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "SELECT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "0f67a0a184c3efca"
            ]
        ]
    },
    {
        "id": "0f67a0a184c3efca",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "getSQL Query",
        "func": "msg.topic = \"SELECT * FROM `nodered`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "6cbe7d40d558f27a",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "165e492e4664f317"
            ]
        ]
    },
    {
        "id": "165e492e4664f317",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "insertSQL Query",
        "func": "msg.topic = \"INSERT INTO `nodered` (`offerer`) VALUES ('ws')\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "bb53c9e95dcd0246",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "updateSQL Query",
        "func": "msg.topic = \"UPDATE `nodered` SET `offerer` = 'wa' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "12c48c8e29fed744",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "bb53c9e95dcd0246"
            ]
        ]
    },
    {
        "id": "210e2760d418e2aa",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "",
        "func": "if (msg.payload.warningStatus === undefined) {\n    msg.payload = `SELECT ...`;\n} else {\n    msg.payload = msg.payload.warningStatus;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 280,
        "wires": [
            [
                "de016b4fde2d751b"
            ]
        ]
    },
    {
        "id": "de016b4fde2d751b",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "99a7a9ceae32fc56",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 560,
        "wires": [
            [
                "f88fca19ca0ce386"
            ]
        ]
    },
    {
        "id": "f88fca19ca0ce386",
        "type": "mysql",
        "z": "c68bf3193e71610e",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 910,
        "y": 560,
        "wires": [
            [
                "57465ea7283da963"
            ]
        ]
    },
    {
        "id": "6e39ee2872030312",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 3;",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "99a7a9ceae32fc56"
            ]
        ]
    },
    {
        "id": "57465ea7283da963",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 560,
        "wires": []
    },
    {
        "id": "9c2b111e4fafb943",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "deleteSQL Query",
        "func": "msg.topic = \"DELETE FROM `msg` WHERE `updated` <= DATE_SUB(NOW(), INTERVAL 30 DAY)\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "68def883313c706b",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "98421cbd3eb32902",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 350,
        "y": 660,
        "wires": [
            [
                "fa6bd1c5c1958da3"
            ]
        ]
    },
    {
        "id": "fa6bd1c5c1958da3",
        "type": "subflow:9444fcba5df4f1f4",
        "z": "c68bf3193e71610e",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "c836505e4621e6a5"
            ]
        ]
    },
    {
        "id": "c836505e4621e6a5",
        "type": "switch",
        "z": "c68bf3193e71610e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 660,
        "wires": [
            [
                "c5e2433e370c3a09"
            ]
        ]
    },
    {
        "id": "c5e2433e370c3a09",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 740,
        "wires": [
            [
                "783eb7ce96d31f02"
            ]
        ]
    },
    {
        "id": "783eb7ce96d31f02",
        "type": "mysql",
        "z": "c68bf3193e71610e",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 630,
        "y": 740,
        "wires": [
            [
                "5dd312071346e73d"
            ]
        ]
    },
    {
        "id": "5dd312071346e73d",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 740,
        "wires": []
    }
]
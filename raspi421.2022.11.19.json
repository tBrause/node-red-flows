[
    {
        "id": "a5317b738351df34",
        "type": "tab",
        "label": "Global Vars",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "730a60d9a8076387",
        "type": "tab",
        "label": "Home Extra",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "33556e98e7501abf",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7cb59b2960a193b9",
        "type": "tab",
        "label": "ssh WLAN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "684857be1acaed25",
        "type": "tab",
        "label": "Batterien Sensoren",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4d6542c2a87f4380",
        "type": "tab",
        "label": "MQTT Aedes Broker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ede7465224a02eb",
        "type": "tab",
        "label": "System / Publishing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c19ab6e0657fcd70",
        "type": "tab",
        "label": "Alle System / Subscriping",
        "disabled": false,
        "info": "node-red-contrib-aedes\nnode-red-contrib-cpu",
        "env": []
    },
    {
        "id": "0e78e9a296f09ffb",
        "type": "tab",
        "label": "Netatmo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a3a9fd242ddfbf1",
        "type": "tab",
        "label": "BÃ¼ro",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a18bee2e207edef3",
        "type": "tab",
        "label": "Sensor2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c17bc758ed437b81",
        "type": "tab",
        "label": "Room3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2486ad55b5b55cef",
        "type": "tab",
        "label": "Room3/Temp",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "51c9f40cab9897be",
        "type": "tab",
        "label": "Room3/Humi",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f3b99d070bda954c",
        "type": "tab",
        "label": "Room3/Sensor2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "69fdc5107ac1bf2c",
        "type": "tab",
        "label": "Room3/Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a8fcf0ce4aab871",
        "type": "tab",
        "label": "Room3/Control NEU",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "558c0d9f62951a13",
        "type": "tab",
        "label": "Room3/Action",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b0de4698f35c235",
        "type": "tab",
        "label": "Shelly1 702F79",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "41d0abfd696e535f",
        "type": "tab",
        "label": "Wohnzimmer NEU",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ff130a5b5bc711f1",
        "type": "tab",
        "label": "compare_data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f53df285b1e5b9ec",
        "type": "tab",
        "label": "VIEW",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f62f66d5823b7337",
        "type": "tab",
        "label": "YR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "90217cda5f3aeef5",
        "type": "tab",
        "label": "YR Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b82b95c5cd6b861b",
        "type": "tab",
        "label": "OW",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b6a2ad0c72d43d34",
        "type": "tab",
        "label": "OW Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddd61edf8d8f5ce2",
        "type": "tab",
        "label": "openweather",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "01666d2621fc3afa",
        "type": "tab",
        "label": "WB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae83296a545602f0",
        "type": "tab",
        "label": "WB Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e0f5a1e129ae9af8",
        "type": "tab",
        "label": "WeatherAPI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f73221af720ea53",
        "type": "tab",
        "label": "WA Forecast",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f04b5aab4dbbe0ce",
        "type": "tab",
        "label": "Weatherstack",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "65981bb3f5fcad13",
        "type": "tab",
        "label": "ssh",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "75ec988a5e12b304",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "71b91177c355c22a",
        "type": "tab",
        "label": "icons",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8688ffe19f3ee733",
        "type": "tab",
        "label": "GEO",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5790cdc8bcaea24e",
        "type": "tab",
        "label": "Time",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d01c02834d8a7616",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "58922ec04b12f464",
        "type": "tab",
        "label": "datepicker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "abd71d6eaafedaa3",
        "type": "tab",
        "label": "api nasa iss",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddc2d3725b628a90",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4cf46ae5bde8e96d",
        "type": "tab",
        "label": "Flow 7",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2fca283a32ad4608",
        "type": "tab",
        "label": "CLEAR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c68bf3193e71610e",
        "type": "tab",
        "label": "mysql",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b080d8ed71d89bdd",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8e07d4af41ec64a6",
        "type": "tab",
        "label": "Flow 8",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9444fcba5df4f1f4",
        "type": "subflow",
        "name": "Inject + 5min",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "5ac2eacd77148428"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 80,
                "wires": [
                    {
                        "id": "5ac2eacd77148428",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3ff4bac1cafa9052",
        "type": "subflow",
        "name": "h:m:s / d.m.Y",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "34f8c42e95e32ef0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "34f8c42e95e32ef0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "74a48b7b46af4887",
        "type": "subflow",
        "name": "send Temp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3a37889abd313564"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "3a37889abd313564",
                        "port": 0
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "3a37889abd313564",
                        "port": 1
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "3a37889abd313564",
                        "port": 2
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "3a37889abd313564",
                        "port": 3
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "3a37889abd313564",
                        "port": 4
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3326ae2f4e49d4ff",
        "type": "subflow",
        "name": "receive Temp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "cd4267ae5c31485c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "cd4267ae5c31485c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "cd4267ae5c31485c",
                        "port": 1
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "cd4267ae5c31485c",
                        "port": 2
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "cd4267ae5c31485c",
                        "port": 3
                    }
                ]
            },
            {
                "x": 380,
                "y": 80,
                "wires": [
                    {
                        "id": "cd4267ae5c31485c",
                        "port": 4
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e18e6af424e314bf",
        "type": "subflow",
        "name": "h:m d.m.y",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 100,
                "wires": [
                    {
                        "id": "03e6ec290bdfa545"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 100,
                "wires": [
                    {
                        "id": "03e6ec290bdfa545",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "ad5c24e7d8eed9c0",
        "type": "subflow",
        "name": "send Control",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 1
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 2
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 3
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 4
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 5
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 6
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 7
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "16eaa821b4dad403",
                        "port": 8
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "5419871c8794a7b1",
        "type": "subflow",
        "name": "send Temp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "53721b93ff1a75fb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "53721b93ff1a75fb",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "53721b93ff1a75fb",
                        "port": 1
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "53721b93ff1a75fb",
                        "port": 2
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "53721b93ff1a75fb",
                        "port": 3
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "53721b93ff1a75fb",
                        "port": 4
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "343d88b853dcec59",
        "type": "subflow",
        "name": "send Humi",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "59ba6ba4904f3cd1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "59ba6ba4904f3cd1",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "59ba6ba4904f3cd1",
                        "port": 1
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "59ba6ba4904f3cd1",
                        "port": 2
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "59ba6ba4904f3cd1",
                        "port": 3
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "59ba6ba4904f3cd1",
                        "port": 4
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2bd74f88847597ef",
        "type": "subflow",
        "name": "send Sensor",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "37c05cb15d3471e7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "37c05cb15d3471e7",
                        "port": 0
                    }
                ]
            },
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "37c05cb15d3471e7",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b4a87c66d7a3665f",
        "type": "ui_tab",
        "name": "Hello",
        "icon": "",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ddf98fc90e5bf8d6",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#064165",
                "baseFont": "Courier,monospace",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "raspihell",
                "default": "#4B7930",
                "baseColor": "#f1f1f1",
                "baseFont": "Courier,monospace",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#f1f1f1",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#f1f1f1",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#bababa",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#303030",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#d9d9d9",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#404040",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#f9f9f9",
                    "edited": true
                },
                "base-font": {
                    "value": "Courier,monospace"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Raspberry Pi 421",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 24,
                "gy": 24,
                "cx": 6,
                "cy": 6,
                "px": 12,
                "py": 12
            }
        }
    },
    {
        "id": "d77c24919d5307b6",
        "type": "ui_group",
        "name": "CPU",
        "tab": "b4a87c66d7a3665f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": "",
        "info": "Hello CPU"
    },
    {
        "id": "95934c44be359fb7",
        "type": "ui_tab",
        "name": "Raspberry Pi 421",
        "icon": "fa-server",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "648e040fbcc0a63e",
        "type": "ui_group",
        "name": "RAM-Auslastung",
        "tab": "95934c44be359fb7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8536a9c0ef59e1eb",
        "type": "ui_group",
        "name": "Speicher",
        "tab": "b4a87c66d7a3665f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d42cba2fbf496d29",
        "type": "ui_group",
        "name": "CPU Auslastung",
        "tab": "95934c44be359fb7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c7ab99f798cdf0f",
        "type": "ui_group",
        "name": "CPU Temperatur",
        "tab": "95934c44be359fb7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7177e1bbce7a0779",
        "type": "ui_group",
        "name": "Wind",
        "tab": "5052abf10d1685d7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e70d0760bcc08d3a",
        "type": "ui_group",
        "name": "Himmel",
        "tab": "5052abf10d1685d7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "28f7dbdd3547c09e",
        "type": "ui_group",
        "name": "Temperatur",
        "tab": "5052abf10d1685d7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f697df7ca894247c",
        "type": "ui_group",
        "name": "LÃ¼ftfeuchtigkeit",
        "tab": "5052abf10d1685d7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f136cc64cd7db2e1",
        "type": "ui_group",
        "name": "info",
        "tab": "5052abf10d1685d7",
        "order": 7,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "325d7857240a0cc6",
        "type": "ui_group",
        "name": "Luftdruck",
        "tab": "5052abf10d1685d7",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5052abf10d1685d7",
        "type": "ui_tab",
        "name": "Weather",
        "icon": "fa-sun-o",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e7bef4fac1dad829",
        "type": "mqtt-broker",
        "name": "",
        "broker": "guteswetter.ddns.net",
        "port": "1883",
        "clientid": "mqtt_raspi421",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6f08daeb3892d9d2",
        "type": "ui_tab",
        "name": "Raspberry Farm",
        "icon": "fa-server",
        "order": 16,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "95082877e495bc4d",
        "type": "ui_group",
        "name": "CPU Temperatur",
        "tab": "6f08daeb3892d9d2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4fb2731161c030c4",
        "type": "ui_group",
        "name": "CPU Auslastung",
        "tab": "6f08daeb3892d9d2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7a1fd158c2b52cdd",
        "type": "ui_group",
        "name": "RAM Auslastung",
        "tab": "6f08daeb3892d9d2",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a9c83617a1d0cec3",
        "type": "ui_tab",
        "name": "Sensoren",
        "icon": "fa-thermometer-half",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "47b711e5f8cfcf96",
        "type": "ui_group",
        "name": "Shelly H&T.25 (WZ)",
        "tab": "a9c83617a1d0cec3",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4421ea5d2f4fae8e",
        "type": "ui_group",
        "name": "openweather.org",
        "tab": "d1dcec789102c3a3",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e15626a66ed17914",
        "type": "ui_tab",
        "name": "MQTT",
        "icon": "code",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fd5052c6399ba750",
        "type": "ui_group",
        "name": "MQTT Messages",
        "tab": "b4a87c66d7a3665f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d1dcec789102c3a3",
        "type": "ui_tab",
        "name": "Hidden",
        "icon": "dashboard",
        "order": 17,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "9cbad506a0556217",
        "type": "ui_group",
        "name": "hidden",
        "tab": "d1dcec789102c3a3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3da97eba3f6cdd7",
        "type": "ui_group",
        "name": "openweather.org",
        "tab": "fd4b7bc6be096b7c",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "12b21ddaf27bd62f",
        "type": "ui_group",
        "name": "Timer 10 Minuten",
        "tab": "e4f90b8f6f089017",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fd4b7bc6be096b7c",
        "type": "ui_tab",
        "name": "Forecast",
        "icon": "fa-sun-o",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "69fad70e826d02b4",
        "type": "ui_group",
        "name": "Aktuell",
        "tab": "8e5d7269710e10a7",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8e5d7269710e10a7",
        "type": "ui_tab",
        "name": "App-Vergleich",
        "icon": "fa-sun-o",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3bc48255336fdd1e",
        "type": "ui_group",
        "name": "Niederschlag",
        "tab": "5052abf10d1685d7",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "179277ed4e2f8253",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "test",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b923ae493cecb90a",
        "type": "ui_link",
        "name": "Raspberry Pi 422",
        "link": "http://raspi422.sanberlin.com:1882/",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 15
    },
    {
        "id": "3e0b974a4b41a619",
        "type": "ui_group",
        "name": "WLAN",
        "tab": "b4a87c66d7a3665f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4345da5d2dd2dc78",
        "type": "ui_group",
        "name": "Datepicker",
        "tab": "e4f90b8f6f089017",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e4f90b8f6f089017",
        "type": "ui_tab",
        "name": "Time",
        "icon": "fa-clock-o",
        "order": 19,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a46f64b14b0e509",
        "type": "ui_group",
        "name": "raspi421",
        "tab": "e15626a66ed17914",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ff7539c4741377b4",
        "type": "ui_group",
        "name": "raspi422",
        "tab": "e15626a66ed17914",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3440106554ffc41c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "mqtt",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b1c36b7a6381af37",
        "type": "ui_group",
        "name": "shellyht-702F79",
        "tab": "e15626a66ed17914",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8a88272d4f9a7f41",
        "type": "ui_group",
        "name": "Cronjobs",
        "tab": "e15626a66ed17914",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ea6c1a70d4e77a46",
        "type": "ui_group",
        "name": "shellyht-706823",
        "tab": "e15626a66ed17914",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "919f4e44dec380e0",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "raumklima",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "4a9cf85a90c59317",
        "type": "ui_tab",
        "name": "msg",
        "icon": "fa-paper-plane",
        "order": 20,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0c3e23847ca5c44f",
        "type": "ui_group",
        "name": "Form",
        "tab": "4a9cf85a90c59317",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c6081d5f03c98c7",
        "type": "configNode",
        "name": ""
    },
    {
        "id": "62de86d112dd1796",
        "type": "ui_group",
        "name": "Batterien Sensoren",
        "tab": "b4a87c66d7a3665f",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "efb01562e830223d",
        "type": "ui_tab",
        "name": "Sensoren (Indoor)",
        "icon": "fa-thermometer-half",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4f638b1b01f764cd",
        "type": "ui_group",
        "name": "APIs Check Differenz",
        "tab": "d1dcec789102c3a3",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "410f9b2957796f10",
        "type": "ui_group",
        "name": "Interval",
        "tab": "e15626a66ed17914",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2cb1854dd73f3535",
        "type": "ui_group",
        "name": "Home",
        "tab": "d1dcec789102c3a3",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cb4132b94e48ff2c",
        "type": "ui_tab",
        "name": "Cronjobs",
        "icon": "fa-clock-o",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c91c3efabc859b5b",
        "type": "ui_group",
        "name": "Node-Red Cronjobs",
        "tab": "b4a87c66d7a3665f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d591bbb615b4fe18",
        "type": "ui_group",
        "name": "Interval",
        "tab": "b4a87c66d7a3665f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "95336c470a1da5f7",
        "type": "ui_group",
        "name": "API Request",
        "tab": "cb4132b94e48ff2c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5697714fb266cca",
        "type": "ui_group",
        "name": "Vergleich",
        "tab": "cb4132b94e48ff2c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1f94dc0cd60b6d46",
        "type": "ui_group",
        "name": "Forecast",
        "tab": "cb4132b94e48ff2c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab1be0cdc9f4280c",
        "type": "ui_tab",
        "name": "View",
        "icon": "",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6163fec975554d91",
        "type": "ui_group",
        "name": "21 Uhr",
        "tab": "ab1be0cdc9f4280c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad7a4b76b6c81f5b",
        "type": "ui_group",
        "name": "18h",
        "tab": "ab1be0cdc9f4280c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "020fb88ae35ffb4a",
        "type": "ui_group",
        "name": "0h",
        "tab": "ab1be0cdc9f4280c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2915d3249cfafbe",
        "type": "ui_group",
        "name": "Outdoor & API's",
        "tab": "b4a87c66d7a3665f",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cc53f78006ac9146",
        "type": "ui_group",
        "name": "APIs Check OLD",
        "tab": "d1dcec789102c3a3",
        "order": 14,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "275a2431d292dd0b",
        "type": "ui_group",
        "name": "YR",
        "tab": "8e5d7269710e10a7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "60f0ebd00e6b60cd",
        "type": "ui_group",
        "name": "openweather",
        "tab": "8e5d7269710e10a7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65f8c5e11dd5d55d",
        "type": "ui_group",
        "name": "weatherbit",
        "tab": "8e5d7269710e10a7",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9fae8a7151b26655",
        "type": "ui_group",
        "name": "Weather-Api",
        "tab": "8e5d7269710e10a7",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6843c9d76c2010bd",
        "type": "ui_group",
        "name": "Vergleich",
        "tab": "8e5d7269710e10a7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2e2cb0c53355f590",
        "type": "ui_group",
        "name": "API-Check",
        "tab": "b4a87c66d7a3665f",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "73738b1b1c08f080",
        "type": "ui_tab",
        "name": "Wohnzimmer",
        "icon": "fa-thermometer-half",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "afae9d74aa8939b3",
        "type": "ui_group",
        "name": "Temperatur Â°C",
        "tab": "73738b1b1c08f080",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dda6c71d7afc8b96",
        "type": "ui_group",
        "name": "Luftfeuchte %",
        "tab": "73738b1b1c08f080",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ca150b96cb248dec",
        "type": "ui_group",
        "name": "Outdoor",
        "tab": "73738b1b1c08f080",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0ab1cb1a24262bf4",
        "type": "ui_tab",
        "name": "KÃ¼che",
        "icon": "fa-thermometer-half",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "03604adbe40ccb34",
        "type": "ui_group",
        "name": "Temperatur",
        "tab": "0ab1cb1a24262bf4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cc7d80cc7bb13156",
        "type": "ui_group",
        "name": "Outdoor",
        "tab": "0ab1cb1a24262bf4",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fd0cbb5183778ce4",
        "type": "ui_group",
        "name": "Luftfeuchtigkeit",
        "tab": "0ab1cb1a24262bf4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ad98f78e05e079c5",
        "type": "ui_group",
        "name": "Home",
        "tab": "b4a87c66d7a3665f",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1f842539987af76b",
        "type": "ui_tab",
        "name": "BÃ¼ro",
        "icon": "fa-thermometer-half",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b1a371df80305874",
        "type": "ui_group",
        "name": "Temperatur",
        "tab": "1f842539987af76b",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d48606f24897b3a3",
        "type": "ui_group",
        "name": "Luftfeuchtigkeit",
        "tab": "1f842539987af76b",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3badd02204fa4041",
        "type": "ui_group",
        "name": "Outdoor",
        "tab": "1f842539987af76b",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b0bc51f819da4e01",
        "type": "ui_group",
        "name": "CO2",
        "tab": "1f842539987af76b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7a7a528c0567ddfc",
        "type": "ui_group",
        "name": "Updates",
        "tab": "1f842539987af76b",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1f09b98928526ab5",
        "type": "ui_group",
        "name": "GerÃ¤uschpegel",
        "tab": "1f842539987af76b",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9abd6a232e6fe5b2",
        "type": "ui_spacer",
        "z": "5a3a9fd242ddfbf1",
        "name": "spacer",
        "group": "b0bc51f819da4e01",
        "order": 3,
        "width": "6",
        "height": "1"
    },
    {
        "id": "786225c66c251acd",
        "type": "ui_spacer",
        "z": "5a3a9fd242ddfbf1",
        "name": "spacer",
        "group": "b1a371df80305874",
        "order": 4,
        "width": "6",
        "height": "1"
    },
    {
        "id": "7266a0f9da6d0f39",
        "type": "ui_spacer",
        "z": "5a3a9fd242ddfbf1",
        "name": "spacer",
        "group": "d48606f24897b3a3",
        "order": 3,
        "width": "6",
        "height": "1"
    },
    {
        "id": "f6fd0b139e92f80c",
        "type": "ui_spacer",
        "z": "5a3a9fd242ddfbf1",
        "name": "spacer",
        "group": "1f09b98928526ab5",
        "order": 3,
        "width": "6",
        "height": "1"
    },
    {
        "id": "50c8ea9759c4095e",
        "type": "ui_spacer",
        "z": "c17bc758ed437b81",
        "name": "spacer",
        "group": "cc7d80cc7bb13156",
        "order": 3,
        "width": "6",
        "height": "1"
    },
    {
        "id": "0a3ed2d30f749e8f",
        "type": "ui_spacer",
        "z": "5a3a9fd242ddfbf1",
        "name": "spacer",
        "group": "3badd02204fa4041",
        "order": 3,
        "width": "6",
        "height": "1"
    },
    {
        "id": "531c317b58636708",
        "type": "ui_group",
        "name": "Sensor",
        "tab": "0ab1cb1a24262bf4",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6205839307ff8d8e",
        "type": "ui_group",
        "name": "Empfehlung",
        "tab": "0ab1cb1a24262bf4",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ca956db1ba3ae622",
        "type": "ui_group",
        "name": "Tendenz",
        "tab": "0ab1cb1a24262bf4",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "97f22cabb3aa08bf",
        "type": "ntc-node-red-pushover-keys",
        "name": "add"
    },
    {
        "id": "527489dd4a5e8a8f",
        "type": "ui_spacer",
        "z": "69fdc5107ac1bf2c",
        "name": "spacer",
        "group": "6205839307ff8d8e",
        "order": 6,
        "width": "6",
        "height": "1"
    },
    {
        "id": "88b6e76ae91da71a",
        "type": "ui_group",
        "name": "Luftdruck",
        "tab": "b4a87c66d7a3665f",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5ac2eacd77148428",
        "type": "function",
        "z": "9444fcba5df4f1f4",
        "name": "Inject and Refresh at 5 min",
        "func": "let count = flow.get('count') || 1;\n\nif(count < 60 * 5) {\n    count = count + 1;\n} else {\n    count = 1;\n}\n\n// SET VARIABLEN\nflow.set('count', count);\nmsg.payload = count;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "34f8c42e95e32ef0",
        "type": "function",
        "z": "3ff4bac1cafa9052",
        "name": "h:m:s / d.m.Y",
        "func": "let date_value = msg.payload;\n\n// FUNKTION\nfunction fctDate(date_value) {\n    const date = new Date(date_value);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    output = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return output;\n}\n\nmsg.payload = fctDate(date_value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3a37889abd313564",
        "type": "function",
        "z": "74a48b7b46af4887",
        "name": "send Temp",
        "func": "let room_id = flow.get('room_id');\n\nlet temp = flow.get('temp');\n\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\nlet outdoor_temp = flow.get('outdoor_temp');\n\nlet msg1 = { payload: `${room_id}`, topic: `room_id`};\nlet msg2 = { payload: `${temp}`, topic: `temp`};\nlet msg3 = { payload: `${min_temp}`, topic: `min_temp`};\nlet msg4 = { payload: `${max_temp}`, topic: `max_temp`};\nlet msg5 = { payload: `${outdoor_temp}`, topic: `outdoor_temp`};\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 80,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "cd4267ae5c31485c",
        "type": "switch",
        "z": "3326ae2f4e49d4ff",
        "name": "receive Temp",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "room_id",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_temp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 210,
        "y": 80,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "03e6ec290bdfa545",
        "type": "function",
        "z": "e18e6af424e314bf",
        "name": "h:m d.m.y",
        "func": "let date_value = msg.payload;\n\n// FUNKTION\nfunction fctDate(date_value) {\n    const date = new Date(date_value);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear().toString();\n    yss = y.substr(2);\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    output = `${h}:${min} ${d}.${mon}.${yss}`;\n    return output;\n}\n\nmsg.payload = fctDate(date_value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "16eaa821b4dad403",
        "type": "function",
        "z": "ad5c24e7d8eed9c0",
        "name": "send Control",
        "func": "let room_id = flow.get('room_id');\n\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// SET\nlet msg1 = { payload: `${room_id}`, topic: `room_id`};\nlet msg2 = { payload: `${temp}`, topic: `temp`};\nlet msg3 = { payload: `${min_temp}`, topic: `min_temp`};\nlet msg4 = { payload: `${max_temp}`, topic: `max_temp`};\nlet msg5 = { payload: `${outdoor_temp}`, topic: `outdoor_temp`};\n\nlet msg6 = { payload: `${humi}`, topic: `humi`};\nlet msg7 = { payload: `${min_humidity}`, topic: `min_humidity`};\nlet msg8 = { payload: `${max_humidity}`, topic: `max_humidity`};\nlet msg9 = { payload: `${outdoor_humi}`, topic: `outdoor_humi`};\n\n// MSG\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "53721b93ff1a75fb",
        "type": "function",
        "z": "5419871c8794a7b1",
        "name": "send Temp",
        "func": "let room_id = flow.get('room_id');\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\nlet msg1 = { payload: `${room_id}`, topic: `room_id`};\nlet msg2 = { payload: `${temp}`, topic: `temp`};\nlet msg3 = { payload: `${min_temp}`, topic: `min_temp`};\nlet msg4 = { payload: `${max_temp}`, topic: `max_temp`};\nlet msg5 = { payload: `${outdoor_temp}`, topic: `outdoor_temp`};\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "59ba6ba4904f3cd1",
        "type": "function",
        "z": "343d88b853dcec59",
        "name": "send Humi",
        "func": "let room_id = flow.get('room_id');\n\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\nlet outdoor_humi = flow.get('outdoor_humi');\n\nlet msg1 = { payload: `${room_id}`, topic: `room_id`};\nlet msg2 = { payload: `${humi}`, topic: `humi`};\nlet msg3 = { payload: `${min_humidity}`, topic: `min_humidity`};\nlet msg4 = { payload: `${max_humidity}`, topic: `max_humidity`};\nlet msg5 = { payload: `${outdoor_humi}`, topic: `outdoor_humi`};\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "37c05cb15d3471e7",
        "type": "function",
        "z": "2bd74f88847597ef",
        "name": "send Sensor",
        "func": "// FLOWE GET\nlet updated = flow.get('updated');\nlet battery = flow.get('battery');\n\n// SET\nlet msg1 = { payload: `${updated}`, topic: `updated`};\nlet msg2 = { payload: `${battery}`, topic: `battery`};\n\n// MSG\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2e8b03a3b0351b88",
        "type": "comment",
        "z": "a5317b738351df34",
        "name": "SET GLOBAL",
        "info": "",
        "x": 390,
        "y": 120,
        "wires": []
    },
    {
        "id": "5cf4624c26263a87",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "home_lon & home_lat",
        "func": "let home_lon = global.get('home_lon') || 13.4580;\nlet home_lat = global.get('home_lat') || 52.5105;\n\n// SET VARIABLEN\nglobal.set('home_lon', home_lon);\nglobal.set('home_lat', home_lat);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 160,
        "wires": [
            [
                "1ff009c8a0ebcf2f",
                "7f241027c0eb644b"
            ]
        ]
    },
    {
        "id": "72460d3af9e2d190",
        "type": "inject",
        "z": "a5317b738351df34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "5cf4624c26263a87",
                "354ad5225c93afa3"
            ]
        ]
    },
    {
        "id": "1ff009c8a0ebcf2f",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "home_lon",
        "func": "let home_lon = global.get('home_lon');\n\nmsg.payload = home_lon;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            [
                "5ac460a228c657b4"
            ]
        ]
    },
    {
        "id": "5ac460a228c657b4",
        "type": "debug",
        "z": "a5317b738351df34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 140,
        "wires": []
    },
    {
        "id": "1b98952de7b3d4c8",
        "type": "comment",
        "z": "a5317b738351df34",
        "name": "CHECK GLOBAL",
        "info": "",
        "x": 740,
        "y": 100,
        "wires": []
    },
    {
        "id": "7f241027c0eb644b",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "home_lon",
        "func": "let home_lat = global.get('home_lat');\n\nmsg.payload = home_lat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "c79afc071de4091a"
            ]
        ]
    },
    {
        "id": "c79afc071de4091a",
        "type": "debug",
        "z": "a5317b738351df34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "354ad5225c93afa3",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "gauge_toleranz",
        "func": "// GLOBAL GET\nlet gauge_toleranz = global.get('gauge_toleranz') || 4;\n\n// GLOBAL SET\nglobal.set('gauge_toleranz', gauge_toleranz);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "b77316cd575be05b"
            ]
        ]
    },
    {
        "id": "b77316cd575be05b",
        "type": "function",
        "z": "a5317b738351df34",
        "name": "gauge_toleranz",
        "func": "let gauge_toleranz = global.get('gauge_toleranz');\n\nmsg.payload = gauge_toleranz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "8bed8df2a5e32dbd"
            ]
        ]
    },
    {
        "id": "8bed8df2a5e32dbd",
        "type": "debug",
        "z": "a5317b738351df34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "c2bed21cadbd3190",
        "type": "change",
        "z": "a5317b738351df34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "home_lon",
                "pt": "flow",
                "to": "13.4580",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "44d29075a93c9285",
        "type": "change",
        "z": "a5317b738351df34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "home_lat",
                "pt": "flow",
                "to": "52.5105",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1006a690a162902a",
        "type": "change",
        "z": "a5317b738351df34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gauge_toleranz",
                "pt": "flow",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7a7a32448aee2bad",
        "type": "ui_text",
        "z": "730a60d9a8076387",
        "group": "ad98f78e05e079c5",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "text Home Room KÃ¼che",
        "label": "KÃ¼che",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 390,
        "y": 200,
        "wires": []
    },
    {
        "id": "2cf40272c0ff7260",
        "type": "ui_text",
        "z": "730a60d9a8076387",
        "group": "ad98f78e05e079c5",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "text Home Room Wohnzimmer",
        "label": "Wohnzimmer",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 280,
        "wires": []
    },
    {
        "id": "ebf29534cd5f3637",
        "type": "ui_text",
        "z": "730a60d9a8076387",
        "group": "ad98f78e05e079c5",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text Home Room BÃ¼ro",
        "label": "BÃ¼ro",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "4718aa4a8f0d3cd5",
        "type": "cpu",
        "z": "33556e98e7501abf",
        "name": "",
        "msgCore": true,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": true,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "1ec925bf704c346c"
            ]
        ]
    },
    {
        "id": "3f42e79e8ac85ff8",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "CPU Temperatur",
        "group": "d77c24919d5307b6",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0086b3",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1170,
        "y": 280,
        "wires": []
    },
    {
        "id": "1ec925bf704c346c",
        "type": "switch",
        "z": "33556e98e7501abf",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "overall",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "core_4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 930,
        "y": 320,
        "wires": [
            [
                "3f42e79e8ac85ff8",
                "4a89edd44df67331",
                "29f4349408fba474"
            ],
            [
                "b31fee1a06546600",
                "3fc649e48cf088e5",
                "c42340eb39f6d4c9"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "d0621049cc48f97e",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 3,
        "width": "6",
        "height": "4",
        "label": "akzeptabel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "40",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#fff70f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b31fee1a06546600",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "CPU Auslastung",
        "group": "d77c24919d5307b6",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1160,
        "y": 500,
        "wires": []
    },
    {
        "id": "3fc649e48cf088e5",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "niedrig",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "f81dbd64c34a3507"
            ]
        ]
    },
    {
        "id": "24edfbebf40ea35d",
        "type": "inject",
        "z": "33556e98e7501abf",
        "name": "5 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Float-System",
        "payloadType": "str",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "57f62c04748ae258",
                "4718aa4a8f0d3cd5",
                "d6cde956d86d9c40",
                "926b647a567b1d19",
                "70fa7dbcfe17e81d",
                "b9766971cb5b2204",
                "fa40dbe59e42ef2a",
                "d91bbe1bce4be9ed"
            ]
        ]
    },
    {
        "id": "4a89edd44df67331",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "optimal",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "d0621049cc48f97e"
            ]
        ]
    },
    {
        "id": "f81dbd64c34a3507",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "mittel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "40",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "57f62c04748ae258",
        "type": "Memory",
        "z": "33556e98e7501abf",
        "name": "mem",
        "scale": "Byte",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "738766d64012cead",
                "b52d52dbfb6806b8",
                "bf7732921d1ac471"
            ]
        ]
    },
    {
        "id": "cb9a9e86376a8470",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "RAM",
        "group": "8536a9c0ef59e1eb",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "className": "",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "baaebb1403d3f0e0",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "niedrig",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "60",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "738766d64012cead",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "totalmem",
        "func": "// GET VARIABLEN\nlet gb = flow.get('gb') || 0;\n\n// FUNKTION\nconst totalmem = msg.payload.totalmem;\nconst k = 1024;\nconst kb = Math.floor(totalmem / k);\nconst mb = Math.floor(kb / 1000);\nconst ggb = Math.floor(mb / 1000);\ngb = mb.toFixed(2);\n\n// SET VARIABLEN\nflow.set('gb', gb);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = gb;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "32c7344a264318ff"
            ]
        ]
    },
    {
        "id": "b52d52dbfb6806b8",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "freemem",
        "func": "msg.payload = msg.payload.freemem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "bf7732921d1ac471",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "memusage",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 340,
        "wires": [
            [
                "cb9a9e86376a8470",
                "baaebb1403d3f0e0",
                "5899a5d31010319e",
                "d28dccb7d7cdf41e"
            ]
        ]
    },
    {
        "id": "5899a5d31010319e",
        "type": "ui_chart",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "akzetabel",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "60",
        "ymax": "80",
        "removeOlder": "16",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 720,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d28dccb7d7cdf41e",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "648e040fbcc0a63e",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "className": "",
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "29f4349408fba474",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "7c7ab99f798cdf0f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0086b3",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 200,
        "wires": []
    },
    {
        "id": "c42340eb39f6d4c9",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "",
        "group": "d42cba2fbf496d29",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1130,
        "y": 420,
        "wires": []
    },
    {
        "id": "32c7344a264318ff",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "648e040fbcc0a63e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gesamtspeicher",
        "format": "{{value}} MB",
        "layout": "row-spread",
        "className": "",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "cfce94819107376c",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "344253603e176b93",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 1410,
        "y": 380,
        "wires": []
    },
    {
        "id": "8e8f9e4f11908432",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "alert",
        "info": "",
        "x": 1470,
        "y": 160,
        "wires": []
    },
    {
        "id": "d6cde956d86d9c40",
        "type": "Drives",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "8803e0f044ab2548"
            ]
        ]
    },
    {
        "id": "8803e0f044ab2548",
        "type": "function",
        "z": "33556e98e7501abf",
        "name": "",
        "func": "msg.payload = msg.payload;\n\nlet count_size = 0;\nlet count_used = 0;\nfor (const item of msg.payload) {\n    count_used = count_used + item.used;\n    count_size = count_size + item.size;\n}\n\ncount_size = count_size / 1000 / 1000;\ncount_used = count_used / 1000 / 1000;\n\n//msg.payload = `${count_size.toFixed(2)} ${count_used.toFixed(2)}`;\nmsg.payload = count_used.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 720,
        "wires": [
            [
                "4d2b18d4a1f193e1",
                "e08277d531e3753c"
            ]
        ]
    },
    {
        "id": "4d2b18d4a1f193e1",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 640,
        "wires": []
    },
    {
        "id": "e08277d531e3753c",
        "type": "ui_gauge",
        "z": "33556e98e7501abf",
        "name": "SD Speicher",
        "group": "8536a9c0ef59e1eb",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "GB",
        "format": "{{value}}",
        "min": 0,
        "max": "32",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "26",
        "className": "",
        "x": 850,
        "y": 720,
        "wires": []
    },
    {
        "id": "b9766971cb5b2204",
        "type": "NetworkIntf",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 450,
        "y": 800,
        "wires": [
            [
                "f1a90f4e685dd2c5"
            ]
        ]
    },
    {
        "id": "fa40dbe59e42ef2a",
        "type": "Loadavg",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 460,
        "y": 880,
        "wires": [
            [
                "68db02adaa051cf0"
            ]
        ]
    },
    {
        "id": "70fa7dbcfe17e81d",
        "type": "Uptime",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 320,
        "y": 840,
        "wires": [
            [
                "689a5283ac74452b"
            ]
        ]
    },
    {
        "id": "926b647a567b1d19",
        "type": "OS",
        "z": "33556e98e7501abf",
        "name": "",
        "x": 210,
        "y": 740,
        "wires": [
            [
                "3bf0dd3858817ed2"
            ]
        ]
    },
    {
        "id": "3bf0dd3858817ed2",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 130,
        "y": 640,
        "wires": []
    },
    {
        "id": "f1a90f4e685dd2c5",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 800,
        "wires": []
    },
    {
        "id": "689a5283ac74452b",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 840,
        "wires": []
    },
    {
        "id": "68db02adaa051cf0",
        "type": "debug",
        "z": "33556e98e7501abf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 900,
        "wires": []
    },
    {
        "id": "82e2a10109da5f45",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Raspberry Pi",
        "info": "",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "fdc7d4b16a4c7a50",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Hello",
        "info": "",
        "x": 1130,
        "y": 240,
        "wires": []
    },
    {
        "id": "23c6cf621a3fb2ad",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Raspberry Pi",
        "info": "",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "c183f09ebc2e7643",
        "type": "comment",
        "z": "33556e98e7501abf",
        "name": "Hello",
        "info": "",
        "x": 1130,
        "y": 460,
        "wires": []
    },
    {
        "id": "8a3add683ac180cf",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "d77c24919d5307b6",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Temperatur",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1290,
        "y": 240,
        "wires": []
    },
    {
        "id": "abf38470515d8e9f",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "d77c24919d5307b6",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Auslastung",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1290,
        "y": 460,
        "wires": []
    },
    {
        "id": "a043481757816d71",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "8536a9c0ef59e1eb",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "RAM",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "c5b58f703a9a420d",
        "type": "ui_text",
        "z": "33556e98e7501abf",
        "group": "8536a9c0ef59e1eb",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "SDCard",
        "format": "",
        "layout": "col-center",
        "className": "",
        "x": 840,
        "y": 680,
        "wires": []
    },
    {
        "id": "d91bbe1bce4be9ed",
        "type": "mqtt out",
        "z": "33556e98e7501abf",
        "name": "",
        "topic": "/interval/raspi421/system/",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 410,
        "y": 200,
        "wires": []
    },
    {
        "id": "d0b0a5aa745ff5f0",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo iwconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 220,
        "wires": [
            [
                "6e169b816f9649b1",
                "f6cf14bfdf23e79e",
                "d9277784c62dabf3",
                "480bc7d3d7d38360"
            ],
            [],
            []
        ]
    },
    {
        "id": "76b2951b6faa4974",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "5min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "d0b0a5aa745ff5f0",
                "778d3643f976ddd0"
            ]
        ]
    },
    {
        "id": "6e169b816f9649b1",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "let wlan = msg.payload.search(\"guteswetter\");\nlet result = 0;\nif(wlan >= 0) {\n    result = 1;\n}\n\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737.1041870117188,
        "y": 220.7777099609375,
        "wires": [
            []
        ]
    },
    {
        "id": "f6cf14bfdf23e79e",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "const path = msg.payload.split(\"\\n\");\n\nlet level = 0;\nlevel = path[6];\n\nlevel = level.trim();\n\nlet start = level.search(\"Signal level\");\nstart = start + 14;\nlet end = 2;\n//let end = level.length - 14;\n\nlevel = level.substr(start, end);\nlet level_text = `-${level}`;\n\nmsg.payload = parseInt(level);\nmsg.topic = level_text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737.1041870117188,
        "y": 260.7777099609375,
        "wires": [
            [
                "59c0ea0f48799daa",
                "cdc8195b63a5ee3e"
            ]
        ]
    },
    {
        "id": "59c0ea0f48799daa",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 907.1041870117188,
        "y": 180.7777099609375,
        "wires": []
    },
    {
        "id": "2f14df800b8d0cd6",
        "type": "comment",
        "z": "7cb59b2960a193b9",
        "name": "WLAN",
        "info": "",
        "x": 187.10418701171875,
        "y": 160.7777099609375,
        "wires": []
    },
    {
        "id": "cdc8195b63a5ee3e",
        "type": "ui_gauge",
        "z": "7cb59b2960a193b9",
        "name": "gauge_signal_level",
        "group": "3e0b974a4b41a619",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "-dBm",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "className": "",
        "x": 1207.1041870117188,
        "y": 240.7777099609375,
        "wires": []
    },
    {
        "id": "d9277784c62dabf3",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "const path = msg.payload.split(\"\\n\");\n\nlet bitrate = 0;\nbitrate = path[2];\n\nbitrate = bitrate.trim();\n\nlet start = bitrate.search(\"Bit Rate\");\nstart = start;\nlet end = 4;\n//let end = level.length - 14;\n\nbitrate = bitrate.substr(9, end);\n\nmsg.payload = parseInt(bitrate);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737.1041870117188,
        "y": 300.7777099609375,
        "wires": [
            [
                "e658a0f9b6f5fd80",
                "5e139f7e05f9a30f"
            ]
        ]
    },
    {
        "id": "e658a0f9b6f5fd80",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "5e139f7e05f9a30f",
        "type": "ui_gauge",
        "z": "7cb59b2960a193b9",
        "name": "gauge_bitrate",
        "group": "3e0b974a4b41a619",
        "order": 4,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "Mb/s",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1197.1041870117188,
        "y": 360.7777099609375,
        "wires": []
    },
    {
        "id": "0449a507ee37754e",
        "type": "ui_text",
        "z": "7cb59b2960a193b9",
        "group": "3e0b974a4b41a619",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Signal level",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1187.1041870117188,
        "y": 200.7777099609375,
        "wires": []
    },
    {
        "id": "da294bf7f0741ef9",
        "type": "ui_text",
        "z": "7cb59b2960a193b9",
        "group": "3e0b974a4b41a619",
        "order": 2,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "bitrate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1167.1041870117188,
        "y": 320.7777099609375,
        "wires": []
    },
    {
        "id": "480bc7d3d7d38360",
        "type": "function",
        "z": "7cb59b2960a193b9",
        "name": "",
        "func": "const path = msg.payload.split(\"\\n\");\n\nlet bitrate = 0;\nbitrate = path[2];\n/*\nbitrate = bitrate.trim();\n\nlet start = bitrate.search(\"Bit Rate\");\nstart = start;\nlet end = 14;\n//let end = level.length - 14;\n*/\n\n//bitrate = bitrate.substr(9, end);\n\nmsg.payload = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 754.8958129882812,
        "y": 429.8888854980469,
        "wires": [
            [
                "59f41cf961927afc"
            ]
        ]
    },
    {
        "id": "59f41cf961927afc",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 480,
        "wires": []
    },
    {
        "id": "a3e717f32990a62f",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "c182fcc14bf2f722"
            ]
        ]
    },
    {
        "id": "c182fcc14bf2f722",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo ls -l /var/log/dpkg.log*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 680,
        "wires": [
            [
                "cd012cfda772cdb1"
            ],
            [],
            []
        ]
    },
    {
        "id": "cd012cfda772cdb1",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 680,
        "wires": []
    },
    {
        "id": "c3caafb0dcfec294",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/dpkg.log.1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 740,
        "wires": [
            [
                "827d5bb6fe5dbc85"
            ],
            [],
            []
        ]
    },
    {
        "id": "8c67a3b3d379a4f3",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "c3caafb0dcfec294"
            ]
        ]
    },
    {
        "id": "827d5bb6fe5dbc85",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 800,
        "wires": []
    },
    {
        "id": "a9d0066dc2260185",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 900,
        "wires": [
            [
                "9eab52a830803025"
            ]
        ]
    },
    {
        "id": "9eab52a830803025",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo apt update",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 900,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "54d8b78c3c6b35c0",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 540,
        "wires": [
            [
                "7f438531472e4668"
            ]
        ]
    },
    {
        "id": "7f438531472e4668",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo ls /var/log*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 560,
        "wires": [
            [
                "5f2fe0eca99f751c"
            ],
            [],
            []
        ]
    },
    {
        "id": "5f2fe0eca99f751c",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "dc9dc1ef5ec117d8",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/user.log.1*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 1040,
        "wires": [
            [
                "04ba9fd91b036e77"
            ],
            [],
            []
        ]
    },
    {
        "id": "04ba9fd91b036e77",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4799413372973e35",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1040,
        "wires": [
            [
                "dc9dc1ef5ec117d8"
            ]
        ]
    },
    {
        "id": "98fb41aa9161bae0",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1120,
        "wires": [
            [
                "5be62e37d864ffcd"
            ]
        ]
    },
    {
        "id": "5be62e37d864ffcd",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/boot.log.1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 500,
        "y": 1120,
        "wires": [
            [
                "d0cee11a04ad1644"
            ],
            [],
            []
        ]
    },
    {
        "id": "d0cee11a04ad1644",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8f7247081c7fcfa5",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1220,
        "wires": [
            [
                "1e4ad9c673d71c1c"
            ]
        ]
    },
    {
        "id": "1e4ad9c673d71c1c",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/daemon.log.1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "1e43fdcc3e14b5ab"
            ],
            [],
            []
        ]
    },
    {
        "id": "1e43fdcc3e14b5ab",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1200,
        "wires": []
    },
    {
        "id": "4c9230c91b6ee6a1",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1320,
        "wires": [
            [
                "03a689ba1f938e9f"
            ]
        ]
    },
    {
        "id": "03a689ba1f938e9f",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo less /var/log/debug",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 1320,
        "wires": [
            [
                "10ff44aaec572302"
            ],
            [],
            []
        ]
    },
    {
        "id": "10ff44aaec572302",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b22fdeeec016733e",
        "type": "inject",
        "z": "7cb59b2960a193b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 600,
        "wires": [
            [
                "b16fe0cb10d792e5"
            ]
        ]
    },
    {
        "id": "b16fe0cb10d792e5",
        "type": "exec",
        "z": "7cb59b2960a193b9",
        "command": "sudo ls /var/log/mysql/",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "8b66cc94589f2f67"
            ],
            [],
            []
        ]
    },
    {
        "id": "8b66cc94589f2f67",
        "type": "debug",
        "z": "7cb59b2960a193b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "778d3643f976ddd0",
        "type": "mqtt out",
        "z": "7cb59b2960a193b9",
        "name": "",
        "topic": "/interval/raspi421/wlan",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 400,
        "y": 160,
        "wires": []
    },
    {
        "id": "3cb05d7ca5c73091",
        "type": "ui_text",
        "z": "684857be1acaed25",
        "group": "62de86d112dd1796",
        "order": 1,
        "width": "1",
        "height": "1",
        "name": "icon battery-half ht1",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 310,
        "y": 200,
        "wires": []
    },
    {
        "id": "1c2b1ca9a020827b",
        "type": "ui_text",
        "z": "684857be1acaed25",
        "group": "62de86d112dd1796",
        "order": 4,
        "width": "1",
        "height": "1",
        "name": "icon battery-half ht2",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 310,
        "y": 260,
        "wires": []
    },
    {
        "id": "9be6895b7b74d851",
        "type": "ui_text",
        "z": "684857be1acaed25",
        "group": "62de86d112dd1796",
        "order": 7,
        "width": "1",
        "height": "1",
        "name": "icon battery-half na1",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 320,
        "y": 320,
        "wires": []
    },
    {
        "id": "4983a072c93c3fdc",
        "type": "aedes broker",
        "z": "4d6542c2a87f4380",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "7f89c7d4cdd4784a"
            ],
            []
        ]
    },
    {
        "id": "c0090cd98f35aa7b",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "Broker / Server",
        "info": "",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "b16d6369307ce61c",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "2b5ce76ecbde3793",
                "1980f960c21f47b4",
                "d515e362ccf713f5"
            ]
        ]
    },
    {
        "id": "60bfac4f931bcae2",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "View MQTT",
        "info": "",
        "x": 1430,
        "y": 740,
        "wires": []
    },
    {
        "id": "3f2d18c5d6d35607",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "9cbad506a0556217",
        "order": 2,
        "width": 6,
        "height": 4,
        "name": "lastInfos",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1840,
        "y": 360,
        "wires": []
    },
    {
        "id": "8bfde98df3e35425",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "View: hidden",
        "info": "",
        "x": 1850,
        "y": 280,
        "wires": []
    },
    {
        "id": "2b5ce76ecbde3793",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "f1d72755676129fa",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "467f575f43c6f21a",
                "0cab357455718e10"
            ]
        ]
    },
    {
        "id": "467f575f43c6f21a",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e2b17ccff04e174d",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "raspi422/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 940,
        "wires": [
            [
                "3a8ecf7af3024650"
            ]
        ]
    },
    {
        "id": "0856840dacb90bc7",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "7a46f64b14b0e509",
        "order": 1,
        "width": "6",
        "height": "5",
        "name": "raspi421",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1420,
        "y": 860,
        "wires": []
    },
    {
        "id": "d198eeb4dad2ba81",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "ff7539c4741377b4",
        "order": 1,
        "width": "6",
        "height": "5",
        "name": "raspi422",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1420,
        "y": 940,
        "wires": []
    },
    {
        "id": "1980f960c21f47b4",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "INSERT INTO `msg` ...",
        "func": "// GET VARIABLEN\nlet payloadOpject = flow.get('payloadObject') || 0;\npayloadObject = msg.payload;\nlet payloadObjectLenght = msg.payload.length;\n\nlet payloadValue = msg.payload;\nlet payloadTopic = msg.topic;\nlet payloadId = msg._msgid;\n\nlet sql = \"\";\nif(payloadTopic.substring(0, 1) !== \"$\") {\n    sql = \"INSERT INTO `msg` (`msg_topic`, `msg_payload`) VALUE ('\" + payloadTopic + \"', '\" + payloadValue + \"')\";\n}\n\nmsg.topic = sql;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "6551306139d8bb5b",
                "dacf3af2044d049b"
            ]
        ]
    },
    {
        "id": "6551306139d8bb5b",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "dacf3af2044d049b",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 830,
        "y": 320,
        "wires": [
            [
                "d35270220e4e057b",
                "bb1d7691e11f4f54"
            ]
        ]
    },
    {
        "id": "d35270220e4e057b",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "7163c158cf1fac2d",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'raspi421/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 860,
        "wires": [
            [
                "9ab3fb255a44b12f"
            ]
        ]
    },
    {
        "id": "9ab3fb255a44b12f",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1030,
        "y": 860,
        "wires": [
            [
                "fc9fa50b109b657c",
                "616c432959aa55dc"
            ]
        ]
    },
    {
        "id": "6a97b45963a3ca56",
        "type": "inject",
        "z": "4d6542c2a87f4380",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "7163c158cf1fac2d",
                "db6a415d65ff19d9",
                "e3fd98d77a2eeea0",
                "337084a860b1beeb"
            ]
        ]
    },
    {
        "id": "fc9fa50b109b657c",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 700,
        "wires": []
    },
    {
        "id": "616c432959aa55dc",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 860,
        "wires": [
            [
                "0c76ffe2ad0a860b",
                "0856840dacb90bc7"
            ]
        ]
    },
    {
        "id": "0c76ffe2ad0a860b",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 800,
        "wires": []
    },
    {
        "id": "fbd23bdcaebd1c1a",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 860,
        "wires": [
            [
                "7163c158cf1fac2d"
            ]
        ]
    },
    {
        "id": "1440527318e752e4",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "raspi421/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 860,
        "wires": [
            [
                "fbd23bdcaebd1c1a"
            ]
        ]
    },
    {
        "id": "3a8ecf7af3024650",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 520,
        "y": 940,
        "wires": [
            [
                "db6a415d65ff19d9"
            ]
        ]
    },
    {
        "id": "db6a415d65ff19d9",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'raspi422/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 940,
        "wires": [
            [
                "4a6baafec8246f15"
            ]
        ]
    },
    {
        "id": "4a6baafec8246f15",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1030,
        "y": 940,
        "wires": [
            [
                "852d48cafbfc2556"
            ]
        ]
    },
    {
        "id": "852d48cafbfc2556",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 940,
        "wires": [
            [
                "d198eeb4dad2ba81"
            ]
        ]
    },
    {
        "id": "e3fd98d77a2eeea0",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'shellies/shellyht-702F79/sensor/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1080,
        "wires": [
            [
                "cf38df6cc83a2bc3"
            ]
        ]
    },
    {
        "id": "cf38df6cc83a2bc3",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1070,
        "y": 1080,
        "wires": [
            [
                "792616d30e4880cc"
            ]
        ]
    },
    {
        "id": "792616d30e4880cc",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1080,
        "wires": [
            [
                "831a07b0dbaecb62"
            ]
        ]
    },
    {
        "id": "831a07b0dbaecb62",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "b1c36b7a6381af37",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "shellyht-702F79",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1480,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c8bc3852f0434f62",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1200,
        "wires": [
            [
                "547304bc513fcc44"
            ]
        ]
    },
    {
        "id": "337084a860b1beeb",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE 'shellies/shellyht-706823/sensor/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1200,
        "wires": [
            [
                "09c4023d9292a3e9"
            ]
        ]
    },
    {
        "id": "09c4023d9292a3e9",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1070,
        "y": 1200,
        "wires": [
            [
                "cf10b4a099532aa6"
            ]
        ]
    },
    {
        "id": "cf10b4a099532aa6",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}<br>Payload: ${item.msg_payload}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1200,
        "wires": [
            [
                "b4358cb234ec727c",
                "2e11c6155bcde14e"
            ]
        ]
    },
    {
        "id": "b4358cb234ec727c",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "ea6c1a70d4e77a46",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "shellyht-706823",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1480,
        "y": 1200,
        "wires": []
    },
    {
        "id": "2e11c6155bcde14e",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7a6911f52316ad8a",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "/cron/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1480,
        "wires": [
            [
                "822e90f1857fe98b",
                "af26ec5a89547f28"
            ]
        ]
    },
    {
        "id": "822e90f1857fe98b",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1480,
        "wires": [
            [
                "0b45f22a5477a0e8"
            ]
        ]
    },
    {
        "id": "0b45f22a5477a0e8",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 10\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1480,
        "wires": [
            [
                "ed58d5d98ff3a6bc"
            ]
        ]
    },
    {
        "id": "ed58d5d98ff3a6bc",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 970,
        "y": 1480,
        "wires": [
            [
                "2468150643ffffee"
            ]
        ]
    },
    {
        "id": "2468150643ffffee",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1480,
        "wires": [
            [
                "26d2c55207fb1ff8"
            ]
        ]
    },
    {
        "id": "26d2c55207fb1ff8",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "8a88272d4f9a7f41",
        "order": 1,
        "width": "6",
        "height": "12",
        "name": "/cron/#",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1370,
        "y": 1480,
        "wires": []
    },
    {
        "id": "547304bc513fcc44",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 1200,
        "wires": [
            [
                "337084a860b1beeb"
            ]
        ]
    },
    {
        "id": "0cab357455718e10",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 1080,
        "wires": [
            [
                "e3fd98d77a2eeea0"
            ]
        ]
    },
    {
        "id": "7f89c7d4cdd4784a",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 80,
        "wires": []
    },
    {
        "id": "b6b4cba2a3f81863",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "596ee92aa0162208",
                "85ea94ade6abc6b9"
            ]
        ]
    },
    {
        "id": "bb1d7691e11f4f54",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1020,
        "y": 320,
        "wires": [
            [
                "b6b4cba2a3f81863"
            ]
        ]
    },
    {
        "id": "596ee92aa0162208",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 320,
        "wires": []
    },
    {
        "id": "85ea94ade6abc6b9",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 1490,
        "y": 360,
        "wires": [
            [
                "e439f46fa53fb9b4"
            ]
        ]
    },
    {
        "id": "e439f46fa53fb9b4",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 360,
        "wires": [
            [
                "5c0336615960f523",
                "3f2d18c5d6d35607"
            ]
        ]
    },
    {
        "id": "5c0336615960f523",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 320,
        "wires": []
    },
    {
        "id": "d515e362ccf713f5",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 420,
        "wires": [
            [
                "47570a80b5f3ee97",
                "54087f11680734b2"
            ]
        ]
    },
    {
        "id": "0e533268e77def8b",
        "type": "inject",
        "z": "4d6542c2a87f4380",
        "name": "5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 480,
        "wires": [
            [
                "ee4b17bff9cf6ca4"
            ]
        ]
    },
    {
        "id": "ee4b17bff9cf6ca4",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "47570a80b5f3ee97",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 420,
        "wires": [
            [
                "2b41517f54c13dd6"
            ]
        ]
    },
    {
        "id": "2d61880e166b1bb4",
        "type": "mqtt out",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "check",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 310,
        "y": 580,
        "wires": []
    },
    {
        "id": "24fa8a94e5c4e55f",
        "type": "ui_button",
        "z": "4d6542c2a87f4380",
        "name": "",
        "group": "9cbad506a0556217",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Check MQTT",
        "tooltip": "",
        "color": "#333333",
        "bgcolor": "#999",
        "className": "",
        "icon": "",
        "payload": "Check",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "2d61880e166b1bb4"
            ]
        ]
    },
    {
        "id": "54087f11680734b2",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 810,
        "y": 460,
        "wires": [
            [
                "1085d3e4c02fece7"
            ]
        ]
    },
    {
        "id": "1085d3e4c02fece7",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 460,
        "wires": [
            [
                "d2cb9c1f8efff6ab"
            ]
        ]
    },
    {
        "id": "07c2ec69b26233da",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "Subscriping / Client",
        "info": "",
        "x": 370,
        "y": 240,
        "wires": []
    },
    {
        "id": "d2cb9c1f8efff6ab",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 460,
        "wires": [
            [
                "2b41517f54c13dd6"
            ]
        ]
    },
    {
        "id": "e33fef7023956a64",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Chart",
        "info": "",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "898742fc831d723e",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "/interval/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 1700,
        "wires": [
            [
                "aff88d83b2d2ce03",
                "36da0476c8314f82"
            ]
        ]
    },
    {
        "id": "aff88d83b2d2ce03",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1700,
        "wires": [
            [
                "aa2cbd266786ef5b"
            ]
        ]
    },
    {
        "id": "aa2cbd266786ef5b",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/interval/%' ORDER BY updated desc LIMIT 0, 10\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1700,
        "wires": [
            [
                "3d84384e9cdca7e2"
            ]
        ]
    },
    {
        "id": "3d84384e9cdca7e2",
        "type": "mysql",
        "z": "4d6542c2a87f4380",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 970,
        "y": 1700,
        "wires": [
            [
                "7c2b570cfce36230"
            ]
        ]
    },
    {
        "id": "7c2b570cfce36230",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "",
        "func": "let list = msg.payload;\nlet content = ``;\n\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\nlet i = 0;\nfor(const item of list) {\n    content = `${content}${fctDate(item.updated)}<br>`;\n    content = `${content}Topic: ${item.msg_topic}`;\n    content = `${content}<br><br>`;\n}\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1700,
        "wires": [
            [
                "1d5ef38057ade03f"
            ]
        ]
    },
    {
        "id": "1d5ef38057ade03f",
        "type": "ui_text",
        "z": "4d6542c2a87f4380",
        "group": "410f9b2957796f10",
        "order": 1,
        "width": "6",
        "height": "12",
        "name": "/interval/#",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 1360,
        "y": 1700,
        "wires": []
    },
    {
        "id": "0cbf10aae05ee31a",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Cronjob",
        "info": "",
        "x": 260,
        "y": 1440,
        "wires": []
    },
    {
        "id": "af26ec5a89547f28",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "3cbaeb75be6c5db1",
                "10489877c638f41d"
            ]
        ]
    },
    {
        "id": "3cbaeb75be6c5db1",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1540,
        "wires": [
            [
                "869ff93da14b2b10"
            ]
        ]
    },
    {
        "id": "10489877c638f41d",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 670,
        "y": 1580,
        "wires": [
            [
                "ffaabb35443f583d"
            ]
        ]
    },
    {
        "id": "ffaabb35443f583d",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1580,
        "wires": [
            [
                "71f1206a7ecc6193"
            ]
        ]
    },
    {
        "id": "71f1206a7ecc6193",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1580,
        "wires": [
            [
                "869ff93da14b2b10"
            ]
        ]
    },
    {
        "id": "36da0476c8314f82",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1760,
        "wires": [
            [
                "417ce2e1429d1c2f",
                "1aa77eab7feedbcb"
            ]
        ]
    },
    {
        "id": "417ce2e1429d1c2f",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1760,
        "wires": [
            [
                "8d3e7337d047fecd"
            ]
        ]
    },
    {
        "id": "1aa77eab7feedbcb",
        "type": "delay",
        "z": "4d6542c2a87f4380",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 670,
        "y": 1800,
        "wires": [
            [
                "bfe6821892972a27"
            ]
        ]
    },
    {
        "id": "bfe6821892972a27",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "msg.payload = 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1800,
        "wires": [
            [
                "40bce2713beabf94"
            ]
        ]
    },
    {
        "id": "40bce2713beabf94",
        "type": "function",
        "z": "4d6542c2a87f4380",
        "name": "result",
        "func": "let result = msg.payload;\nmsg.payload = result;\nmsg.topic = `check`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1800,
        "wires": [
            [
                "8d3e7337d047fecd"
            ]
        ]
    },
    {
        "id": "09d3bf0f8522f04d",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Interval Chart",
        "info": "",
        "x": 270,
        "y": 1660,
        "wires": []
    },
    {
        "id": "2b41517f54c13dd6",
        "type": "ui_chart",
        "z": "4d6542c2a87f4380",
        "name": "chart MQTT",
        "group": "fd5052c6399ba750",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "Texr",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#079dcf",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1359.8958740234375,
        "y": 421.8888854980469,
        "wires": [
            []
        ]
    },
    {
        "id": "8d3e7337d047fecd",
        "type": "ui_chart",
        "z": "4d6542c2a87f4380",
        "name": "chart Interval",
        "group": "d591bbb615b4fe18",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "Texr",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#079dcf",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1365.8958740234375,
        "y": 1760.111083984375,
        "wires": [
            []
        ]
    },
    {
        "id": "869ff93da14b2b10",
        "type": "ui_chart",
        "z": "4d6542c2a87f4380",
        "name": "chart Cronjob",
        "group": "c91c3efabc859b5b",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "Texr",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#079dcf",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "074b43f248d1cab6",
        "type": "debug",
        "z": "4d6542c2a87f4380",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 1960,
        "wires": []
    },
    {
        "id": "0d770dd5ced42df2",
        "type": "mqtt in",
        "z": "4d6542c2a87f4380",
        "name": "",
        "topic": "/cron/+/success",
        "qos": "2",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 1960,
        "wires": [
            [
                "074b43f248d1cab6"
            ]
        ]
    },
    {
        "id": "63f57ff9baace94d",
        "type": "comment",
        "z": "4d6542c2a87f4380",
        "name": "MQTT Cronjob Success",
        "info": "",
        "x": 280,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9a4708663dafeaa3",
        "type": "inject",
        "z": "5ede7465224a02eb",
        "name": "10 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "287a1ea66d95c2c7",
                "3780e1bc0d971f35",
                "7d63ec63f87e4a69"
            ]
        ]
    },
    {
        "id": "34f46addedbd3305",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/cpu_temp",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "b46e74bf1c377b22",
        "type": "comment",
        "z": "5ede7465224a02eb",
        "name": "Publishing / Client",
        "info": "",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "287a1ea66d95c2c7",
        "type": "cpu",
        "z": "5ede7465224a02eb",
        "name": "",
        "msgCore": true,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": true,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "cbb315ac2483b026"
            ]
        ]
    },
    {
        "id": "cbb315ac2483b026",
        "type": "switch",
        "z": "5ede7465224a02eb",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temperature",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "overall",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "34f46addedbd3305"
            ],
            [
                "327b58207a35d790"
            ]
        ]
    },
    {
        "id": "327b58207a35d790",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/cpu_workload",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1070,
        "y": 240,
        "wires": []
    },
    {
        "id": "3780e1bc0d971f35",
        "type": "Memory",
        "z": "5ede7465224a02eb",
        "name": "mem",
        "scale": "Byte",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "748641b2eaa9af38"
            ]
        ]
    },
    {
        "id": "748641b2eaa9af38",
        "type": "function",
        "z": "5ede7465224a02eb",
        "name": "memusage",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "29071382b9740d10"
            ]
        ]
    },
    {
        "id": "29071382b9740d10",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "raspi421/memusage",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1060,
        "y": 320,
        "wires": []
    },
    {
        "id": "5b06de80608f8113",
        "type": "comment",
        "z": "5ede7465224a02eb",
        "name": "Request",
        "info": "",
        "x": 380,
        "y": 220,
        "wires": []
    },
    {
        "id": "7d63ec63f87e4a69",
        "type": "mqtt out",
        "z": "5ede7465224a02eb",
        "name": "",
        "topic": "/interval/raspi421/system/",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "8f90f846ba1b5d96",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "e6b41a712a5cd8c1",
                "fab62ff9bfceb810"
            ]
        ]
    },
    {
        "id": "5c0489c09ab45987",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "Subscriping / Client",
        "info": "",
        "x": 470,
        "y": 100,
        "wires": []
    },
    {
        "id": "9d242ae5d2f82771",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "fa9cadd0bcacdec6",
                "6c28125c0707ebad"
            ]
        ]
    },
    {
        "id": "fbc81dc17699807e",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "8cfc9c3c4633b1ab",
                "c3115a085f02f184"
            ]
        ]
    },
    {
        "id": "c4e2fc57fe38410f",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "e838a2703f711576",
                "72e13f9c3d2c7cff"
            ]
        ]
    },
    {
        "id": "e6b41a712a5cd8c1",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "95082877e495bc4d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "50",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8cfc9c3c4633b1ab",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "4fb2731161c030c4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fa9cadd0bcacdec6",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "95082877e495bc4d",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "10",
        "ymax": "50",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e838a2703f711576",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "4fb2731161c030c4",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b7de483894bdc19d",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi421/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "d17d0c5fb6a4aadd",
                "b6ee285a685df77c"
            ]
        ]
    },
    {
        "id": "adceaed30f7d69aa",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi422/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 660,
        "wires": [
            [
                "aad49b282797489c",
                "1b1ba23637d451cf"
            ]
        ]
    },
    {
        "id": "d17d0c5fb6a4aadd",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "7a1fd158c2b52cdd",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "aad49b282797489c",
        "type": "ui_chart",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "group": "7a1fd158c2b52cdd",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "18",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "e56cfeb3afc6556b",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/cpu_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "dff1076054031ec0"
            ]
        ]
    },
    {
        "id": "dff1076054031ec0",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "ba7b0debdac47663",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/cpu_workload",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 500,
        "wires": [
            [
                "93a3a2163ae9c3b7"
            ]
        ]
    },
    {
        "id": "93a3a2163ae9c3b7",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 500,
        "wires": []
    },
    {
        "id": "42b78bb9c985b481",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "CPU Temperatur",
        "info": "",
        "x": 260,
        "y": 160,
        "wires": []
    },
    {
        "id": "9830416d71c79a07",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "CPU Auslastung",
        "info": "",
        "x": 260,
        "y": 380,
        "wires": []
    },
    {
        "id": "def029ac22388b6c",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "RAM Auslastung",
        "info": "",
        "x": 260,
        "y": 600,
        "wires": []
    },
    {
        "id": "d264d61f3e87a567",
        "type": "mqtt in",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "topic": "raspi481/memusage",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 720,
        "wires": [
            [
                "3365407b33ec14ca"
            ]
        ]
    },
    {
        "id": "3365407b33ec14ca",
        "type": "debug",
        "z": "c19ab6e0657fcd70",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 720,
        "wires": []
    },
    {
        "id": "94cf2a3007d316ef",
        "type": "comment",
        "z": "c19ab6e0657fcd70",
        "name": "View",
        "info": "",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "fab62ff9bfceb810",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "95082877e495bc4d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "6c28125c0707ebad",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "95082877e495bc4d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "c3115a085f02f184",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "4fb2731161c030c4",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 340,
        "wires": []
    },
    {
        "id": "72e13f9c3d2c7cff",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "4fb2731161c030c4",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 420,
        "wires": []
    },
    {
        "id": "b6ee285a685df77c",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "7a1fd158c2b52cdd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi421",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "1b1ba23637d451cf",
        "type": "ui_text",
        "z": "c19ab6e0657fcd70",
        "group": "7a1fd158c2b52cdd",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "raspi422",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 620,
        "wires": []
    },
    {
        "id": "1d630b4a6ec0a643",
        "type": "get stations data",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "deviceId": "70:ee:50:90:a5:54",
        "getFavorites": false,
        "creds": "3c6081d5f03c98c7",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "1accf48ea9087368",
                "3e3e7c356b590d3c",
                "27052b13c8878dd9",
                "4a9a62763bd98cb6",
                "cb6895633ae6257f",
                "0914999b7238a63d",
                "2d4a97cd4268eb50"
            ]
        ]
    },
    {
        "id": "3e3e7c356b590d3c",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "INSERT INTO `sensor_data` ",
        "func": "\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `co`, `db`) VALUE ('3', '\" + msg.payload.devices[0].dashboard_data.Temperature.toFixed(2) + \"', '\" + msg.payload.devices[0].dashboard_data.Humidity.toFixed(2) + \"', '\" + msg.payload.devices[0].dashboard_data.CO2 + \"', '\" + msg.payload.devices[0].dashboard_data.Noise + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 440,
        "wires": [
            [
                "16ad3e98d377eb43"
            ]
        ]
    },
    {
        "id": "16ad3e98d377eb43",
        "type": "mysql",
        "z": "0e78e9a296f09ffb",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 930,
        "y": 440,
        "wires": [
            [
                "99818b8228e4e27d"
            ]
        ]
    },
    {
        "id": "27052b13c8878dd9",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "INSERT INTO `sensor_data` ",
        "func": "\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `battery`) VALUE ('4', '\" + msg.payload.devices[0].modules[0].dashboard_data.Temperature.toFixed(2) + \"', '\" + msg.payload.devices[0].modules[0].dashboard_data.Humidity.toFixed(2) + \"', '\" + msg.payload.devices[0].modules[0].battery_percent + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "e603c702d787dbcc"
            ]
        ]
    },
    {
        "id": "e603c702d787dbcc",
        "type": "mysql",
        "z": "0e78e9a296f09ffb",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 930,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2344c69d592e9867",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "Netatmo Indoor",
        "info": "",
        "x": 620,
        "y": 400,
        "wires": []
    },
    {
        "id": "549169bc39dd8096",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "Netatmo Outdoor",
        "info": "",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "1accf48ea9087368",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "235e59cb35ddfda2",
        "type": "mqtt out",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "topic": "/interval/sensor/na",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 390,
        "y": 80,
        "wires": []
    },
    {
        "id": "a4150da1efb05c64",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "Request",
        "info": "",
        "x": 360,
        "y": 160,
        "wires": []
    },
    {
        "id": "4a9a62763bd98cb6",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "na_outdoor_temp",
        "func": "// GET VARIABLEN\nlet na_outdoor_temp = global.get('na_outdoor_temp') || 0;\n\n// FUNKTION\nna_outdoor_temp = msg.payload.devices[0].modules[0].dashboard_data.Temperature.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_temp', na_outdoor_temp);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 300,
        "wires": [
            [
                "f2d7ef9e6e9d3cf0"
            ]
        ]
    },
    {
        "id": "1d3f84d2d64144bd",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "SET GLOBAL Outdoor",
        "info": "",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "cb6895633ae6257f",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "na_outdoor_hum",
        "func": "// GET VARIABLEN\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\n// FUNKTION\nna_outdoor_hum = msg.payload.devices[0].modules[0].dashboard_data.Humidity.toFixed(2);\n\n// SET VARIABLEN\nglobal.set('na_outdoor_hum', na_outdoor_hum);\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "16ca87e073272ca3"
            ]
        ]
    },
    {
        "id": "16ca87e073272ca3",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 340,
        "wires": []
    },
    {
        "id": "f2d7ef9e6e9d3cf0",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "99818b8228e4e27d",
        "type": "link out",
        "z": "0e78e9a296f09ffb",
        "name": "Netatmo Indoor Send",
        "mode": "link",
        "links": [
            "5b4fd0d4e9366baa"
        ],
        "x": 1170,
        "y": 440,
        "wires": [],
        "l": true
    },
    {
        "id": "3fd769f06203d236",
        "type": "comment",
        "z": "0e78e9a296f09ffb",
        "name": "Send to Float BÃ¼ro",
        "info": "",
        "x": 1160,
        "y": 400,
        "wires": []
    },
    {
        "id": "c0c6b547455803d1",
        "type": "inject",
        "z": "0e78e9a296f09ffb",
        "name": "10m",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "235e59cb35ddfda2",
                "1d630b4a6ec0a643"
            ]
        ]
    },
    {
        "id": "f611ce9af55ad4cd",
        "type": "inject",
        "z": "0e78e9a296f09ffb",
        "name": "init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "1d630b4a6ec0a643"
            ]
        ]
    },
    {
        "id": "4792c564101fc832",
        "type": "debug",
        "z": "0e78e9a296f09ffb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.devices[0].dashboard_data.Pressure",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 100,
        "wires": []
    },
    {
        "id": "0914999b7238a63d",
        "type": "ui_text",
        "z": "0e78e9a296f09ffb",
        "group": "88b6e76ae91da71a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text Pressure",
        "label": "Pressure",
        "format": "{{msg.payload.devices[0].dashboard_data.Pressure}}",
        "layout": "row-spread",
        "className": "",
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "5b33a385347e54fe",
        "type": "ui_chart",
        "z": "0e78e9a296f09ffb",
        "name": "chart Pressure",
        "group": "88b6e76ae91da71a",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "990",
        "ymax": "1030",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "2d4a97cd4268eb50",
        "type": "function",
        "z": "0e78e9a296f09ffb",
        "name": "pressure",
        "func": "// FLOW GET\nlet pressure = msg.payload.devices[0].dashboard_data.Pressure;\n\n// MSG\nmsg.topic = 'hPa';\nmsg.payload = pressure;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 40,
        "wires": [
            [
                "5b33a385347e54fe"
            ]
        ]
    },
    {
        "id": "d4be13239c90261b",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "room_id",
        "func": "// FLOW GET\nlet room_id = flow.get('room_id');\n\n// MSG\nmsg.payload = room_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 120,
        "wires": [
            [
                "446a6f4ea0ca522d"
            ]
        ]
    },
    {
        "id": "446a6f4ea0ca522d",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '\" + msg.payload + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 120,
        "wires": [
            [
                "e4963e57f2945c78"
            ]
        ]
    },
    {
        "id": "e4963e57f2945c78",
        "type": "mysql",
        "z": "5a3a9fd242ddfbf1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "86ba38d6a71db901"
            ]
        ]
    },
    {
        "id": "86ba38d6a71db901",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "Flow VARS room_settings",
        "func": "// FLOW GET && SET\nlet room_id = flow.get('room_id') || 1;\n\nlet min_temp = flow.get('min_temp') || 19;\nlet opt_temp = flow.get('opt_temp') || 21;\nlet max_temp = flow.get('max_temp') || 24;\n\nlet min_humidity = flow.get('min_humidity') || 40;\nlet max_humidity = flow.get('max_humidity') || 70;\n\nlet is_good_co2 = flow.get('is_good_co2') || 900;\nlet is_bad_co2 = flow.get('is_bad_co2') || 1400;\nlet is_alert_co2 = flow.get('is_alert_co2') || 1600;\n\nlet db_good = flow.get('db_good') || 40;\nlet db_bad = flow.get('db_bad') || 70;\n\n// SET\nmin_temp = msg.payload[0].min_temp;\nopt_temp = msg.payload[0].opt_temp;\nmax_temp = msg.payload[0].max_temp;\n\nmin_humidity = msg.payload[0].min_humidity;\nmax_humidity = msg.payload[0].max_humidity;\n\nis_good_co2 = msg.payload[0].is_good_co2;\nis_bad_co2 = msg.payload[0].is_bad_co2;\nis_alert_co2 = msg.payload[0].is_alert_co2;\n\ndb_good = msg.payload[0].db_good;\ndb_bad = msg.payload[0].db_bad;\n\n// FLOW SET\nflow.set('room_id', room_id);\n\nflow.set('min_temp', min_temp);\nflow.set('opt_temp', opt_temp);\nflow.set('max_temp', max_temp);\n\nflow.set('min_humidity', min_humidity);\nflow.set('max_humidity', max_humidity);\n\nflow.set('is_good_co2', is_good_co2);\nflow.set('is_bad_co2', is_bad_co2);\nflow.set('is_alert_co2', is_alert_co2);\n\nflow.set('db_good', db_good);\nflow.set('db_bad', db_bad);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e09e2a08b558b672",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "sensor_id",
        "func": "// FLOW GET\nlet sensor_id = flow.get('sensor_id');\n\n// MSG\nmsg.payload = sensor_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "950ee85f787c071d"
            ]
        ]
    },
    {
        "id": "950ee85f787c071d",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 180,
        "wires": [
            [
                "555784115ca742dd"
            ]
        ]
    },
    {
        "id": "555784115ca742dd",
        "type": "mysql",
        "z": "5a3a9fd242ddfbf1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1150,
        "y": 180,
        "wires": [
            [
                "9637c500c5f7b3e5"
            ]
        ]
    },
    {
        "id": "9637c500c5f7b3e5",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "Flow VARS sensor_data",
        "func": "// FLOW GET && SET\nlet sensor_id = flow.get('sensor_id') || 3;\n\nlet temp = flow.get('temp') || 0;\nlet humi = flow.get('humi') || 0;\nlet co = flow.get('co') || 0;\nlet db = flow.get('db') || 0;\nlet battery = flow.get('battery') || 100;\n\nlet updated = flow.get('updated') || 0;\n\n// SET\ntemp = msg.payload[0].temp;\nhumi = msg.payload[0].humi;\nco = msg.payload[0].co;\ndb = msg.payload[0].db;\nbattery = msg.payload[0].battery;\nupdated = msg.payload[0].updated;\n\n// FLOW SET\nflow.set('sensor_id', sensor_id);\n\nflow.set('temp', temp);\nflow.set('humi', humi);\nflow.set('co', co);\nflow.set('db', db);\nflow.set('battery', battery);\n\nflow.set('updated', updated);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ae2fbe6052e3b61a",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "SET Room & Sensor ID",
        "func": "// FLOW GET\nlet room_id = flow.get('room_id') || 1;\nlet sensor_id = flow.get('sensor_id') || 3;\n\n// SET\nroom_id = 1;\nsensor_id = 3;\n\n// FLOW SET\nflow.set('room_id', room_id);\nflow.set('sensor_id', sensor_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "d4be13239c90261b",
                "e09e2a08b558b672"
            ]
        ]
    },
    {
        "id": "cad36c5318b84ac7",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "Settings Temperatur",
        "info": "",
        "x": 370,
        "y": 360,
        "wires": []
    },
    {
        "id": "fd7ac4722a7671db",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\n// MSG\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 400,
        "wires": [
            [
                "aece63ac56058813",
                "fe7f3f70f47aacd5"
            ]
        ]
    },
    {
        "id": "37d17a09efc54d2f",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "max_temp",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp') || 24;\n\n// MSG\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "efbbc99fdea6958f",
                "868606088e1255c6"
            ]
        ]
    },
    {
        "id": "aece63ac56058813",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "b1a371df80305874",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 630,
        "y": 400,
        "wires": [
            [
                "5761d04b1c98ca7e",
                "fe7f3f70f47aacd5"
            ]
        ]
    },
    {
        "id": "efbbc99fdea6958f",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "b1a371df80305874",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 620,
        "y": 640,
        "wires": [
            [
                "43c5e50d8b2808f0",
                "868606088e1255c6"
            ]
        ]
    },
    {
        "id": "fe7f3f70f47aacd5",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "tempMin",
        "func": "msg.topic = `tempMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 460,
        "wires": [
            [
                "efbbc99fdea6958f"
            ]
        ]
    },
    {
        "id": "5761d04b1c98ca7e",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\nlet room_id = flow.get('room_id');\n\n// SET\nmin_temp = msg.payload;\n\n// FLOAT SET\nflow.set('min_temp', min_temp);\n\n// MSG\nmsg.payload = min_temp;\n\nmsg.topic = \"UPDATE `room_settings` SET `min_temp` = '\" + min_temp + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 400,
        "wires": [
            [
                "b7a5288453eeac85",
                "5bb24a760cda978a",
                "99d0cd5e2e2485a7",
                "7363bfcfbc77e748",
                "1c685dd973e85b0d"
            ]
        ]
    },
    {
        "id": "43c5e50d8b2808f0",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp');\nlet room_id = flow.get('room_id');\n\n// SET\nmax_temp = msg.payload;\n\n// FLOAT SET\nflow.set('max_temp', max_temp);\n\n// MSG\nmsg.payload = max_temp;\n\nmsg.topic = \"UPDATE `room_settings` SET `max_temp` = '\" + max_temp + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 640,
        "wires": [
            [
                "b7a5288453eeac85",
                "5bb24a760cda978a",
                "99d0cd5e2e2485a7",
                "7363bfcfbc77e748",
                "1c685dd973e85b0d"
            ]
        ]
    },
    {
        "id": "b7a5288453eeac85",
        "type": "mysql",
        "z": "5a3a9fd242ddfbf1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 810,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "e86bc02774b0223d",
        "type": "delay",
        "z": "5a3a9fd242ddfbf1",
        "name": "100ms",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 90,
        "y": 1680,
        "wires": [
            [
                "fd7ac4722a7671db",
                "37d17a09efc54d2f",
                "5bb24a760cda978a",
                "99d0cd5e2e2485a7",
                "1c685dd973e85b0d",
                "7363bfcfbc77e748",
                "e6f620385c1a1a94",
                "f70be091c862ab9c",
                "6ec55bc48b588138",
                "01e26bc58eaaedd2",
                "5dd2c4248d28c54c",
                "fd23bbc4a62a3c80",
                "c9a0efd60bad0599",
                "1c78b5753a95db93",
                "e80acbb4cf87b1f8",
                "102f4aee196a041a",
                "0d9af59803f554f0",
                "32fc60f90a2c5ce1",
                "3fe15d658eb33061",
                "a93efbb21180a491",
                "efa75128c2c56c02",
                "5192eb54ee879b9d",
                "ecb8d2268338ec44",
                "cac096fea86d7318",
                "6f7da3bbc7922e2a",
                "c46a74cb157c98bc",
                "c5a5f1114f732acf",
                "0dd68587f4890c83",
                "8919139dad5a8768",
                "c5b7fd1f18a8f8b6",
                "7eb0f6f32f6ddaed",
                "afb7c5a9ee2cc665",
                "64c4f58115b61675",
                "760529567d150307"
            ]
        ]
    },
    {
        "id": "868606088e1255c6",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 580,
        "wires": [
            [
                "aece63ac56058813"
            ]
        ]
    },
    {
        "id": "5bb24a760cda978a",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge Temp ui_control",
        "func": "// GLOBAL GET\nlet gauge_toleranz = global.get('gauge_toleranz');\n\n// FLOW GET\nlet temp = flow.get('temp');\n\nlet min_temp = flow.get('min_temp');\nlet opt_temp = flow.get('opt_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nlet start = min_temp - gauge_toleranz;\nlet end = max_temp + gauge_toleranz;\n\n// MSG\nmsg.topic = 'Â°C';\nmsg = {ui_control:{min:start, max:end, seg1:min_temp, seg2:max_temp}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 440,
        "wires": [
            [
                "c7379f03d604d386",
                "157e50ecab6b4283"
            ]
        ]
    },
    {
        "id": "c7379f03d604d386",
        "type": "ui_gauge",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge Temp",
        "group": "b1a371df80305874",
        "order": 3,
        "width": "6",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#559cd3",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1750,
        "y": 440,
        "wires": []
    },
    {
        "id": "99d0cd5e2e2485a7",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Temp ui_control",
        "func": "// GLOBAL GET\nlet gauge_toleranz = global.get('gauge_toleranz');\n\n// FLOW GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nlet start = min_temp - gauge_toleranz;\nlet end = max_temp + gauge_toleranz;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "f2171ef5765c112a"
            ]
        ]
    },
    {
        "id": "1c685dd973e85b0d",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Temp max_temp",
        "func": "// FLOW GET\nlet max_temp = flow.get('max_temp');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 560,
        "wires": [
            [
                "f2171ef5765c112a"
            ]
        ]
    },
    {
        "id": "7363bfcfbc77e748",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Temp min_temp",
        "func": "// FLOW GET\nlet min_temp = flow.get('min_temp');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 520,
        "wires": [
            [
                "f2171ef5765c112a"
            ]
        ]
    },
    {
        "id": "edc36ebfbc91132a",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "SET Outdoor",
        "func": "// FLOW GET\nlet outdoor_id = flow.get('outdoor_id') || 4;\n\n// SET\noutdoor_id = 4;\n\n// FLOW SET\nflow.set('outdoor_id', outdoor_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 240,
        "wires": [
            [
                "e1d90736ee6ebc51"
            ]
        ]
    },
    {
        "id": "e1d90736ee6ebc51",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "outdoor",
        "func": "// FLOW GET\nlet outdoor_id = flow.get('outdoor_id');\n\n// MSG\nmsg.payload = outdoor_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 240,
        "wires": [
            [
                "90384afc12c15aa9"
            ]
        ]
    },
    {
        "id": "90384afc12c15aa9",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 240,
        "wires": [
            [
                "621b972bf9f6587c"
            ]
        ]
    },
    {
        "id": "621b972bf9f6587c",
        "type": "mysql",
        "z": "5a3a9fd242ddfbf1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "4901400c9f7577bc"
            ]
        ]
    },
    {
        "id": "4901400c9f7577bc",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "Flow VARS sensor_data (Outdoor)",
        "func": "// FLOW GET && SET\nlet outdoor_temp = flow.get('outdoor_temp') || 0;\nlet outdoor_humi = flow.get('outdoor_humi') || 0;\n\n// SET\noutdoor_temp = msg.payload[0].temp;\noutdoor_humi = msg.payload[0].humi;\n\n// FLOW SET\nflow.set('outdoor_temp', outdoor_temp);\nflow.set('outdoor_humi', outdoor_humi);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 240,
        "wires": [
            [
                "e86bc02774b0223d"
            ]
        ]
    },
    {
        "id": "e6f620385c1a1a94",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// MSG\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 680,
        "wires": [
            [
                "eb31d11cb3a6f756"
            ]
        ]
    },
    {
        "id": "eb31d11cb3a6f756",
        "type": "ui_text",
        "z": "5a3a9fd242ddfbf1",
        "group": "3badd02204fa4041",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text Temperatur",
        "label": "Temperatur",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1760,
        "y": 680,
        "wires": []
    },
    {
        "id": "f70be091c862ab9c",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "temp",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "4ec894f29418ad8b"
            ]
        ]
    },
    {
        "id": "6ec55bc48b588138",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 760,
        "wires": [
            [
                "4ec894f29418ad8b"
            ]
        ]
    },
    {
        "id": "0d9af59803f554f0",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "text outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// MSG\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1180,
        "wires": [
            [
                "85dd2aaad860bf64"
            ]
        ]
    },
    {
        "id": "85dd2aaad860bf64",
        "type": "ui_text",
        "z": "5a3a9fd242ddfbf1",
        "group": "3badd02204fa4041",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "text humi",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1740,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f2171ef5765c112a",
        "type": "ui_chart",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Temp",
        "group": "b1a371df80305874",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5dd2c4248d28c54c",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "min_humidity",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\n\n// MSG\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "2c1db69d302820f5",
                "19f3aa07caee735e"
            ]
        ]
    },
    {
        "id": "fd23bbc4a62a3c80",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\n// MSG\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1180,
        "wires": [
            [
                "1080251ff89d0775",
                "49decb6cead24581"
            ]
        ]
    },
    {
        "id": "1080251ff89d0775",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "humiMax",
        "func": "msg.topic = `humiMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1140,
        "wires": [
            [
                "2c1db69d302820f5"
            ]
        ]
    },
    {
        "id": "19f3aa07caee735e",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "humMin",
        "func": "msg.topic = `humMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1000,
        "wires": [
            [
                "49decb6cead24581"
            ]
        ]
    },
    {
        "id": "2c1db69d302820f5",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "d48606f24897b3a3",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 630,
        "y": 940,
        "wires": [
            [
                "fa7b8c7701a51123",
                "19f3aa07caee735e"
            ]
        ]
    },
    {
        "id": "fa7b8c7701a51123",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\nlet room_id = flow.get('room_id');\n\n// SET\nmin_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nmsg.payload = min_humidity;\n\nmsg.topic = \"UPDATE `room_settings` SET `min_humidity` = '\" + min_humidity + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 940,
        "wires": [
            [
                "54b0ce2d2a330ffd",
                "c9a0efd60bad0599",
                "1c78b5753a95db93",
                "e80acbb4cf87b1f8",
                "102f4aee196a041a"
            ]
        ]
    },
    {
        "id": "4b1de9d595954344",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\nlet room_id = flow.get('room_id');\n\n// SET\nmax_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nmsg.max_humidity = max_humidity;\nmsg.topic = \"UPDATE `room_settings` SET `max_humidity` = '\" + max_humidity + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1180,
        "wires": [
            [
                "54b0ce2d2a330ffd",
                "c9a0efd60bad0599",
                "1c78b5753a95db93",
                "e80acbb4cf87b1f8",
                "102f4aee196a041a"
            ]
        ]
    },
    {
        "id": "49decb6cead24581",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "d48606f24897b3a3",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "4b1de9d595954344",
                "1080251ff89d0775"
            ]
        ]
    },
    {
        "id": "54b0ce2d2a330ffd",
        "type": "mysql",
        "z": "5a3a9fd242ddfbf1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 810,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe15d658eb33061",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart humi",
        "func": "// FLOW GET\nlet humi = flow.get('humi') || 0;\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1300,
        "wires": [
            [
                "2b29b95a23b41471"
            ]
        ]
    },
    {
        "id": "a93efbb21180a491",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1260,
        "wires": [
            [
                "2b29b95a23b41471"
            ]
        ]
    },
    {
        "id": "01e26bc58eaaedd2",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Temp ui_control",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// SET\nlet start = -20;\nlet end = 50;\n\nif(temp > outdoor_temp) {\n    start = Math.round(outdoor_temp - 5);\n    end = Math.round(temp + 1);\n} else {\n    start = Math.round(temp + 5);\n    end = Math.round(outdoor_temp - 1);\n}\n\nstart = 0;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 720,
        "wires": [
            [
                "4ec894f29418ad8b"
            ]
        ]
    },
    {
        "id": "32fc60f90a2c5ce1",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n//msg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1220,
        "wires": [
            [
                "2b29b95a23b41471"
            ]
        ]
    },
    {
        "id": "c9a0efd60bad0599",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge Temp ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = '%';\nmsg = {ui_control:{min:start, max:end, seg1:min_humidity, seg2:max_humidity}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 960,
        "wires": [
            [
                "1ee5d8271fa4da7a",
                "49f1fcb278279001"
            ]
        ]
    },
    {
        "id": "1ee5d8271fa4da7a",
        "type": "ui_gauge",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge Humi",
        "group": "d48606f24897b3a3",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1750,
        "y": 960,
        "wires": []
    },
    {
        "id": "26978a7d1923aaa0",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "Outdoor in Luftfeuchtigkeit",
        "info": "",
        "x": 1370,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1c78b5753a95db93",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity') || 40;\nlet max_humidity = flow.get('max_humidity') || 70;\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1000,
        "wires": [
            [
                "b781f6b1454f8cae"
            ]
        ]
    },
    {
        "id": "e80acbb4cf87b1f8",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Temp min_temp",
        "func": "// FLOW GET\nlet min_humidity = flow.get('min_humidity');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1040,
        "wires": [
            [
                "b781f6b1454f8cae"
            ]
        ]
    },
    {
        "id": "102f4aee196a041a",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Temp max_temp",
        "func": "// FLOW GET\nlet max_humidity = flow.get('max_humidity');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1080,
        "wires": [
            [
                "b781f6b1454f8cae"
            ]
        ]
    },
    {
        "id": "b781f6b1454f8cae",
        "type": "ui_chart",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Humi",
        "group": "d48606f24897b3a3",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#adc5e6",
            "#ff7f0e",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "d298a17573d37e7b",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "Outdoor in Temperatur",
        "info": "",
        "x": 1360,
        "y": 640,
        "wires": []
    },
    {
        "id": "a0bf958a9a64a68b",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "Temperatur",
        "info": "",
        "x": 1330,
        "y": 400,
        "wires": []
    },
    {
        "id": "a6dab07e9994a948",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "SettingsLuftfeuchtigkeit",
        "info": "",
        "x": 380,
        "y": 900,
        "wires": []
    },
    {
        "id": "fc23ab1bc27fd83a",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "Luftfeuchtigkeit",
        "info": "",
        "x": 1340,
        "y": 920,
        "wires": []
    },
    {
        "id": "157e50ecab6b4283",
        "type": "ui_gauge",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge Temp BÃ¼ro",
        "group": "ad98f78e05e079c5",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#afd1fd",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1770,
        "y": 360,
        "wires": []
    },
    {
        "id": "993a4d9ef3c046df",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "VIEW: Home",
        "info": "",
        "x": 1750,
        "y": 320,
        "wires": []
    },
    {
        "id": "be3a0ac312688e70",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "VIEW: Room (Self)",
        "info": "",
        "x": 1770,
        "y": 400,
        "wires": []
    },
    {
        "id": "11d45f4a9074b8b6",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "VIEW: Home",
        "info": "",
        "x": 1750,
        "y": 840,
        "wires": []
    },
    {
        "id": "49f1fcb278279001",
        "type": "ui_gauge",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge Humi BÃ¼ro",
        "group": "ad98f78e05e079c5",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1770,
        "y": 880,
        "wires": []
    },
    {
        "id": "0807b8f9f2d4a4ae",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "VIEW: Room (Self)",
        "info": "",
        "x": 1770,
        "y": 920,
        "wires": []
    },
    {
        "id": "17adee7f76fdbef3",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "let room_id = flow.get('room_id') || 1; let sensor_id = flow.get('sensor_id') || 3;",
        "info": "let room_id = flow.get('room_id') || 1;\nlet sensor_id = flow.get('sensor_id') || 3;",
        "x": 550,
        "y": 60,
        "wires": []
    },
    {
        "id": "6f7da3bbc7922e2a",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "is_good_co2",
        "func": "// FLOAT GET\nlet is_good_co2 = flow.get('is_good_co2');\n\n// MSG\nmsg.payload = is_good_co2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1440,
        "wires": [
            [
                "d6105649cc1950c8",
                "9fb8630e8f292f3d"
            ]
        ]
    },
    {
        "id": "c46a74cb157c98bc",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "is_bad_co2",
        "func": "// FLOAT GET\nlet is_bad_co2 = flow.get('is_bad_co2');\n\n// MSG\nmsg.payload = is_bad_co2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1680,
        "wires": [
            [
                "ed849ff640774025",
                "b51c70a5f95836d7"
            ]
        ]
    },
    {
        "id": "ed849ff640774025",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "coMax",
        "func": "msg.topic = `coMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1640,
        "wires": [
            [
                "d6105649cc1950c8"
            ]
        ]
    },
    {
        "id": "9fb8630e8f292f3d",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "coMin",
        "func": "msg.topic = `coMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1500,
        "wires": [
            [
                "b51c70a5f95836d7"
            ]
        ]
    },
    {
        "id": "d6105649cc1950c8",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "Gut bis",
        "tooltip": "",
        "group": "b0bc51f819da4e01",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "2200",
        "step": "100",
        "className": "",
        "x": 620,
        "y": 1440,
        "wires": [
            [
                "03ded0f846f95dc7",
                "9fb8630e8f292f3d"
            ]
        ]
    },
    {
        "id": "03ded0f846f95dc7",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet is_good_co2 = flow.get('is_good_co2');\nlet room_id = flow.get('room_id');\n\n// SET\nis_good_co2 = msg.payload;\n\n// FLOAT SET\nflow.set('is_good_co2', is_good_co2);\n\n// MSG\nmsg.payload = is_good_co2;\n\nmsg.topic = \"UPDATE `room_settings` SET `is_good_co2` = '\" + is_good_co2 + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1440,
        "wires": [
            [
                "0e34936c76e95c9b",
                "efa75128c2c56c02",
                "5192eb54ee879b9d",
                "ecb8d2268338ec44",
                "cac096fea86d7318"
            ]
        ]
    },
    {
        "id": "78de31b22728bc5f",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet is_bad_co2 = flow.get('is_bad_co2');\nlet room_id = flow.get('room_id');\n\n// SET\nis_bad_co2 = msg.payload;\n\n// FLOAT SET\nflow.set('is_bad_co2', is_bad_co2);\n\n// MSG\nmsg.payload = is_bad_co2;\nmsg.topic = \"UPDATE `room_settings` SET `is_bad_co2` = '\" + is_bad_co2 + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1680,
        "wires": [
            [
                "0e34936c76e95c9b",
                "efa75128c2c56c02",
                "5192eb54ee879b9d",
                "ecb8d2268338ec44",
                "cac096fea86d7318"
            ]
        ]
    },
    {
        "id": "b51c70a5f95836d7",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "Warnug ab",
        "tooltip": "",
        "group": "b0bc51f819da4e01",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "3000",
        "step": "100",
        "className": "",
        "x": 630,
        "y": 1680,
        "wires": [
            [
                "78de31b22728bc5f",
                "ed849ff640774025"
            ]
        ]
    },
    {
        "id": "0e34936c76e95c9b",
        "type": "mysql",
        "z": "5a3a9fd242ddfbf1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 810,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "efa75128c2c56c02",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge CO ui_control",
        "func": "// FLOW GET\nlet co = flow.get('co');\n\nlet is_good_co2 = flow.get('is_good_co2');\nlet is_bad_co2 = flow.get('is_bad_co2');\n\n// SET\nlet start = 0;\nlet good = is_good_co2;\nlet bad = is_bad_co2;\nlet end = bad + 300;\n\n// seg1:start, \n\n// MSG\nmsg.topic = 'ppn';\nmsg = {ui_control:{min:start, max:end, seg1:good, seg2:bad, seg3:end}, topic:`${msg.topic}`};\nmsg.payload = co;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1440,
        "wires": [
            [
                "cb19e28ba388d22e"
            ]
        ]
    },
    {
        "id": "cb19e28ba388d22e",
        "type": "ui_gauge",
        "z": "5a3a9fd242ddfbf1",
        "name": "gaugeCO2",
        "group": "b0bc51f819da4e01",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "ppm",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "2200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#e64500"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1750,
        "y": 1440,
        "wires": []
    },
    {
        "id": "5192eb54ee879b9d",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart CO2 ui_control",
        "func": "// FLOW GET\nlet co = flow.get('co');\nlet is_good_co2 = flow.get('is_good_co2');\nlet is_bad_co2 = flow.get('is_bad_co2');\n\n// SET\nlet start = 0;\nlet end = is_bad_co2 + 300;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = co;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1480,
        "wires": [
            [
                "0f542d3d8a3b3535"
            ]
        ]
    },
    {
        "id": "ecb8d2268338ec44",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart CO2 is_good_co2",
        "func": "// FLOW GET\nlet is_good_co2 = flow.get('is_good_co2');\n\n// MSG\nmsg.topic = 'gut';\nmsg.payload = is_good_co2;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1520,
        "wires": [
            [
                "0f542d3d8a3b3535"
            ]
        ]
    },
    {
        "id": "cac096fea86d7318",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart CO2 is_bad_co2",
        "func": "// FLOW GET\nlet is_bad_co2 = flow.get('is_bad_co2');\n\n// MSG\nmsg.topic = 'warn';\nmsg.payload = is_bad_co2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1560,
        "wires": [
            [
                "0f542d3d8a3b3535"
            ]
        ]
    },
    {
        "id": "f532a1271f8c2767",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "Settings CO2",
        "info": "",
        "x": 350,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a58f4ecb5d030c97",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "CO2",
        "info": "",
        "x": 1310,
        "y": 1400,
        "wires": []
    },
    {
        "id": "0f542d3d8a3b3535",
        "type": "ui_chart",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart CO2",
        "group": "b0bc51f819da4e01",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#00b500",
            "#ff7f0e",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "24be743916fd4ec3",
        "type": "ui_text",
        "z": "5a3a9fd242ddfbf1",
        "group": "7a7a528c0567ddfc",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Letztes",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 780,
        "y": 2200,
        "wires": []
    },
    {
        "id": "c5a5f1114f732acf",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "updated",
        "func": "let updated = flow.get('updated') || 0;\n\nmsg.payload = updated;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2200,
        "wires": [
            [
                "b46631cb669f61fc",
                "aadc5fc44937c074"
            ]
        ]
    },
    {
        "id": "5b4fd0d4e9366baa",
        "type": "link in",
        "z": "5a3a9fd242ddfbf1",
        "name": "Netatmo Indoor",
        "links": [
            "99818b8228e4e27d"
        ],
        "x": 165,
        "y": 140,
        "wires": [
            [
                "ae2fbe6052e3b61a",
                "edc36ebfbc91132a"
            ]
        ]
    },
    {
        "id": "b46631cb669f61fc",
        "type": "subflow:3ff4bac1cafa9052",
        "z": "5a3a9fd242ddfbf1",
        "x": 590,
        "y": 2200,
        "wires": [
            [
                "24be743916fd4ec3"
            ]
        ]
    },
    {
        "id": "afb7c5a9ee2cc665",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "db_good",
        "func": "// FLOAT GET\nlet db_good = flow.get('db_good');\n\n// MSG\nmsg.payload = db_good;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1820,
        "wires": [
            [
                "00308a0454c5ef91",
                "1cd2639cd172d6ec"
            ]
        ]
    },
    {
        "id": "64c4f58115b61675",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "db_bad",
        "func": "// FLOAT GET\nlet db_bad = flow.get('db_bad');\n\n// MSG\nmsg.payload = db_bad;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2060,
        "wires": [
            [
                "44dd4fca27f167f1",
                "eeed89d7d85d2f17"
            ]
        ]
    },
    {
        "id": "44dd4fca27f167f1",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "dbMax",
        "func": "msg.topic = `coMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2020,
        "wires": [
            [
                "00308a0454c5ef91"
            ]
        ]
    },
    {
        "id": "1cd2639cd172d6ec",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "dbMin",
        "func": "msg.topic = `coMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1880,
        "wires": [
            [
                "eeed89d7d85d2f17"
            ]
        ]
    },
    {
        "id": "00308a0454c5ef91",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "Leise bis",
        "tooltip": "",
        "group": "1f09b98928526ab5",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}dB",
        "min": 0,
        "max": "120",
        "step": "5",
        "className": "",
        "x": 620,
        "y": 1820,
        "wires": [
            [
                "bb18468b041e515f",
                "1cd2639cd172d6ec"
            ]
        ]
    },
    {
        "id": "bb18468b041e515f",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet db_good = flow.get('db_good');\nlet room_id = flow.get('room_id');\n\n// SET\ndb_good = msg.payload;\n\n// FLOAT SET\nflow.set('db_good', db_good);\n\n// MSG\nmsg.payload = db_good;\n\nmsg.topic = \"UPDATE `room_settings` SET `db_good` = '\" + db_good + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1820,
        "wires": [
            [
                "24aaf4bc2aac9f99",
                "0dd68587f4890c83",
                "8919139dad5a8768",
                "c5b7fd1f18a8f8b6",
                "7eb0f6f32f6ddaed"
            ]
        ]
    },
    {
        "id": "a1ad6d26e140f7b3",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet db_bad = flow.get('db_bad');\nlet room_id = flow.get('room_id');\n\n// SET\ndb_bad = msg.payload;\n\n// FLOAT SET\nflow.set('db_bad', db_bad);\n\n// MSG\nmsg.payload = db_bad;\nmsg.topic = \"UPDATE `room_settings` SET `db_bad` = '\" + db_bad + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2060,
        "wires": [
            [
                "24aaf4bc2aac9f99",
                "0dd68587f4890c83",
                "8919139dad5a8768",
                "c5b7fd1f18a8f8b6",
                "7eb0f6f32f6ddaed"
            ]
        ]
    },
    {
        "id": "eeed89d7d85d2f17",
        "type": "ui_numeric",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "label": "zu laut ab",
        "tooltip": "",
        "group": "1f09b98928526ab5",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}dB",
        "min": 0,
        "max": "120",
        "step": "5",
        "className": "",
        "x": 620,
        "y": 2060,
        "wires": [
            [
                "a1ad6d26e140f7b3",
                "44dd4fca27f167f1"
            ]
        ]
    },
    {
        "id": "24aaf4bc2aac9f99",
        "type": "mysql",
        "z": "5a3a9fd242ddfbf1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 810,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "0dd68587f4890c83",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge dB ui_control",
        "func": "// FLOW GET\nlet db = flow.get('db');\n\nlet db_good = flow.get('db_good');\nlet db_bad = flow.get('db_bad');\n\n// SET\nlet start = 0;\nlet good = db_good;\nlet bad = db_bad;\nlet end = db_bad + 20;\n\n// seg1:start, \n\n// MSG\nmsg.topic = 'dB';\nmsg = {ui_control:{min:start, max:end, seg1:good, seg2:bad, seg3:end}, topic:`${msg.topic}`};\nmsg.payload = db;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1820,
        "wires": [
            [
                "348ad30c3667f00f"
            ]
        ]
    },
    {
        "id": "348ad30c3667f00f",
        "type": "ui_gauge",
        "z": "5a3a9fd242ddfbf1",
        "name": "gauge dB",
        "group": "1f09b98928526ab5",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "dB",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "2200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#e64500"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1740,
        "y": 1820,
        "wires": []
    },
    {
        "id": "8919139dad5a8768",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart dB ui_control",
        "func": "// FLOW GET\nlet db = flow.get('db');\nlet db_good = flow.get('db_good');\nlet db_bad = flow.get('db_bad');\n\n// SET\nlet start = 0;\nlet end = db_bad + 20;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = db;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1860,
        "wires": [
            [
                "1e9953a331bdc110"
            ]
        ]
    },
    {
        "id": "c5b7fd1f18a8f8b6",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart dB db_good",
        "func": "// FLOW GET\nlet db_good = flow.get('db_good');\n\n// MSG\nmsg.topic = 'leise';\nmsg.payload = db_good;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1900,
        "wires": [
            [
                "1e9953a331bdc110"
            ]
        ]
    },
    {
        "id": "7eb0f6f32f6ddaed",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart dB db_bad",
        "func": "// FLOW GET\nlet db_bad = flow.get('db_bad');\n\n// MSG\nmsg.topic = 'zu laut';\nmsg.payload = db_bad;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1940,
        "wires": [
            [
                "1e9953a331bdc110"
            ]
        ]
    },
    {
        "id": "4caa63c9b33f3bab",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "Settings dB",
        "info": "",
        "x": 350,
        "y": 1780,
        "wires": []
    },
    {
        "id": "4523f19e14544bf3",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "dB",
        "info": "",
        "x": 1310,
        "y": 1780,
        "wires": []
    },
    {
        "id": "1e9953a331bdc110",
        "type": "ui_chart",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart dB",
        "group": "1f09b98928526ab5",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#00b500",
            "#ff7f0e",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1740,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "e4bd9606a7cea030",
        "type": "comment",
        "z": "5a3a9fd242ddfbf1",
        "name": "From Float Netatmo",
        "info": "",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "4ec894f29418ad8b",
        "type": "ui_chart",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Outdoor & Indoor",
        "group": "3badd02204fa4041",
        "order": 2,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1780,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2b29b95a23b41471",
        "type": "ui_chart",
        "z": "5a3a9fd242ddfbf1",
        "name": "chart Outdoor & Indoor humi",
        "group": "3badd02204fa4041",
        "order": 5,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1800,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "760529567d150307",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "updated",
        "func": "let updated = flow.get('updated') || 0;\n\nmsg.payload = updated + 600;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2280,
        "wires": [
            [
                "942851ef0c348de9"
            ]
        ]
    },
    {
        "id": "3dad7158199eab14",
        "type": "debug",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2280,
        "wires": []
    },
    {
        "id": "aadc5fc44937c074",
        "type": "debug",
        "z": "5a3a9fd242ddfbf1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 2240,
        "wires": []
    },
    {
        "id": "942851ef0c348de9",
        "type": "function",
        "z": "5a3a9fd242ddfbf1",
        "name": "m + 10",
        "func": "let date_value = msg.payload;\nlet plus = (60*60+10);\n\n// FUNKTION\nfunction fctDate(date_value, plus) {\n    const date = new Date(date_value + plus);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    output = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return output;\n}\n\nmsg.payload = fctDate(date_value, plus);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2280,
        "wires": [
            [
                "3dad7158199eab14"
            ]
        ]
    },
    {
        "id": "115ae5c65c1e694c",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/battery",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1230,
        "y": 1300,
        "wires": [
            [
                "6604a619d78f2933"
            ]
        ]
    },
    {
        "id": "98b264a5149b7ee4",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "62de86d112dd1796",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "text Shelly H&T (KC)",
        "label": "Shelly (KC)",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1600,
        "y": 1280,
        "wires": []
    },
    {
        "id": "847906caeef6409a",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "MQTT Subscriping",
        "info": "",
        "x": 170,
        "y": 120,
        "wires": []
    },
    {
        "id": "6e45dd7a63f3acd2",
        "type": "mqtt in",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "shellies/shellyht-702F79/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 160,
        "wires": [
            [
                "79ea7ab1d0e4b818"
            ]
        ]
    },
    {
        "id": "79ea7ab1d0e4b818",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "current_...",
        "func": "let info = msg.topic; \nlet current_temp = flow.get('current_temp') || 0;\nlet current_hum = flow.get('current_hum') || 0;\nlet current_bat = flow.get('current_bat') || 0;\n\nif(info == \"shellies/shellyht-702F79/sensor/temperature\") {\n    current_temp = msg.payload\n}\n\nif(info == \"shellies/shellyht-702F79/sensor/humidity\") {\n    current_hum = msg.payload;\n}\n\nif(info == \"shellies/shellyht-702F79/sensor/battery\") {\n    current_bat = msg.payload;\n}\n\n// SET VARIABLEN\nflow.set('current_temp', current_temp);\nflow.set('current_hum', current_hum);\nflow.set('current_bat', current_bat);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "18d83173264bfe28"
            ]
        ]
    },
    {
        "id": "9cb445abf0f92fcf",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "INIT ONE Response",
        "info": "",
        "x": 170,
        "y": 260,
        "wires": []
    },
    {
        "id": "42263327dd5205c6",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "View:Hello",
        "info": "",
        "x": 1560,
        "y": 1240,
        "wires": []
    },
    {
        "id": "6604a619d78f2933",
        "type": "ui_text",
        "z": "a18bee2e207edef3",
        "group": "62de86d112dd1796",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "value Shell H&T (KC) HL",
        "label": "",
        "format": "{{msg.payload}}%",
        "layout": "col-center",
        "className": "",
        "x": 1610,
        "y": 1340,
        "wires": []
    },
    {
        "id": "18d83173264bfe28",
        "type": "switch",
        "z": "a18bee2e207edef3",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "shellies/shellyht-702F79/sensor/act_reasons",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 130,
        "y": 340,
        "wires": [
            [
                "a9323b6e57ae6650"
            ]
        ]
    },
    {
        "id": "a9323b6e57ae6650",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "INSERT INTO `sensor_data`",
        "func": "let current_temp = flow.get('current_temp') || 0;\nlet current_hum = flow.get('current_hum') || 0;\nlet current_bat = flow.get('current_bat') || 0;\n\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `battery`) VALUE ('2', '\" + current_temp + \"', '\" + current_hum + \"', '\" + current_bat + \"')\";\nmsg.topic = sql;\nmsg.payload = \"INSERT INTO `sensor_data`...\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "1ede7b7dd5e27c0c"
            ]
        ]
    },
    {
        "id": "103be5d06826fb9a",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "Last Topic",
        "info": "",
        "x": 140,
        "y": 300,
        "wires": []
    },
    {
        "id": "1ede7b7dd5e27c0c",
        "type": "mysql",
        "z": "a18bee2e207edef3",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 610,
        "y": 340,
        "wires": [
            [
                "ed365e440299e217",
                "e637f94a68980f27"
            ]
        ]
    },
    {
        "id": "ed365e440299e217",
        "type": "mqtt out",
        "z": "a18bee2e207edef3",
        "name": "",
        "topic": "/auto/sensor/shellyht-702F79",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 860,
        "y": 340,
        "wires": []
    },
    {
        "id": "a30ca705b7e1c061",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "Publishing / Client",
        "info": "",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "43575ba214c9615f",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "sensor_id=2",
        "info": "",
        "x": 310,
        "y": 300,
        "wires": []
    },
    {
        "id": "279195bec5fe937f",
        "type": "link out",
        "z": "a18bee2e207edef3",
        "name": "send Room3",
        "mode": "link",
        "links": [
            "237a577d78bacf49"
        ],
        "x": 810,
        "y": 460,
        "wires": [],
        "l": true
    },
    {
        "id": "e6b8ad65c367f660",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "send to",
        "info": "",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "7d1cc12327167b21",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "shellyht-702F7",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "e637f94a68980f27",
        "type": "function",
        "z": "a18bee2e207edef3",
        "name": "from Sensor2",
        "func": "msg.payload = `shellies/shellyht-702F79/sensor/#`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 460,
        "wires": [
            [
                "279195bec5fe937f"
            ]
        ]
    },
    {
        "id": "98563fe97d25660d",
        "type": "comment",
        "z": "a18bee2e207edef3",
        "name": "Standort: Room3",
        "info": "",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "f7f14b6ccc0a9f8e",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '\" + msg.payload + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "94faf7ba585df9a1"
            ]
        ]
    },
    {
        "id": "94faf7ba585df9a1",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 970,
        "y": 300,
        "wires": [
            [
                "16ba596376f91e9b"
            ]
        ]
    },
    {
        "id": "16ba596376f91e9b",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "Flow VARS room_settings",
        "func": "// FLOW GET && SET\nlet room_id = flow.get('room_id');\n\nlet min_temp = flow.get('min_temp') || 19;\nlet max_temp = flow.get('max_temp') || 24;\n\nlet min_humidity = flow.get('min_humidity') || 40;\nlet max_humidity = flow.get('max_humidity') || 70;\n\nlet is_good_co2 = flow.get('is_good_co2') || 900;\nlet is_bad_co2 = flow.get('is_bad_co2') || 1400;\nlet is_alert_co2 = flow.get('is_alert_co2') || 1600;\n\nlet db_good = flow.get('db_good') || 40;\nlet db_bad = flow.get('db_bad') || 70;\n\n// SET\nmin_temp = msg.payload[0].min_temp;\nmax_temp = msg.payload[0].max_temp;\n\nmin_humidity = msg.payload[0].min_humidity;\nmax_humidity = msg.payload[0].max_humidity;\n\nis_good_co2 = msg.payload[0].is_good_co2;\nis_bad_co2 = msg.payload[0].is_bad_co2;\nis_alert_co2 = msg.payload[0].is_alert_co2;\n\ndb_good = msg.payload[0].db_good;\ndb_bad = msg.payload[0].db_bad;\n\n// FLOW SET\nflow.set('room_id', room_id);\n\nflow.set('min_temp', min_temp);\nflow.set('max_temp', max_temp);\n\nflow.set('min_humidity', min_humidity);\nflow.set('max_humidity', max_humidity);\n\nflow.set('is_good_co2', is_good_co2);\nflow.set('is_bad_co2', is_bad_co2);\nflow.set('is_alert_co2', is_alert_co2);\n\nflow.set('db_good', db_good);\nflow.set('db_bad', db_bad);\n\nmsg.payload = 'room_settings';\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7b43553773db906e",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 380,
        "wires": [
            [
                "5819d07b8586375b"
            ]
        ]
    },
    {
        "id": "5819d07b8586375b",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 970,
        "y": 380,
        "wires": [
            [
                "16970dffacf6bc26"
            ]
        ]
    },
    {
        "id": "16970dffacf6bc26",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "Flow VARS sensor_data",
        "func": "// FLOW GET && SET\nlet sensor_id = flow.get('sensor_id') || 2;\n\nlet temp = flow.get('temp') || 0;\nlet humi = flow.get('humi') || 0;\nlet co = flow.get('co') || 0;\nlet db = flow.get('db') || 0;\nlet battery = flow.get('battery') || 100;\n\nlet updated = flow.get('updated') || 0;\n\n// SET\ntemp = msg.payload[0].temp;\nhumi = msg.payload[0].humi;\nco = msg.payload[0].co;\ndb = msg.payload[0].db;\nbattery = msg.payload[0].battery;\n\nupdated = msg.payload[0].updated;\n\n// FLOW SET\nflow.set('sensor_id', sensor_id);\n\nflow.set('temp', temp);\nflow.set('humi', humi);\nflow.set('co', co);\nflow.set('db', db);\nflow.set('battery', battery);\n\nflow.set('updated', updated);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "027651292fccd352",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SET Room ID 3",
        "func": "// FLOW GET\nlet room_id = flow.get('room_id') || 3;\n\n// SET\nroom_id = 3;\n\n// FLOW SET\nflow.set('room_id', room_id);\n\n// MSG\nmsg.payload = room_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 300,
        "wires": [
            [
                "f7f14b6ccc0a9f8e"
            ]
        ]
    },
    {
        "id": "c4f46dca612602b8",
        "type": "inject",
        "z": "c17bc758ed437b81",
        "name": "10min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "027651292fccd352",
                "c62a2c4d0ce44623"
            ]
        ]
    },
    {
        "id": "c62a2c4d0ce44623",
        "type": "mqtt out",
        "z": "c17bc758ed437b81",
        "name": "",
        "topic": "/interval/room/3",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 380,
        "y": 240,
        "wires": []
    },
    {
        "id": "b0e57c5a936be6c7",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SET Outdoor ID 4",
        "func": "// FLOW GET\nlet outdoor_id = flow.get('outdoor_id') || 4;\n\n// SET\noutdoor_id = 4;\n\n// FLOW SET\nflow.set('outdoor_id', outdoor_id);\n\n// MSG\nmsg.payload = outdoor_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 460,
        "wires": [
            [
                "16c7ca8091c8143a"
            ]
        ]
    },
    {
        "id": "16c7ca8091c8143a",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 460,
        "wires": [
            [
                "f2ca4b26155db456"
            ]
        ]
    },
    {
        "id": "f2ca4b26155db456",
        "type": "mysql",
        "z": "c17bc758ed437b81",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 970,
        "y": 460,
        "wires": [
            [
                "62753ac2c81ba937"
            ]
        ]
    },
    {
        "id": "62753ac2c81ba937",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "Flow VARS sensor_data (Outdoor)",
        "func": "// FLOW GET && SET\nlet outdoor_temp = flow.get('outdoor_temp') || 0;\nlet outdoor_humi = flow.get('outdoor_humi') || 0;\n\n// SET\noutdoor_temp = msg.payload[0].temp;\noutdoor_humi = msg.payload[0].humi;\n\n// FLOW SET\nflow.set('outdoor_temp', outdoor_temp);\nflow.set('outdoor_humi', outdoor_humi);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "237a577d78bacf49",
        "type": "link in",
        "z": "c17bc758ed437b81",
        "name": "from Sensor2",
        "links": [
            "279195bec5fe937f"
        ],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "027651292fccd352"
            ]
        ],
        "l": true
    },
    {
        "id": "b6486a3ecfc76959",
        "type": "link out",
        "z": "c17bc758ed437b81",
        "name": "send Room3/Temp",
        "mode": "link",
        "links": [
            "6391dbf11f455d29"
        ],
        "x": 690,
        "y": 600,
        "wires": [],
        "l": true
    },
    {
        "id": "702d7e804451aced",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "SET Sensor ID 2",
        "func": "// FLOW GET\nlet sensor_id = flow.get('sensor_id') || 2;\n\n// SET\nsensor_id = 2;\n\n// FLOW SET\nflow.set('sensor_id', sensor_id);\n\n// MSG\nmsg.payload = sensor_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 380,
        "wires": [
            [
                "7b43553773db906e"
            ]
        ]
    },
    {
        "id": "1dcb096eac442d77",
        "type": "inject",
        "z": "c17bc758ed437b81",
        "name": "init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "027651292fccd352"
            ]
        ]
    },
    {
        "id": "ccf7606a5d551a52",
        "type": "comment",
        "z": "c17bc758ed437b81",
        "name": "come in",
        "info": "",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "1c1b7c4b85b8e1e3",
        "type": "comment",
        "z": "c17bc758ed437b81",
        "name": "send to",
        "info": "",
        "x": 650,
        "y": 560,
        "wires": []
    },
    {
        "id": "4dbcf5a660dd0fec",
        "type": "link in",
        "z": "c17bc758ed437b81",
        "name": "from Room3TempMinMax",
        "links": [
            "e8545cdfa792a843"
        ],
        "x": 770,
        "y": 120,
        "wires": [
            [
                "027651292fccd352"
            ]
        ],
        "l": true
    },
    {
        "id": "7165816dbf7caebc",
        "type": "link out",
        "z": "c17bc758ed437b81",
        "name": "send Room3/Sensor",
        "mode": "link",
        "links": [
            "52a89c0832d10e36"
        ],
        "x": 700,
        "y": 960,
        "wires": [],
        "l": true
    },
    {
        "id": "ba7272d46060c9c4",
        "type": "link out",
        "z": "c17bc758ed437b81",
        "name": "send Room3/Humi",
        "mode": "link",
        "links": [
            "71f92cd2ed88ff15"
        ],
        "x": 690,
        "y": 700,
        "wires": [],
        "l": true
    },
    {
        "id": "81a228fe05be31bd",
        "type": "link in",
        "z": "c17bc758ed437b81",
        "name": " from Room3HumiMinMax",
        "links": [
            "4df13d1b0fd64d03"
        ],
        "x": 1210,
        "y": 120,
        "wires": [
            [
                "027651292fccd352"
            ]
        ],
        "l": true
    },
    {
        "id": "e1cc84327eac1239",
        "type": "link out",
        "z": "c17bc758ed437b81",
        "name": "send Room3/Control",
        "mode": "link",
        "links": [
            "970c76baf0273519"
        ],
        "x": 700,
        "y": 860,
        "wires": [],
        "l": true
    },
    {
        "id": "bf85fc7dd053c3db",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "send Temp",
        "func": "let room_id = flow.get('room_id');\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\nlet msg1 = { payload: `${room_id}`, topic: `room_id`};\nlet msg2 = { payload: `${temp}`, topic: `temp`};\nlet msg3 = { payload: `${min_temp}`, topic: `min_temp`};\nlet msg4 = { payload: `${max_temp}`, topic: `max_temp`};\nlet msg5 = { payload: `${outdoor_temp}`, topic: `outdoor_temp`};\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 600,
        "wires": [
            [
                "b6486a3ecfc76959"
            ],
            [
                "b6486a3ecfc76959"
            ],
            [
                "b6486a3ecfc76959"
            ],
            [
                "b6486a3ecfc76959"
            ],
            [
                "b6486a3ecfc76959"
            ]
        ]
    },
    {
        "id": "b9acee64d698dae5",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "send Humi",
        "func": "let room_id = flow.get('room_id');\n\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\nlet outdoor_humi = flow.get('outdoor_humi');\n\nlet msg1 = { payload: `${room_id}`, topic: `room_id`};\nlet msg2 = { payload: `${humi}`, topic: `humi`};\nlet msg3 = { payload: `${min_humidity}`, topic: `min_humidity`};\nlet msg4 = { payload: `${max_humidity}`, topic: `max_humidity`};\nlet msg5 = { payload: `${outdoor_humi}`, topic: `outdoor_humi`};\n\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 700,
        "wires": [
            [
                "ba7272d46060c9c4"
            ],
            [
                "ba7272d46060c9c4"
            ],
            [
                "ba7272d46060c9c4"
            ],
            [
                "ba7272d46060c9c4"
            ],
            [
                "ba7272d46060c9c4"
            ]
        ]
    },
    {
        "id": "b142da1b9535e25d",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "send Sensor",
        "func": "// FLOWE GET\nlet updated = flow.get('updated');\nlet battery = flow.get('battery');\n\n// SET\nlet msg1 = { payload: `${updated}`, topic: `updated`};\nlet msg2 = { payload: `${battery}`, topic: `battery`};\n\n// MSG\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 960,
        "wires": [
            [
                "7165816dbf7caebc"
            ],
            [
                "7165816dbf7caebc"
            ]
        ]
    },
    {
        "id": "ecd638fc4ca0801d",
        "type": "function",
        "z": "c17bc758ed437b81",
        "name": "send Control",
        "func": "let room_id = flow.get('room_id');\n\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\nlet outdoor_humi = flow.get('outdoor_humi');\n\nlet start = flow.get('start') || 1;\n\n// SET\nlet msg1 = { payload: `${room_id}`, topic: `room_id`};\nlet msg2 = { payload: `${temp}`, topic: `temp`};\nlet msg3 = { payload: `${min_temp}`, topic: `min_temp`};\nlet msg4 = { payload: `${max_temp}`, topic: `max_temp`};\nlet msg5 = { payload: `${outdoor_temp}`, topic: `outdoor_temp`};\n\nlet msg6 = { payload: `${humi}`, topic: `humi`};\nlet msg7 = { payload: `${min_humidity}`, topic: `min_humidity`};\nlet msg8 = { payload: `${max_humidity}`, topic: `max_humidity`};\nlet msg9 = { payload: `${outdoor_humi}`, topic: `outdoor_humi`};\n\nlet msg10 = { payload: `${start}`, topic: `start`};\n\n// MSG\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10];",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 860,
        "wires": [
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ],
            [
                "e1cc84327eac1239"
            ]
        ]
    },
    {
        "id": "1b559199e0fd7c62",
        "type": "complete",
        "z": "c17bc758ed437b81",
        "name": "",
        "scope": [
            "16ba596376f91e9b"
        ],
        "uncaught": false,
        "x": 150,
        "y": 380,
        "wires": [
            [
                "702d7e804451aced"
            ]
        ]
    },
    {
        "id": "e6e89d341c5f649d",
        "type": "complete",
        "z": "c17bc758ed437b81",
        "name": "",
        "scope": [
            "16970dffacf6bc26"
        ],
        "uncaught": false,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "b0e57c5a936be6c7"
            ]
        ]
    },
    {
        "id": "f349f803c46601ec",
        "type": "complete",
        "z": "c17bc758ed437b81",
        "name": "",
        "scope": [
            "62753ac2c81ba937"
        ],
        "uncaught": false,
        "x": 150,
        "y": 600,
        "wires": [
            [
                "ecd638fc4ca0801d",
                "bf85fc7dd053c3db",
                "b9acee64d698dae5",
                "b142da1b9535e25d"
            ]
        ]
    },
    {
        "id": "96b6e49993e26fc0",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "Room Settings",
        "info": "",
        "x": 620,
        "y": 180,
        "wires": []
    },
    {
        "id": "ab985291827915b2",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\n// SET\nmin_temp = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('min_temp', min_temp);\n\n// MSG\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 220,
        "wires": [
            [
                "eb0f0910bc6bb0f9",
                "d60a900e7850ef07"
            ]
        ]
    },
    {
        "id": "1426550748a7da6d",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "max_temp",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp');\n\n// SET\nmax_temp = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('max_temp', max_temp);\n\n// MSG\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "baa1865a4590dabc",
                "a4dd069fac167b97"
            ]
        ]
    },
    {
        "id": "eb0f0910bc6bb0f9",
        "type": "ui_numeric",
        "z": "2486ad55b5b55cef",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "03604adbe40ccb34",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 890,
        "y": 220,
        "wires": [
            [
                "5158af8538184700",
                "d60a900e7850ef07"
            ]
        ]
    },
    {
        "id": "baa1865a4590dabc",
        "type": "ui_numeric",
        "z": "2486ad55b5b55cef",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "03604adbe40ccb34",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 880,
        "y": 280,
        "wires": [
            [
                "7e80310474784724",
                "a4dd069fac167b97"
            ]
        ]
    },
    {
        "id": "d60a900e7850ef07",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "tempMin",
        "func": "msg.topic = `tempMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 180,
        "wires": [
            [
                "baa1865a4590dabc"
            ]
        ]
    },
    {
        "id": "5158af8538184700",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "SET min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\n// SET\nmin_temp = msg.payload;\n\n// FLOAT SET\nflow.set('min_temp', min_temp);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7e80310474784724",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "SET max_temp",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp');\n\n// SET\nmax_temp = msg.payload;\n\n// FLOAT SET\nflow.set('max_temp', max_temp);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "a4dd069fac167b97",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 320,
        "wires": [
            [
                "eb0f0910bc6bb0f9"
            ]
        ]
    },
    {
        "id": "2a4aa189f5caa6a5",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\noutdoor_temp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_temp', outdoor_temp);\n\n// MSG\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 640,
        "wires": [
            [
                "de0111d7fa90a68e",
                "1865e7d63ca47bc6",
                "ce2fbcda965e5631"
            ]
        ]
    },
    {
        "id": "de0111d7fa90a68e",
        "type": "ui_text",
        "z": "2486ad55b5b55cef",
        "group": "cc7d80cc7bb13156",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text Outdoor Temp",
        "label": "Temperatur",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1270,
        "y": 640,
        "wires": []
    },
    {
        "id": "4b524c07f9857e0d",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "chart temp (Indoor)",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 760,
        "wires": [
            [
                "2d916999b75bee08"
            ]
        ]
    },
    {
        "id": "1865e7d63ca47bc6",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "chart outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 720,
        "wires": [
            [
                "2d916999b75bee08"
            ]
        ]
    },
    {
        "id": "ce2fbcda965e5631",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "chart Temp ui_control",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\ntemp = temp;\noutdoor_temp = outdoor_temp;\n\n// SET\nlet start = -20;\nlet end = 50;\n\nif(temp > outdoor_temp) {\n    start = Math.round(outdoor_temp - 5);\n    end = Math.round(temp + 1);\n    //end = temp;\n} else {\n    start = Math.round(temp + 5);\n    end = Math.round(outdoor_temp - 1);\n}\n\nif(outdoor_temp < 0) {\n    start = Math.ceil(outdoor_temp - 1);\n} else {\n    start = 0;\n}\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 680,
        "wires": [
            [
                "2d916999b75bee08"
            ]
        ]
    },
    {
        "id": "7ac83d7f6f73848e",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "View: Outdoor",
        "info": "",
        "x": 1250,
        "y": 600,
        "wires": []
    },
    {
        "id": "6391dbf11f455d29",
        "type": "link in",
        "z": "2486ad55b5b55cef",
        "name": "from Room3",
        "links": [
            "b6486a3ecfc76959"
        ],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "55f34206771158b5"
            ]
        ],
        "l": true
    },
    {
        "id": "691a2cace0f92113",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\nmin_temp = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('min_temp', min_temp);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 500,
        "wires": [
            [
                "e30eb3385d954823",
                "d62a3cf68977be3a",
                "797539849cbf950f"
            ]
        ]
    },
    {
        "id": "c385f138aaf52d1a",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\n\ntemp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('temp', temp);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 420,
        "wires": [
            [
                "e30eb3385d954823",
                "797539849cbf950f",
                "4b524c07f9857e0d",
                "ce2fbcda965e5631"
            ]
        ]
    },
    {
        "id": "b6d7e9f4b2bb4771",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "max_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('max_temp');\n\nmax_temp = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('max_temp', max_temp);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 460,
        "wires": [
            [
                "e30eb3385d954823",
                "2d0c57defb9eea1c",
                "797539849cbf950f"
            ]
        ]
    },
    {
        "id": "910bd6ad73d06fb5",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "room_id",
        "func": "// FLOAT GET\nlet room_id = flow.get('room_id');\n\n// SET\nroom_id = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('room_id', room_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e30eb3385d954823",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "gauge Temp ui_control",
        "func": "// GLOBAL GET\nlet gauge_toleranz = global.get('gauge_toleranz');\n\n// FLOW GET\nlet temp = flow.get('temp');\n\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\nlet start = 0;\nlet end = 40;\n\n// SET\nstart = min_temp - gauge_toleranz;\nend = max_temp + gauge_toleranz;\n\n// MSG\nmsg.topic = 'Â°C';\nmsg = {ui_control:{min:start, max:end, seg1:min_temp, seg2:max_temp}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 420,
        "wires": [
            [
                "fecbcdf22ce7e9c4",
                "c981663060abebd5"
            ]
        ]
    },
    {
        "id": "c981663060abebd5",
        "type": "ui_gauge",
        "z": "2486ad55b5b55cef",
        "name": "gauge Temp",
        "group": "03604adbe40ccb34",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "Â°C",
        "format": "{{msg.payload.toFixed(1)}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#afd1fd",
            "#00b500",
            "#ff7f0e"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1250,
        "y": 500,
        "wires": []
    },
    {
        "id": "797539849cbf950f",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "chart Temp ui_control",
        "func": "// GLOBAL GET\nlet gauge_toleranz = global.get('gauge_toleranz');\n\n// FLOW GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\nlet start = 0;\nlet end = 40;\n\n// SET\nstart = min_temp - gauge_toleranz;\nend = max_temp + gauge_toleranz;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 460,
        "wires": [
            [
                "a206d41215c67685"
            ]
        ]
    },
    {
        "id": "2d0c57defb9eea1c",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "chart Temp max_temp",
        "func": "// FLOW GET\nlet max_temp = flow.get('max_temp');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 500,
        "wires": [
            [
                "a206d41215c67685"
            ]
        ]
    },
    {
        "id": "d62a3cf68977be3a",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "chart Temp min_temp",
        "func": "// FLOW GET\nlet min_temp = flow.get('min_temp');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 540,
        "wires": [
            [
                "a206d41215c67685"
            ]
        ]
    },
    {
        "id": "23f6b93c35b10686",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "SET room_id",
        "info": "",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "fecbcdf22ce7e9c4",
        "type": "ui_gauge",
        "z": "2486ad55b5b55cef",
        "name": "gauge Temp Room3",
        "group": "ad98f78e05e079c5",
        "order": 5,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#afd1fd",
            "#00b500",
            "#ff7f0e"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1280,
        "y": 420,
        "wires": []
    },
    {
        "id": "87afde3cf385aad8",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "VIEW: Home",
        "info": "",
        "x": 1250,
        "y": 380,
        "wires": []
    },
    {
        "id": "0d4bc9439d01afa9",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "VIEW: Temperatur",
        "info": "",
        "x": 1270,
        "y": 460,
        "wires": []
    },
    {
        "id": "55f34206771158b5",
        "type": "switch",
        "z": "2486ad55b5b55cef",
        "name": "receive Temp",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "room_id",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_temp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 290,
        "y": 440,
        "wires": [
            [
                "910bd6ad73d06fb5"
            ],
            [
                "c385f138aaf52d1a"
            ],
            [
                "691a2cace0f92113",
                "ab985291827915b2"
            ],
            [
                "b6d7e9f4b2bb4771",
                "1426550748a7da6d"
            ],
            [
                "2a4aa189f5caa6a5"
            ]
        ]
    },
    {
        "id": "c80e07cf73ed38ae",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "VIEW: Settings",
        "info": "",
        "x": 900,
        "y": 140,
        "wires": []
    },
    {
        "id": "93e2f8e69dec4482",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "Room Values",
        "info": "",
        "x": 610,
        "y": 380,
        "wires": []
    },
    {
        "id": "775807e73da1f840",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "Outdoor Values",
        "info": "",
        "x": 620,
        "y": 600,
        "wires": []
    },
    {
        "id": "c93d7bf9c726c493",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "receive Vars",
        "info": "",
        "x": 290,
        "y": 360,
        "wires": []
    },
    {
        "id": "0604e0c9463f57e2",
        "type": "ui_button",
        "z": "2486ad55b5b55cef",
        "name": "Button",
        "group": "03604adbe40ccb34",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Einstellungen speichern",
        "tooltip": "",
        "color": "#666666",
        "bgcolor": "#f9f9f9",
        "className": "",
        "icon": "fa-cogs",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 860,
        "wires": [
            [
                "b3d51e5993946528"
            ]
        ]
    },
    {
        "id": "b3d51e5993946528",
        "type": "function",
        "z": "2486ad55b5b55cef",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet room_id = flow.get('room_id');\n\n// MSG\nmsg.topic = \"UPDATE `room_settings` SET `min_temp` = '\" + min_temp + \"', `max_temp` = '\" + max_temp + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 860,
        "wires": [
            [
                "ac7efc9898a3807b"
            ]
        ]
    },
    {
        "id": "7f058e99b9803108",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "Update: Settings",
        "info": "",
        "x": 620,
        "y": 820,
        "wires": []
    },
    {
        "id": "ac7efc9898a3807b",
        "type": "mysql",
        "z": "2486ad55b5b55cef",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 860,
        "wires": [
            [
                "e8545cdfa792a843"
            ]
        ]
    },
    {
        "id": "1007a1ac6b2bce0a",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "SET min_temp, max_temp",
        "info": "",
        "x": 1290,
        "y": 180,
        "wires": []
    },
    {
        "id": "e8545cdfa792a843",
        "type": "link out",
        "z": "2486ad55b5b55cef",
        "name": "send Room3TempMinMax",
        "mode": "link",
        "links": [
            "4dbcf5a660dd0fec"
        ],
        "x": 1290,
        "y": 860,
        "wires": [],
        "l": true
    },
    {
        "id": "ee9e0f5c27f64139",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "send to",
        "info": "",
        "x": 1230,
        "y": 820,
        "wires": []
    },
    {
        "id": "764a614dd5f1492c",
        "type": "comment",
        "z": "2486ad55b5b55cef",
        "name": "come in",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "a206d41215c67685",
        "type": "ui_chart",
        "z": "2486ad55b5b55cef",
        "name": "chart Temp",
        "group": "03604adbe40ccb34",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#afd1fd",
            "#ff8214",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "2d916999b75bee08",
        "type": "ui_chart",
        "z": "2486ad55b5b55cef",
        "name": "chart Outdoor & Indoor temp",
        "group": "cc7d80cc7bb13156",
        "order": 2,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1300,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e7aa81946e4ab7f9",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "come in",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "71f92cd2ed88ff15",
        "type": "link in",
        "z": "51c9f40cab9897be",
        "name": "from Room3",
        "links": [
            "ba7272d46060c9c4"
        ],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "d76ebef0f3d45de3"
            ]
        ],
        "l": true
    },
    {
        "id": "737271beb23c8519",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "receive Vars",
        "info": "",
        "x": 290,
        "y": 360,
        "wires": []
    },
    {
        "id": "d76ebef0f3d45de3",
        "type": "switch",
        "z": "51c9f40cab9897be",
        "name": "receive Humi",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "room_id",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_humi",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 290,
        "y": 440,
        "wires": [
            [
                "ca24807335af7f72"
            ],
            [
                "b7c55f127bf709f5"
            ],
            [
                "928239c40a703f55",
                "233d37857dcde9c5"
            ],
            [
                "c33b2694d7bffc8f",
                "435c3fa872ce9fcc"
            ],
            [
                "4f792ebd1f0c21ef"
            ]
        ]
    },
    {
        "id": "a78f87ebba81dc61",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "SET room_id",
        "info": "",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "ca24807335af7f72",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "room_id",
        "func": "// FLOAT GET\nlet room_id = flow.get('room_id');\n\n// SET\nroom_id = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('room_id', room_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "478f6f846c4f2e2d",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "Room Settings",
        "info": "",
        "x": 620,
        "y": 180,
        "wires": []
    },
    {
        "id": "928239c40a703f55",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "min_humidity",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_humidity');\n\n// SET\nmin_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "d3329fa7ae759032",
                "4554b8a45fc89ea6"
            ]
        ]
    },
    {
        "id": "c33b2694d7bffc8f",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nmax_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 280,
        "wires": [
            [
                "8ca5d7cb24b742cf",
                "37280f4b94047edc"
            ]
        ]
    },
    {
        "id": "d3329fa7ae759032",
        "type": "ui_numeric",
        "z": "51c9f40cab9897be",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "fd0cbb5183778ce4",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 890,
        "y": 220,
        "wires": [
            [
                "b902f86ac62f4d02",
                "4554b8a45fc89ea6"
            ]
        ]
    },
    {
        "id": "8ca5d7cb24b742cf",
        "type": "ui_numeric",
        "z": "51c9f40cab9897be",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "fd0cbb5183778ce4",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 880,
        "y": 280,
        "wires": [
            [
                "b0fa8d86c48a00ae",
                "37280f4b94047edc"
            ]
        ]
    },
    {
        "id": "4554b8a45fc89ea6",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "humidityMin",
        "func": "msg.topic = `humidityMax`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "8ca5d7cb24b742cf"
            ]
        ]
    },
    {
        "id": "b902f86ac62f4d02",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "SET min_humidity",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\n\n// SET\nmin_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b0fa8d86c48a00ae",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "SET max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nmax_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "37280f4b94047edc",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "humidityMax",
        "func": "msg.topic = `humidityMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 320,
        "wires": [
            [
                "d3329fa7ae759032"
            ]
        ]
    },
    {
        "id": "84710862430431f4",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "VIEW: Settings",
        "info": "",
        "x": 900,
        "y": 140,
        "wires": []
    },
    {
        "id": "a926b773615b9d50",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "SET min_temp, max_temp",
        "info": "",
        "x": 1290,
        "y": 180,
        "wires": []
    },
    {
        "id": "233d37857dcde9c5",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "min_humidity",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\n\nmin_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 500,
        "wires": [
            [
                "15cfb12d69248287",
                "d8cad49edc93e6a8"
            ]
        ]
    },
    {
        "id": "b7c55f127bf709f5",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "humi",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\n\nhumi = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('humi', humi);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 420,
        "wires": [
            [
                "15cfb12d69248287",
                "7b0b6ca49f1c5029",
                "b94f3fbe71b33239"
            ]
        ]
    },
    {
        "id": "435c3fa872ce9fcc",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\nmax_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 460,
        "wires": [
            [
                "15cfb12d69248287",
                "cee36553faa402ce"
            ]
        ]
    },
    {
        "id": "15cfb12d69248287",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "gauge Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = '%';\nmsg = {ui_control:{min:start, max:end, seg1:min_humidity, seg2:max_humidity}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 420,
        "wires": [
            [
                "d2d53a8f1f51edbb",
                "a3ccfbd75a77fad4"
            ]
        ]
    },
    {
        "id": "a3ccfbd75a77fad4",
        "type": "ui_gauge",
        "z": "51c9f40cab9897be",
        "name": "donat Humi",
        "group": "fd0cbb5183778ce4",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#afd1fd",
            "#00b500",
            "#ff7f0e"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1250,
        "y": 500,
        "wires": []
    },
    {
        "id": "7b0b6ca49f1c5029",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "chart Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 460,
        "wires": [
            [
                "0de2d1ba6cb397d7"
            ]
        ]
    },
    {
        "id": "cee36553faa402ce",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "chart Humi max_humidity",
        "func": "// FLOW GET\nlet max_humidity = flow.get('max_humidity');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 500,
        "wires": [
            [
                "0de2d1ba6cb397d7"
            ]
        ]
    },
    {
        "id": "d8cad49edc93e6a8",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "chart Humi min_humidity",
        "func": "// FLOW GET\nlet min_humidity = flow.get('min_humidity');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 540,
        "wires": [
            [
                "0de2d1ba6cb397d7"
            ]
        ]
    },
    {
        "id": "d2d53a8f1f51edbb",
        "type": "ui_gauge",
        "z": "51c9f40cab9897be",
        "name": "gauge Humi Room3",
        "group": "ad98f78e05e079c5",
        "order": 5,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#afd1fd",
            "#00b500",
            "#ff7f0e"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1280,
        "y": 420,
        "wires": []
    },
    {
        "id": "c89a4361dd77cbdf",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "VIEW: Home",
        "info": "",
        "x": 1250,
        "y": 380,
        "wires": []
    },
    {
        "id": "f7d4056e027b8676",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "VIEW: Luftfeuchtigkeit",
        "info": "",
        "x": 1280,
        "y": 460,
        "wires": []
    },
    {
        "id": "c019a96f014a639d",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "Room Values",
        "info": "",
        "x": 610,
        "y": 380,
        "wires": []
    },
    {
        "id": "fd18a594c94e2cba",
        "type": "ui_button",
        "z": "51c9f40cab9897be",
        "name": "Button",
        "group": "fd0cbb5183778ce4",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Einstellungen speichern",
        "tooltip": "",
        "color": "#666666",
        "bgcolor": "#f9f9f9",
        "className": "",
        "icon": "fa-cogs",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 860,
        "wires": [
            [
                "3ab13221ac849fbf"
            ]
        ]
    },
    {
        "id": "3ab13221ac849fbf",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\nlet room_id = flow.get('room_id');\n\n// MSG\nmsg.topic = \"UPDATE `room_settings` SET `min_humidity` = '\" + min_humidity + \"', `max_humidity` = '\" + max_humidity + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 860,
        "wires": [
            [
                "27e20a01292a503d"
            ]
        ]
    },
    {
        "id": "5453157593fd2f9d",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "Update: Settings",
        "info": "",
        "x": 620,
        "y": 820,
        "wires": []
    },
    {
        "id": "27e20a01292a503d",
        "type": "mysql",
        "z": "51c9f40cab9897be",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 860,
        "wires": [
            [
                "4df13d1b0fd64d03"
            ]
        ]
    },
    {
        "id": "4df13d1b0fd64d03",
        "type": "link out",
        "z": "51c9f40cab9897be",
        "name": "send Room3HumiMinMax",
        "mode": "link",
        "links": [
            "81a228fe05be31bd"
        ],
        "x": 1290,
        "y": 860,
        "wires": [],
        "l": true
    },
    {
        "id": "66472ff89308d4a0",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "send to",
        "info": "",
        "x": 1230,
        "y": 820,
        "wires": []
    },
    {
        "id": "4f792ebd1f0c21ef",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\noutdoor_humi = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_humi', outdoor_humi);\n\n// MSG\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 640,
        "wires": [
            [
                "2661075cf6171c67",
                "983528c78e902764",
                "9b99ef4c25378918"
            ]
        ]
    },
    {
        "id": "2661075cf6171c67",
        "type": "ui_text",
        "z": "51c9f40cab9897be",
        "group": "cc7d80cc7bb13156",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "text Outdoor Humi",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1270,
        "y": 640,
        "wires": []
    },
    {
        "id": "b94f3fbe71b33239",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "chart humi (Indoor)",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 760,
        "wires": [
            [
                "fad6f80bb6d035d5"
            ]
        ]
    },
    {
        "id": "983528c78e902764",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "chart outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 720,
        "wires": [
            [
                "fad6f80bb6d035d5"
            ]
        ]
    },
    {
        "id": "9b99ef4c25378918",
        "type": "function",
        "z": "51c9f40cab9897be",
        "name": "chart Humi ui_control",
        "func": "// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 680,
        "wires": [
            [
                "fad6f80bb6d035d5"
            ]
        ]
    },
    {
        "id": "74472cd458d28bdd",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "View: Outdoor",
        "info": "",
        "x": 1250,
        "y": 600,
        "wires": []
    },
    {
        "id": "e28f17b6a88d4ad6",
        "type": "comment",
        "z": "51c9f40cab9897be",
        "name": "Outdoor Values",
        "info": "",
        "x": 620,
        "y": 600,
        "wires": []
    },
    {
        "id": "0de2d1ba6cb397d7",
        "type": "ui_chart",
        "z": "51c9f40cab9897be",
        "name": "chart Humi",
        "group": "fd0cbb5183778ce4",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#afd1fd",
            "#ff8214",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "fad6f80bb6d035d5",
        "type": "ui_chart",
        "z": "51c9f40cab9897be",
        "name": "chart Outdoor & Indoor Humi",
        "group": "cc7d80cc7bb13156",
        "order": 5,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1300,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "67c58ae14f2bb8d4",
        "type": "debug",
        "z": "f3b99d070bda954c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "52a89c0832d10e36",
        "type": "link in",
        "z": "f3b99d070bda954c",
        "name": "from Room3",
        "links": [
            "7165816dbf7caebc"
        ],
        "x": 210,
        "y": 160,
        "wires": [
            [
                "67c58ae14f2bb8d4",
                "74a69b3293e88cd0",
                "92589365f80bbe9f",
                "0e822b36bad1ea8b"
            ]
        ],
        "l": true
    },
    {
        "id": "6ac8fff8030a1790",
        "type": "ui_text",
        "z": "f3b99d070bda954c",
        "group": "531c317b58636708",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "value updated",
        "label": "Update",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 880,
        "y": 320,
        "wires": []
    },
    {
        "id": "f2a68b2c642d9e07",
        "type": "comment",
        "z": "f3b99d070bda954c",
        "name": "View: Updated",
        "info": "",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "5cdd59b1a3aa9be7",
        "type": "ui_text",
        "z": "f3b99d070bda954c",
        "group": "531c317b58636708",
        "order": 2,
        "width": "5",
        "height": "1",
        "name": "value Type",
        "label": "<h4>{{msg.payload}}</h4>",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 870,
        "y": 160,
        "wires": []
    },
    {
        "id": "92589365f80bbe9f",
        "type": "function",
        "z": "f3b99d070bda954c",
        "name": "Typ",
        "func": "let text = `Shelly H&T`;\nmsg.payload = text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 160,
        "wires": [
            [
                "5cdd59b1a3aa9be7"
            ]
        ]
    },
    {
        "id": "74a69b3293e88cd0",
        "type": "switch",
        "z": "f3b99d070bda954c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "updated",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "battery",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 360,
        "wires": [
            [
                "e3658bdb080c5bad"
            ],
            [
                "2b1c6a05410cf867"
            ]
        ]
    },
    {
        "id": "2b1c6a05410cf867",
        "type": "ui_text",
        "z": "f3b99d070bda954c",
        "group": "531c317b58636708",
        "order": 7,
        "width": "5",
        "height": "1",
        "name": "value battery",
        "label": "Batterie",
        "format": "{{msg.payload}}%",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "e3658bdb080c5bad",
        "type": "subflow:e18e6af424e314bf",
        "z": "f3b99d070bda954c",
        "x": 660,
        "y": 320,
        "wires": [
            [
                "6ac8fff8030a1790"
            ]
        ]
    },
    {
        "id": "1e63cf735f0c68bc",
        "type": "ui_text",
        "z": "f3b99d070bda954c",
        "group": "531c317b58636708",
        "order": 6,
        "width": "1",
        "height": "1",
        "name": "icon battery-half",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 1100,
        "y": 400,
        "wires": []
    },
    {
        "id": "da34cd9be0464776",
        "type": "ui_text",
        "z": "f3b99d070bda954c",
        "group": "531c317b58636708",
        "order": 4,
        "width": "1",
        "height": "1",
        "name": "icon fa-clock-o",
        "label": "",
        "format": "<i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "d50584c8989b637d",
        "type": "ui_text",
        "z": "f3b99d070bda954c",
        "group": "531c317b58636708",
        "order": 1,
        "width": "1",
        "height": "1",
        "name": "fa-info-circle",
        "label": "",
        "format": "<i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 1090,
        "y": 160,
        "wires": []
    },
    {
        "id": "0e822b36bad1ea8b",
        "type": "function",
        "z": "f3b99d070bda954c",
        "name": "Info",
        "func": "let text = `Sendet Daten, wenn sich die Temperatur um 1Â°C oder die Luftfeuchtigkeit um 3% Ã¤ndert.`;\nmsg.payload = text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 240,
        "wires": [
            [
                "20afaea0bcc32d40"
            ]
        ]
    },
    {
        "id": "20afaea0bcc32d40",
        "type": "ui_text",
        "z": "f3b99d070bda954c",
        "group": "531c317b58636708",
        "order": 3,
        "width": "6",
        "height": "2",
        "name": "value Info",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 860,
        "y": 240,
        "wires": []
    },
    {
        "id": "5eeb3a84add41a58",
        "type": "comment",
        "z": "f3b99d070bda954c",
        "name": "View: Typ",
        "info": "",
        "x": 860,
        "y": 120,
        "wires": []
    },
    {
        "id": "03ce9bd07684b5c2",
        "type": "comment",
        "z": "f3b99d070bda954c",
        "name": "View: Info",
        "info": "",
        "x": 860,
        "y": 200,
        "wires": []
    },
    {
        "id": "e536f609beb2d389",
        "type": "comment",
        "z": "f3b99d070bda954c",
        "name": "View: Battery",
        "info": "",
        "x": 870,
        "y": 360,
        "wires": []
    },
    {
        "id": "88fdca8bb4cdf9e9",
        "type": "comment",
        "z": "f3b99d070bda954c",
        "name": "come in",
        "info": "",
        "x": 190,
        "y": 120,
        "wires": []
    },
    {
        "id": "be54566c832342e2",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "come in",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "d56035138365aeec",
        "type": "link in",
        "z": "69fdc5107ac1bf2c",
        "name": "from Room3",
        "links": [
            "8193fb9ce2bf8e25"
        ],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "1cb1bd0bd933c41e"
            ]
        ],
        "l": true
    },
    {
        "id": "1cb1bd0bd933c41e",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "receive Control",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "room_id",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_humi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 300,
        "y": 360,
        "wires": [
            [
                "37922b842b8cac87"
            ],
            [
                "9aee21b99077c56d"
            ],
            [
                "9743151ccfbf9959"
            ],
            [
                "0098533d094479ad"
            ],
            [
                "d4793319dbd3555e"
            ],
            [
                "e13aca1f696fabed"
            ],
            [
                "a5ce69f14e74be84"
            ],
            [
                "a87acbcedac23f2b"
            ],
            [
                "d374f95e942ffc4b"
            ],
            [
                "0ec668d2b345590a",
                "68009698c7a23abc"
            ]
        ]
    },
    {
        "id": "0d2aa2389027aa9d",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "receive Vars",
        "info": "",
        "x": 290,
        "y": 260,
        "wires": []
    },
    {
        "id": "37922b842b8cac87",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "room_id",
        "func": "// FLOAT GET\nlet room_id = flow.get('room_id');\n\n// SET\nroom_id = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('room_id', room_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d079cb7aa4b36258",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "GET & SET Flow Vars",
        "info": "",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "9743151ccfbf9959",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\n// SET\nmin_temp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('min_temp', min_temp);\n\n// MSG\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "0098533d094479ad",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "max_temp",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp');\n\n// SET\nmax_temp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('max_temp', max_temp);\n\n// MSG\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9aee21b99077c56d",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\n\n// SET\ntemp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('temp', temp);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a5ce69f14e74be84",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "min_humidity",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_humidity');\n\n// SET\nmin_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a87acbcedac23f2b",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nmax_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e13aca1f696fabed",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "humi",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\n\n// SET\nhumi = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('humi', humi);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d4793319dbd3555e",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\noutdoor_temp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_temp', outdoor_temp);\n\n// MSG\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "ca67418b84221d22"
            ]
        ]
    },
    {
        "id": "d374f95e942ffc4b",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\noutdoor_humi = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_humi', outdoor_humi);\n\n// MSG\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "217a381df512872f",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 60,
        "wires": []
    },
    {
        "id": "ca67418b84221d22",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "output Temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// SET\nlet opt = '';\nlet min = '';\nlet max = '';\nlet outdoor = '';\nlet outdoor_value = 0;\nlet outdoor_min = 0;\nlet min_diff = 0;\nlet max_diff = 0;\nlet outdoor_diff = 0;\n\n// FCT\nif(temp > outdoor_temp) {\n    outdoor_diff = temp - outdoor_temp;\n    outdoor_value = outdoor_diff.toFixed(2);\n    \n    outdoor_min = min_temp - outdoor_temp;\n    outdoor_min = outdoor_min.toFixed(2);\n    \n    \n    outdoor = `Differenz: + ${outdoor_value}Â°C zu Aussen , + ${outdoor_min}Â°C`;\n}\n\n\nif(min_temp < temp && max_temp > temp) {\n    opt = 'Innerhalb des Toleranzbereich';\n} else {\n    opt = 'Ausserhalb des Toleranzbereich';\n}\n\nif(min_temp < temp) {\n    min_diff = temp - min_temp;\n    min = '+ ' + min_diff.toFixed(2) + `Â°C Ã¼ber Mindestens`;\n} else {\n    min_diff = min_temp - temp;\n    min = '- ' + min_diff.toFixed(2) + `Â°C unter Mindestens`;\n}\n\nif(max_temp < temp) {\n    max_diff = temp - max_temp;\n    max = '+ ' + max_diff.toFixed(2) + `Â°C Ã¼ber Maximal`;\n} else {\n    max_diff = max_temp - temp;\n    max = '- ' + max_diff.toFixed(2) + `Â°C unter Maximal`;\n}\n\n// MSG\nlet msg1 = { payload: `${opt}`, topic: `opt`};\nlet msg2 = { payload: `${min}`, topic: `min`};\nlet msg3 = { payload: `${max}`, topic: `max`};\nlet msg4 = { payload: `${outdoor}`, topic: `outdoor`};\n\nreturn [msg1, msg2, msg3, msg4];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 260,
        "wires": [
            [
                "217a381df512872f"
            ],
            [
                "2471f788729588eb"
            ],
            [
                "e0d56a0f6bcf479f"
            ],
            [
                "2230a3150e26c89d"
            ]
        ]
    },
    {
        "id": "2471f788729588eb",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 100,
        "wires": []
    },
    {
        "id": "e0d56a0f6bcf479f",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 140,
        "wires": []
    },
    {
        "id": "2230a3150e26c89d",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "27025cd73353e2dd",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "View: Empfehlung",
        "info": "",
        "x": 1030,
        "y": 2860,
        "wires": []
    },
    {
        "id": "8c61866e8a45389c",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 7,
        "width": "6",
        "height": "1",
        "name": "text LÃ¼ften",
        "label": "LÃ¼ften",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1050,
        "y": 3060,
        "wires": []
    },
    {
        "id": "e6c43544c2b0aa82",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 10,
        "width": "6",
        "height": "1",
        "name": "text Klimaanlage",
        "label": "Klimaanlage",
        "format": "<i class=\"fa fa-toggle-{{msg.payload}}\" aria-hidden=\"true\"></i>",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 3240,
        "wires": []
    },
    {
        "id": "4e2aaaf293195705",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "text Ventilator Action",
        "label": "Ventilator N",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 2300,
        "wires": []
    },
    {
        "id": "5863cf96b89dbb56",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "OFF",
        "info": "",
        "x": 1790,
        "y": 320,
        "wires": []
    },
    {
        "id": "44fad7a284422d24",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "ON",
        "info": "",
        "x": 1970,
        "y": 320,
        "wires": []
    },
    {
        "id": "8f125c3ca71a6827",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "heat Info",
        "func": "// GET VARIABLEN\nlet heat2 = flow.get('heat') || `off`;\nheat2 = `off`;\n\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n\nlet min = 0;\nlet max = 0;\nlet outdoor = '';\nlet outdoor_value = 0;\nlet outdoor_min = 0;\nlet min_diff = 0;\nlet max_diff = 0;\nlet outdoor_diff = 0;\n\n\nif(min_temp < temp) {\n    min_diff = temp - min_temp;\n    // + Â°C Ã¼ber Mindestens\n    min = min_diff.toFixed(2);\n} else {\n    min_diff = min_temp - temp;\n    // - Â°C unter Maximal\n    min = min_diff.toFixed(2);\n}\n\nif(max_temp < temp) {\n    max_diff = temp - max_temp;\n    // + Â°C Ã¼ber Mindestens\n    max = max_diff.toFixed(2);\n} else {\n    max_diff = max_temp - temp;\n    // - Â°C unter Maximal\n    max = max_diff.toFixed(2);\n}\n\nif(temp < min_temp && temp > outdoor_temp && min_diff < max_diff) {\n    heat2 = `on`;\n}\n\n// SET VARIABLEN\nflow.set('heat2', heat2);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = heat2;\nmsg.topic = 'heat';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2900,
        "wires": [
            [
                "08872cec45202a73",
                "e90a3a686e2d9e9c"
            ]
        ]
    },
    {
        "id": "08872cec45202a73",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 9,
        "width": "6",
        "height": "1",
        "name": "text Heizung",
        "label": "Heizen",
        "format": "<i class=\"fa fa-toggle-{{msg.payload}}\" aria-hidden=\"true\"></i>",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 2900,
        "wires": []
    },
    {
        "id": "51b8d750cde1a072",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window",
        "func": "// GET VARIABLEN\nlet window = flow.get('heat') || `<i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i>`;\nwindow = `<i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i>`;\n\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n\nlet min = 0;\nlet max = 0;\nlet outdoor = '';\nlet outdoor_value = 0;\nlet outdoor_min = 0;\nlet min_diff = 0;\nlet max_diff = 0;\nlet outdoor_diff = 0;\n\n\nif(min_temp < temp) {\n    min_diff = temp - min_temp;\n    // + Â°C Ã¼ber Mindestens\n    min = min_diff.toFixed(2);\n} else {\n    min_diff = min_temp - temp;\n    // - Â°C unter Maximal\n    min = min_diff.toFixed(2);\n}\n\nif(max_temp < temp) {\n    max_diff = temp - max_temp;\n    // + Â°C Ã¼ber Mindestens\n    max = max_diff.toFixed(2);\n} else {\n    max_diff = max_temp - temp;\n    // - Â°C unter Maximal\n    max = max_diff.toFixed(2);\n}\n\nif(temp > min_temp && temp < max_temp && min_diff > max_diff && temp < outdoor_temp) {\n    window = `<i class=\"fa fa-toggle-on\" aria-hidden=\"true\"></i>`;\n}\n\n// SET VARIABLEN\nflow.set('window', window);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3060,
        "wires": [
            [
                "8c61866e8a45389c",
                "2d80959ac7530a37"
            ]
        ]
    },
    {
        "id": "c0c9aa7c4fa37b36",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 8,
        "width": "6",
        "height": "1",
        "name": "text Kurzes LÃ¼ften",
        "label": "Kurzes LÃ¼ften",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1070,
        "y": 3100,
        "wires": []
    },
    {
        "id": "b51a911c41285170",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window",
        "func": "// GET VARIABLEN\nlet window = flow.get('heat') || `<i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i>`;\nwindow = `<i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i>`;\n\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n\nlet min = 0;\nlet max = 0;\nlet outdoor = '';\nlet outdoor_value = 0;\nlet outdoor_min = 0;\nlet min_diff = 0;\nlet max_diff = 0;\nlet outdoor_diff = 0;\n\n\nif(min_temp < temp) {\n    min_diff = temp - min_temp;\n    // + Â°C Ã¼ber Mindestens\n    min = min_diff.toFixed(2);\n} else {\n    min_diff = min_temp - temp;\n    // - Â°C unter Maximal\n    min = min_diff.toFixed(2);\n}\n\nif(max_temp < temp) {\n    max_diff = temp - max_temp;\n    // + Â°C Ã¼ber Mindestens\n    max = max_diff.toFixed(2);\n} else {\n    max_diff = max_temp - temp;\n    // - Â°C unter Maximal\n    max = max_diff.toFixed(2);\n}\n\nif(temp > min_temp && temp < max_temp && min_diff > max_diff && temp > outdoor_temp) {\n    window = `<i class=\"fa fa-toggle-on\" aria-hidden=\"true\"></i>`;\n}\n\n// SET VARIABLEN\nflow.set('window', window);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3100,
        "wires": [
            [
                "c0c9aa7c4fa37b36"
            ]
        ]
    },
    {
        "id": "2d80959ac7530a37",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 3020,
        "wires": []
    },
    {
        "id": "e90a3a686e2d9e9c",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 2960,
        "wires": []
    },
    {
        "id": "12572348d4eb2798",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "cool",
        "func": "// GET VARIABLEN\nlet cool = flow.get('cool') || `off`;\nlet heat2 = flow.get('heat');\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// SET\ncool = `off`;\n\nlet min = 0;\nlet max = 0;\nlet outdoor = '';\nlet outdoor_value = 0;\nlet outdoor_min = 0;\nlet min_diff = 0;\nlet max_diff = 0;\nlet outdoor_diff = 0;\n\n\nif(min_temp < temp) {\n    min_diff = temp - min_temp;\n    // + Â°C Ã¼ber Mindestens\n    min = min_diff.toFixed(2);\n} else {\n    min_diff = min_temp - temp;\n    // - Â°C unter Maximal\n    min = min_diff.toFixed(2);\n}\n\nif(max_temp < temp) {\n    max_diff = temp - max_temp;\n    // + Â°C Ã¼ber Mindestens\n    max = max_diff.toFixed(2);\n} else {\n    max_diff = max_temp - temp;\n    // - Â°C unter Maximal\n    max = max_diff.toFixed(2);\n}\n\nif(heat2 != `on` && temp > max_temp && temp < outdoor_temp) {\n    cool = `on`;\n}\n\n// SET VARIABLEN\nflow.set('cool', cool);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = cool;\nmsg.topic = 'cool';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 3240,
        "wires": [
            [
                "e6c43544c2b0aa82"
            ]
        ]
    },
    {
        "id": "bd7129809ad559a7",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "ca956db1ba3ae622",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "temp_max_diff",
        "label": "Temp {{msg.temp}} Max {{msg.payload}} ",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 620,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9bc63470f0331b0e",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 540,
        "wires": []
    },
    {
        "id": "3f8caba0a654c43a",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "min_temp_diff",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet min_temp_diff = flow.get('min_temp_diff') || {};\n\n// SET\nmin_temp_diff = { payload: 0.00, tendenz: `=`};\n\nif(temp !== min_temp) {\n    if(temp > min_temp) {\n        min_temp_diff = { payload: `${(temp - min_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        min_temp_diff = { payload: `${(min_temp - temp).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// SET VARIABLEN\nflow.set('min_temp_diff', min_temp_diff);\n\n// MSG\nmsg = min_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "9bc63470f0331b0e",
                "b8f237b8e983925f",
                "a9e0f463afcc27bf",
                "3244f632bf7c4c2b"
            ]
        ]
    },
    {
        "id": "b8f237b8e983925f",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "ca956db1ba3ae622",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "temp_min_diff NEW",
        "label": "Temp {{msg.temp}} Min {{msg.payload}} ",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 640,
        "y": 580,
        "wires": []
    },
    {
        "id": "ec51a283f85b40db",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "max_temp_diff",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nlet max_temp_diff = { payload: 0.00, tendenz: `=`};\n\nif(temp !== max_temp) {\n    if(temp > max_temp) {\n        max_temp_diff = temp - max_temp;\n        max_temp_diff = { payload: `${(temp - max_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        max_temp_diff = { payload: `${(max_temp - temp).toFixed(2)}`, tendenz: `<`}\n    }\n}\n\n// SET VARIABLEN\nflow.set('max_temp_diff', max_temp_diff);\n\n// MSG\nmsg = max_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 980,
        "wires": [
            [
                "bd7129809ad559a7",
                "ed777c95f8c02574",
                "0384a26cb2f67fda"
            ]
        ]
    },
    {
        "id": "ecbd54c362a3d6f0",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "tendenz",
        "func": "// GET VARIABLEN\nlet min_temp_diff = flow.get('min_temp_diff');\n\nmin_temp_diff = min_temp_diff.payload;\n\n\nlet max_temp_diff = flow.get('max_temp_diff');\nmax_temp_diff = max_temp_diff.payload;\n\nlet tendenz = flow.get('tendenz') || {};\nlet result = '';\n\nif(min_temp_diff < max_temp_diff) {\n    result = `nÃ¤her an min_temp`;\n    tendenz = { payload: `${min_temp_diff}`, topic: `tendenz`, tendenz: `min`}\n} else {\n    result = `nÃ¤her an max_temp`;\n    tendenz = { payload: `${max_temp_diff}`, topic: `tendenz`, tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('tendenz', tendenz);\n\n//msg.payload = min_temp_diff;\n\nmsg = tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1420,
        "wires": [
            [
                "1625ba62b92e61da",
                "9bb8050d53cac2f1",
                "bce11ce6c7e52617"
            ]
        ]
    },
    {
        "id": "8113711553dcb179",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 1480,
        "wires": []
    },
    {
        "id": "1625ba62b92e61da",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "ca956db1ba3ae622",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "tendenz",
        "label": "tendenz",
        "format": "{{msg.payload}} {{msg.tendenz}}",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 1420,
        "wires": []
    },
    {
        "id": "9bb8050d53cac2f1",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 1480,
        "wires": [
            [
                "8113711553dcb179"
            ],
            [
                "8113711553dcb179"
            ]
        ]
    },
    {
        "id": "bce11ce6c7e52617",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6cdfa588aad1a7fb",
        "type": "ui_toast",
        "z": "69fdc5107ac1bf2c",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "test",
        "name": "",
        "x": 1450,
        "y": 1740,
        "wires": []
    },
    {
        "id": "b215b7b2cbcbdee9",
        "type": "ui_button",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "group": "ca956db1ba3ae622",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1410,
        "y": 1680,
        "wires": [
            [
                "6cdfa588aad1a7fb"
            ]
        ]
    },
    {
        "id": "a9e0f463afcc27bf",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "temp ><= min_temp",
        "property": "tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": ">",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "<",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "=",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 640,
        "y": 680,
        "wires": [
            [
                "a9dc389852df3e6c"
            ],
            [
                "6a45fa316dd6a210"
            ],
            [
                "af8603774c337808"
            ]
        ]
    },
    {
        "id": "a9dc389852df3e6c",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 600,
        "wires": []
    },
    {
        "id": "2392d8f7394d65b1",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": ">",
        "info": "",
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "b536d51cef3e2525",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "<",
        "info": "",
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "cfea659457e4a653",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "=",
        "info": "",
        "x": 870,
        "y": 720,
        "wires": []
    },
    {
        "id": "7bf9f959215a4063",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "Keine Aktion",
        "info": "",
        "x": 1010,
        "y": 560,
        "wires": []
    },
    {
        "id": "194e15390e662202",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "Heizen",
        "info": "",
        "x": 990,
        "y": 640,
        "wires": []
    },
    {
        "id": "b94d49c12dd80f41",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "Kurzes LÃ¼ften",
        "info": "",
        "x": 1010,
        "y": 720,
        "wires": []
    },
    {
        "id": "ed777c95f8c02574",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "temp ><= max_temp",
        "property": "tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": ">",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "<",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "=",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 640,
        "y": 980,
        "wires": [
            [
                "50a737927515b76f"
            ],
            [
                "0e3d1b7122df7e3f"
            ],
            [
                "9f7a2c213a6c879d"
            ]
        ]
    },
    {
        "id": "0e3d1b7122df7e3f",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 980,
        "wires": []
    },
    {
        "id": "546fcbf4c32eff8b",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": ">",
        "info": "",
        "x": 870,
        "y": 860,
        "wires": []
    },
    {
        "id": "78a75994bb00d4d3",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "<",
        "info": "",
        "x": 870,
        "y": 940,
        "wires": []
    },
    {
        "id": "8d48bc1a3160703e",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "=",
        "info": "",
        "x": 870,
        "y": 1020,
        "wires": []
    },
    {
        "id": "327258e7591b78b7",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "KÃ¼hlen",
        "info": "",
        "x": 990,
        "y": 860,
        "wires": []
    },
    {
        "id": "95065c9c1311a778",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "OK",
        "info": "",
        "x": 990,
        "y": 940,
        "wires": []
    },
    {
        "id": "6a45fa316dd6a210",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 680,
        "wires": [
            [
                "18e5fbc0953dcd2f"
            ]
        ]
    },
    {
        "id": "18e5fbc0953dcd2f",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "heat",
        "func": "// GET VARIABLEN\nlet heat = flow.get('heat') || `OFF`;\n\nmsg.payload = heat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "d3da97cf15035857"
            ]
        ]
    },
    {
        "id": "50a737927515b76f",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cool",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 900,
        "wires": [
            [
                "dde155b177eee266"
            ]
        ]
    },
    {
        "id": "af8603774c337808",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 760,
        "wires": [
            [
                "f9897e2b0365cefc"
            ]
        ]
    },
    {
        "id": "0f5f3723ea82da5d",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 760,
        "wires": []
    },
    {
        "id": "d3da97cf15035857",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 680,
        "wires": []
    },
    {
        "id": "f9897e2b0365cefc",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window_shorty",
        "func": "// GET VARIABLEN\nlet window_shorty = flow.get('window_shorty') || `OFF`;\n\nmsg.payload = window_shorty;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 760,
        "wires": [
            [
                "0f5f3723ea82da5d"
            ]
        ]
    },
    {
        "id": "9f7a2c213a6c879d",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1060,
        "wires": [
            [
                "3597ee2a7ecd0240"
            ]
        ]
    },
    {
        "id": "3597ee2a7ecd0240",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window_shorty",
        "func": "// GET VARIABLEN\nlet window_shorty = flow.get('window_shorty') || `OFF`;\n\nmsg.payload = window_shorty;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1060,
        "wires": [
            [
                "cf0422983b111600"
            ]
        ]
    },
    {
        "id": "cf0422983b111600",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 1060,
        "wires": []
    },
    {
        "id": "dde155b177eee266",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "cool",
        "func": "// GET VARIABLEN\nlet cool = flow.get('cool') || `OFF`;\n\nmsg.payload = cool;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 900,
        "wires": [
            [
                "91938e161f1098f0"
            ]
        ]
    },
    {
        "id": "91938e161f1098f0",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 900,
        "wires": []
    },
    {
        "id": "aef8e93069b9d52d",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "min_temp_diff_outdoor",
        "func": "// FLOAT GET\nlet outdoor_temp = flow.get('outdoor_temp');\nlet min_temp = flow.get('min_temp');\nlet min_temp_diff_outdoor = flow.get('min_temp_diff_outdoor') || {};\n\n// SET\nmin_temp_diff_outdoor = { payload: 0.00, tendenz: `=`};\n\nif(outdoor_temp !== min_temp) {\n    if(outdoor_temp > min_temp) {\n        min_temp_diff_outdoor = { payload: `${(outdoor_temp - min_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        min_temp_diff_outdoor = { payload: `${(min_temp - outdoor_temp).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// SET VARIABLEN\nflow.set('min_temp_diff_outdoor', min_temp_diff_outdoor);\n\n// MSG\nmsg = min_temp_diff_outdoor;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1620,
        "wires": [
            [
                "39f1535b22a4d784",
                "8a482b568da4cc63"
            ]
        ]
    },
    {
        "id": "39f1535b22a4d784",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "outdoor_temp to min_temp",
        "property": "tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": ">",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "<",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "=",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 640,
        "y": 1620,
        "wires": [
            [
                "a9f22b5b7631f014",
                "80b64e475c846764"
            ],
            [
                "a545b7e538419b28"
            ],
            [
                "21cd739f1e3f0ef9"
            ]
        ]
    },
    {
        "id": "0ec668d2b345590a",
        "type": "delay",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 3120,
        "wires": [
            [
                "8f125c3ca71a6827",
                "51b8d750cde1a072",
                "b51a911c41285170",
                "12572348d4eb2798"
            ]
        ]
    },
    {
        "id": "a059968d3282fb72",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": ">",
        "info": "",
        "x": 890,
        "y": 1540,
        "wires": []
    },
    {
        "id": "a746e6598d2751ec",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "<",
        "info": "",
        "x": 890,
        "y": 1620,
        "wires": []
    },
    {
        "id": "2b74bfc3f9eba4fb",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "=",
        "info": "",
        "x": 890,
        "y": 1700,
        "wires": []
    },
    {
        "id": "f65c208a2d9a9158",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "max_temp_diff_outdoor",
        "func": "// FLOAT GET\nlet outdoor_temp = flow.get('outdoor_temp');\nlet max_temp = flow.get('max_temp');\nlet max_temp_diff_outdoor = flow.get('max_temp_diff_outdoor') || {};\n\n// SET\nmin_temp_diff_outdoor = { payload: 0.00, tendenz: `=`};\n\nif(outdoor_temp !== max_temp) {\n    if(outdoor_temp > max_temp) {\n        max_temp_diff_outdoor = { payload: `${(outdoor_temp - max_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        max_temp_diff_outdoor = { payload: `${(max_temp - outdoor_temp).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// SET VARIABLEN\nflow.set('max_temp_diff_outdoor', max_temp_diff_outdoor);\n\n// MSG\nmsg = max_temp_diff_outdoor;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2020,
        "wires": [
            [
                "1037cfe7935db79f",
                "477d1d645e72c339",
                "5f4df147351a2360"
            ]
        ]
    },
    {
        "id": "1037cfe7935db79f",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "outdoor_temp to max_temp",
        "property": "tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": ">",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "<",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "=",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 640,
        "y": 1960,
        "wires": [
            [
                "a6aa973f276ca95a"
            ],
            [
                "a49fa3dc9c54de65"
            ],
            [
                "27a475db5733727a"
            ]
        ]
    },
    {
        "id": "a9f22b5b7631f014",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1500,
        "wires": []
    },
    {
        "id": "21cd739f1e3f0ef9",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1740,
        "wires": []
    },
    {
        "id": "27a475db5733727a",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2040,
        "wires": []
    },
    {
        "id": "23e270dc7430ce40",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "=",
        "info": "",
        "x": 910,
        "y": 2000,
        "wires": []
    },
    {
        "id": "fd48eab080322481",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "<",
        "info": "",
        "x": 910,
        "y": 1920,
        "wires": []
    },
    {
        "id": "c0135ed237c9698e",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": ">",
        "info": "",
        "x": 910,
        "y": 1840,
        "wires": []
    },
    {
        "id": "68009698c7a23abc",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "SET FLOW Actions",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "cool",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "air",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 500,
        "wires": [
            [
                "3d1aeed10842c43d",
                "574137f907d612ca",
                "deed053550f6f623"
            ]
        ]
    },
    {
        "id": "3fe2cd3c1a878086",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 300,
        "wires": []
    },
    {
        "id": "3d1aeed10842c43d",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "heat",
        "func": "// GET VARIABLEN\nlet heat = flow.get('heat') || `OFF`;\n\nmsg.payload = heat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 300,
        "wires": [
            [
                "3fe2cd3c1a878086"
            ]
        ]
    },
    {
        "id": "574137f907d612ca",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window_shorty",
        "func": "// GET VARIABLEN\nlet window_shorty = flow.get('window_shorty') || `OFF`;\n\nmsg.payload = window_shorty;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1209.765625,
        "y": 359.75,
        "wires": [
            [
                "f56151a22db7a5df"
            ]
        ]
    },
    {
        "id": "f56151a22db7a5df",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 360,
        "wires": []
    },
    {
        "id": "477d1d645e72c339",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "SET Flow Action",
        "func": "// GET VARIABLEN\nlet heat = flow.get('heat') || `OFF`;\nlet window = flow.get('window') || `OFF`;\nlet window_shorty = flow.get('window_shorty') || `OFF`;\nlet fan = flow.get('fan') || `OFF`;\nlet cool = flow.get('cool') || `OFF`;\n\nmsg.payload = heat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 2120,
        "wires": [
            [
                "bd8189418be2ac2f"
            ]
        ]
    },
    {
        "id": "bd8189418be2ac2f",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2120,
        "wires": []
    },
    {
        "id": "3244f632bf7c4c2b",
        "type": "delay",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 820,
        "wires": [
            [
                "ec51a283f85b40db"
            ]
        ]
    },
    {
        "id": "8dfff09620be1cae",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "Kurzes LÃ¼ften",
        "info": "",
        "x": 1010,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5f4df147351a2360",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "Actions",
        "func": "// FLOWE GET\nlet heat = flow.get('heat') || `OFF`;\nlet window = flow.get('window') || `OFF`;\nlet window_shorty = flow.get('window_shorty') || `OFF`;\nlet fan = flow.get('fan') || `OFF`;\nlet cool = flow.get('cool') || `OFF`;\n\n// SET\nlet msg1 = { payload: `${heat}`, topic: `heat`};\nlet msg2 = { payload: `${window}`, topic: `window`};\nlet msg3 = { payload: `${window_shorty}`, topic: `window_shorty`};\nlet msg4 = { payload: `${fan}`, topic: `fan`};\nlet msg5 = { payload: `${cool}`, topic: `cool`};\n\n// MSG\nreturn [msg1, msg2, msg3, msg4, msg5];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 2200,
        "wires": [
            [
                "20da9fbb17ca4a41",
                "c24cb440cecf6f37"
            ],
            [
                "3cf8374d49f74693"
            ],
            [
                "f54eedefbfdb182a"
            ],
            [
                "69103f9c5e3299bd"
            ],
            [
                "72e3c1dcd83a2c86"
            ]
        ]
    },
    {
        "id": "20da9fbb17ca4a41",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 2120,
        "wires": []
    },
    {
        "id": "de4c5a888e57fbc3",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "text Heizung Action",
        "label": "Heizen N",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 2180,
        "wires": []
    },
    {
        "id": "cff8edd03bcfa4b9",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "&& !",
        "info": "",
        "x": 1110,
        "y": 640,
        "wires": []
    },
    {
        "id": "702898f16d0f774b",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "&& !",
        "info": "",
        "x": 1110,
        "y": 860,
        "wires": []
    },
    {
        "id": "73136bb0e386262f",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "Heizen",
        "info": "",
        "x": 1230,
        "y": 860,
        "wires": []
    },
    {
        "id": "7adc0cd1e2673919",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "KÃ¼hlen",
        "info": "",
        "x": 1230,
        "y": 640,
        "wires": []
    },
    {
        "id": "9e4c473b8d1d3b0c",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "text LÃ¼ften Action",
        "label": "LÃ¼ften N",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 2220,
        "wires": []
    },
    {
        "id": "3cf8374d49f74693",
        "type": "template",
        "z": "69fdc5107ac1bf2c",
        "name": "fa fa-toggle-...",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<i class=\"fa fa-toggle-{{ payload }}\" aria-hidden=\"true\"></i>",
        "output": "str",
        "x": 900,
        "y": 2220,
        "wires": [
            [
                "9e4c473b8d1d3b0c"
            ]
        ]
    },
    {
        "id": "c24cb440cecf6f37",
        "type": "template",
        "z": "69fdc5107ac1bf2c",
        "name": "fa fa-toggle-...",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<i class=\"fa fa-toggle-{{ payload }}\" aria-hidden=\"true\" style=\"backgound-color:green;\"></i>",
        "output": "str",
        "x": 900,
        "y": 2180,
        "wires": [
            [
                "de4c5a888e57fbc3"
            ]
        ]
    },
    {
        "id": "f54eedefbfdb182a",
        "type": "template",
        "z": "69fdc5107ac1bf2c",
        "name": "fa fa-toggle-...",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<i class=\"fa fa-toggle-{{ payload }}\" aria-hidden=\"true\"></i>",
        "output": "str",
        "x": 900,
        "y": 2260,
        "wires": [
            [
                "fe23f57405987c48"
            ]
        ]
    },
    {
        "id": "fe23f57405987c48",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "text Kurzes LÃ¼ften Action",
        "label": "Kurzes LÃ¼ften N",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 2260,
        "wires": []
    },
    {
        "id": "69103f9c5e3299bd",
        "type": "template",
        "z": "69fdc5107ac1bf2c",
        "name": "fa fa-toggle-...",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<i class=\"fa fa-toggle-{{ payload }}\" aria-hidden=\"true\"></i>",
        "output": "str",
        "x": 900,
        "y": 2300,
        "wires": [
            [
                "4e2aaaf293195705"
            ]
        ]
    },
    {
        "id": "72e3c1dcd83a2c86",
        "type": "template",
        "z": "69fdc5107ac1bf2c",
        "name": "fa fa-toggle-...",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<i class=\"fa fa-toggle-{{ payload }}\" aria-hidden=\"true\"></i>",
        "output": "str",
        "x": 900,
        "y": 2340,
        "wires": [
            [
                "6a8c904d9a43b2eb"
            ]
        ]
    },
    {
        "id": "6a8c904d9a43b2eb",
        "type": "ui_text",
        "z": "69fdc5107ac1bf2c",
        "group": "6205839307ff8d8e",
        "order": 5,
        "width": "6",
        "height": "1",
        "name": "text Klimaanlage Action",
        "label": "Klimaanlage N",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 2340,
        "wires": []
    },
    {
        "id": "0384a26cb2f67fda",
        "type": "delay",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 310,
        "y": 1060,
        "wires": [
            [
                "aef8e93069b9d52d",
                "ecbd54c362a3d6f0",
                "94e3cb951a7addc1"
            ]
        ]
    },
    {
        "id": "8a482b568da4cc63",
        "type": "delay",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 290,
        "y": 1700,
        "wires": [
            [
                "f65c208a2d9a9158"
            ]
        ]
    },
    {
        "id": "80b64e475c846764",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 1580,
        "wires": [
            [
                "1603a65bf016fdb6"
            ]
        ]
    },
    {
        "id": "1603a65bf016fdb6",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window",
        "func": "// GET VARIABLEN\nlet window = flow.get('window') || `OFF`;\n\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1580,
        "wires": [
            [
                "0ca34e359d5869f5"
            ]
        ]
    },
    {
        "id": "0ca34e359d5869f5",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a545b7e538419b28",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 926.5625,
        "y": 1659.3333740234375,
        "wires": [
            [
                "14ba09edb509c841"
            ]
        ]
    },
    {
        "id": "14ba09edb509c841",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window",
        "func": "// GET VARIABLEN\nlet window = flow.get('window') || `OFF`;\n\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1266.5625,
        "y": 1659.3333740234375,
        "wires": [
            [
                "91b5b977bf59c090"
            ]
        ]
    },
    {
        "id": "91b5b977bf59c090",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1496.5625,
        "y": 1659.3333740234375,
        "wires": []
    },
    {
        "id": "a6aa973f276ca95a",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1880,
        "wires": [
            [
                "f3941e25704e4330"
            ]
        ]
    },
    {
        "id": "f3941e25704e4330",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window",
        "func": "// GET VARIABLEN\nlet window = flow.get('window') || `OFF`;\n\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1880,
        "wires": [
            [
                "aebe18da796a7aa9"
            ]
        ]
    },
    {
        "id": "aebe18da796a7aa9",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 1880,
        "wires": []
    },
    {
        "id": "a49fa3dc9c54de65",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1960,
        "wires": [
            [
                "e33b389a6ea433d4"
            ]
        ]
    },
    {
        "id": "e33b389a6ea433d4",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "window",
        "func": "// GET VARIABLEN\nlet window = flow.get('window') || `OFF`;\n\nmsg.payload = window;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1960,
        "wires": [
            [
                "9de40eead665afd4"
            ]
        ]
    },
    {
        "id": "9de40eead665afd4",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 1960,
        "wires": []
    },
    {
        "id": "94e3cb951a7addc1",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "minMax tendenz",
        "func": "// GET VARIABLEN\nlet min_temp_diff = flow.get('min_temp_diff');\nlet max_temp_diff = flow.get('max_temp_diff');\nlet min_max_tendenz = flow.get('min_max_tendenz') || {};\n\n// SET\nmin_max_tendenz = { payload: 0.00, mm_tendenz: `=` }\n\nif(min_temp_diff.payload < max_temp_diff.payload) {\n    //result = `nÃ¤her an min_temp`;\n    let str = min_temp_diff.payload;\n    min_max_tendenz = { payload: parseFloat(min_temp_diff.payload), mm_tendenz: `min`}\n} else {\n    //result = `nÃ¤her an max_temp`;\n    min_max_tendenz = { payload: parseFloat(max_temp_diff.payload), mm_tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('min_max_tendenz', min_max_tendenz);\n\n// MSG\nmsg = min_max_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1260,
        "wires": [
            [
                "8bad75cc2c4ce4ba",
                "59f5387d21250d5b",
                "765aaba6a16b7ec2",
                "614ba1781fa835c2",
                "169b4c7481097ba7"
            ]
        ]
    },
    {
        "id": "8bad75cc2c4ce4ba",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1340,
        "wires": []
    },
    {
        "id": "59f5387d21250d5b",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "mm_tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1710,
        "y": 1500,
        "wires": [
            [
                "a15035a4607fa734"
            ],
            [
                "f97c755c84cf8502"
            ]
        ]
    },
    {
        "id": "f97c755c84cf8502",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "max tendenz",
        "func": "// GET VARIABLEN\nlet max_temp_diff = flow.get('max_temp_diff');\nlet max_temp_diff_tendenz = max_temp_diff.tendenz;\n\n// SET\nlet output = 0.00;\n\nif(max_temp_diff_tendenz.payload >= 0.50) {\n    output = 0.50;\n}\n\n// MSG\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 1540,
        "wires": [
            [
                "dc58add12bf08c88"
            ]
        ]
    },
    {
        "id": "f7b5fc8401ecfe76",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0.00",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "0.50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2210,
        "y": 1460,
        "wires": [
            [
                "2980d35f0bdce45d",
                "5b271e593b31ce70",
                "3bdadf9015cdec01"
            ],
            [
                "db1062e41bee13af",
                "c3405946cf2cb149",
                "a032ef8f8d18c9d1"
            ]
        ]
    },
    {
        "id": "a15035a4607fa734",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "min tendenz",
        "func": "// GET VARIABLEN\nlet min_temp_diff = flow.get('min_temp_diff');\nlet min_temp_diff_tendenz = min_temp_diff.tendenz;\n\n// SET\nlet output = 0.00;\n\nif(min_temp_diff.payload >= 0.50) {\n    output = 0.50;\n}\n\n// MSG\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 1460,
        "wires": [
            [
                "f7b5fc8401ecfe76"
            ]
        ]
    },
    {
        "id": "2980d35f0bdce45d",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2532.0069580078125,
        "y": 1399.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "db1062e41bee13af",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2532.0069580078125,
        "y": 1619.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "dc58add12bf08c88",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0.00",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "0.50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2212.0069580078125,
        "y": 1539.6666870117188,
        "wires": [
            [
                "595a7130ade51687",
                "4a89e136ac71be09"
            ],
            [
                "1ba1f524ec3a1e46",
                "2ec86d15abea259d"
            ]
        ]
    },
    {
        "id": "2c94f92f3e18b790",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "min/max",
        "info": "",
        "x": 1720,
        "y": 1460,
        "wires": []
    },
    {
        "id": "5b271e593b31ce70",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2512.0069580078125,
        "y": 1479.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "c3405946cf2cb149",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2512.0069580078125,
        "y": 1699.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "595a7130ade51687",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2532.0069580078125,
        "y": 1779.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "1ba1f524ec3a1e46",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2532.0069580078125,
        "y": 1859.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "4a89e136ac71be09",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2512.0069580078125,
        "y": 1819.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "2ec86d15abea259d",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2512.0069580078125,
        "y": 1899.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "5aa790cec99839b7",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "0.00/0.50",
        "info": "",
        "x": 2222.0069580078125,
        "y": 1419.6666870117188,
        "wires": []
    },
    {
        "id": "0671bc6fa1297a8f",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "0",
        "info": "",
        "x": 2412.0069580078125,
        "y": 1319.6666870117188,
        "wires": []
    },
    {
        "id": "d0710058abbace63",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "1",
        "info": "",
        "x": 2412.0069580078125,
        "y": 1539.6666870117188,
        "wires": []
    },
    {
        "id": "5cf85340a03a4832",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "Kurzes LÃ¼ften",
        "info": "",
        "x": 2492.0069580078125,
        "y": 1359.6666870117188,
        "wires": []
    },
    {
        "id": "867c590df481a93d",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "off",
        "info": "",
        "x": 2732.0069580078125,
        "y": 1359.6666870117188,
        "wires": []
    },
    {
        "id": "1af8daac7571a528",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "LÃ¼ften",
        "info": "",
        "x": 2472.0069580078125,
        "y": 1439.6666870117188,
        "wires": []
    },
    {
        "id": "90d594bb8c560724",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "off",
        "info": "",
        "x": 2732.0069580078125,
        "y": 1439.6666870117188,
        "wires": []
    },
    {
        "id": "6eea03953d2c5ad7",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "Kurzes LÃ¼ften",
        "info": "",
        "x": 2492.0069580078125,
        "y": 1579.6666870117188,
        "wires": []
    },
    {
        "id": "70db1da9b32fadd3",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "LÃ¼ften",
        "info": "",
        "x": 2472.0069580078125,
        "y": 1659.6666870117188,
        "wires": []
    },
    {
        "id": "4eb01c55cee24311",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "on",
        "info": "",
        "x": 2732.0069580078125,
        "y": 1579.6666870117188,
        "wires": []
    },
    {
        "id": "5bd711f9b4fe1f2f",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "on",
        "info": "",
        "x": 2732.0069580078125,
        "y": 1659.6666870117188,
        "wires": []
    },
    {
        "id": "765aaba6a16b7ec2",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "temp >= min_temp && <= max_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(temp >= min_temp && temp <= max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1160,
        "wires": [
            [
                "698df93322b09492"
            ]
        ]
    },
    {
        "id": "698df93322b09492",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1160,
        "wires": [
            [
                "30d0b9639ce4f74f",
                "578cf732ce8592d4"
            ],
            [
                "636ae1357fa092d6"
            ]
        ]
    },
    {
        "id": "9b0f36114c7bc35e",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "0/1",
        "info": "",
        "x": 1390,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3bdadf9015cdec01",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1340,
        "wires": []
    },
    {
        "id": "a032ef8f8d18c9d1",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 1320,
        "wires": []
    },
    {
        "id": "4882bf5d97cff9fa",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "temp > min_temp && temp < max_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(temp > min_temp && temp < max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "d137ac9d024c117a",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "><=",
        "info": "",
        "x": 590,
        "y": 940,
        "wires": []
    },
    {
        "id": "433c4b7a02d048bd",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "><=",
        "info": "",
        "x": 590,
        "y": 640,
        "wires": []
    },
    {
        "id": "614ba1781fa835c2",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "mm_tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 1400,
        "wires": [
            [
                "0501c034f7ce3024"
            ],
            [
                "4e6c83cfffbea620"
            ]
        ]
    },
    {
        "id": "4e6c83cfffbea620",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 1420,
        "wires": []
    },
    {
        "id": "0501c034f7ce3024",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 1380,
        "wires": []
    },
    {
        "id": "30d0b9639ce4f74f",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "temp < min_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\n\n// SET\nresult = 0;\n\nif(temp < min_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1040,
        "wires": [
            [
                "fa59ad61860a0b0a"
            ]
        ]
    },
    {
        "id": "578cf732ce8592d4",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "temp > max_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(temp > max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1100,
        "wires": [
            [
                "16d81be4a59d3668"
            ]
        ]
    },
    {
        "id": "ca9e0eb79bab8965",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "outdoor_temp > min_temp",
        "func": "// FLOAT GET\nlet outdoor_temp  = flow.get('outdoor_temp ');\nlet min_temp = flow.get('min_temp');\n\n// SET\nresult = 0;\n\nif(outdoor_temp > min_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 1040,
        "wires": [
            [
                "a0b6a3229adba023"
            ]
        ]
    },
    {
        "id": "fa59ad61860a0b0a",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1950,
        "y": 1040,
        "wires": [
            [
                "ca9e0eb79bab8965"
            ]
        ]
    },
    {
        "id": "1cabae49c6d41a9b",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "1",
        "info": "",
        "x": 1950,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a0b6a3229adba023",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2390,
        "y": 1040,
        "wires": [
            [
                "0323f2daf926135a",
                "6aab8e6654eaf60b"
            ]
        ]
    },
    {
        "id": "0323f2daf926135a",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "e2eacbe9d7ccf293",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "on",
        "info": "",
        "x": 2570,
        "y": 960,
        "wires": []
    },
    {
        "id": "16d81be4a59d3668",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1950,
        "y": 1100,
        "wires": [
            [
                "9c3215996468f84e"
            ]
        ]
    },
    {
        "id": "9c3215996468f84e",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "outdoor_temp < max_temp",
        "func": "// FLOAT GET\nlet outdoor_temp  = flow.get('outdoor_temp ');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(outdoor_temp < max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 1100,
        "wires": [
            [
                "dbd9d3a697c3d54d"
            ]
        ]
    },
    {
        "id": "dbd9d3a697c3d54d",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2390,
        "y": 1100,
        "wires": [
            [
                "918660b63c1b8f2a",
                "d6748645328284ef"
            ]
        ]
    },
    {
        "id": "918660b63c1b8f2a",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "b4787554ece74b7a",
        "type": "comment",
        "z": "69fdc5107ac1bf2c",
        "name": "1",
        "info": "",
        "x": 2390,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d6748645328284ef",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "6aab8e6654eaf60b",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "169b4c7481097ba7",
        "type": "function",
        "z": "69fdc5107ac1bf2c",
        "name": "humi >= min_humidity && <= max_humidity",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nresult = 0;\n\nif(humi >= min_humidity && humi <= max_humidity) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1240,
        "wires": [
            [
                "cc76dfe51025af03"
            ]
        ]
    },
    {
        "id": "cc76dfe51025af03",
        "type": "switch",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 1240,
        "wires": [
            [],
            [
                "636ae1357fa092d6"
            ]
        ]
    },
    {
        "id": "636ae1357fa092d6",
        "type": "debug",
        "z": "69fdc5107ac1bf2c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1280,
        "wires": []
    },
    {
        "id": "deed053550f6f623",
        "type": "change",
        "z": "69fdc5107ac1bf2c",
        "name": "SET FLOW Vars",
        "rules": [
            {
                "t": "set",
                "p": "temp_ok",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "humi_ok",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "min_temp_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "max_temp_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "min_max_tendenz",
                "pt": "flow",
                "to": "{ payload: \"0.00\", mm_tendenz: `=`}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 560,
        "wires": [
            [
                "3f8caba0a654c43a"
            ]
        ]
    },
    {
        "id": "58ed73d5cd14779a",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "come in",
        "info": "",
        "x": 190,
        "y": 120,
        "wires": []
    },
    {
        "id": "970c76baf0273519",
        "type": "link in",
        "z": "9a8fcf0ce4aab871",
        "name": "from Room3 NEU",
        "links": [
            "e1cc84327eac1239"
        ],
        "x": 220,
        "y": 160,
        "wires": [
            [
                "5f0ec5b02c5c19a7"
            ]
        ],
        "l": true
    },
    {
        "id": "5f0ec5b02c5c19a7",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "receive Control",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "room_id",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_temp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_humidity",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_humi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 220,
        "y": 420,
        "wires": [
            [
                "4c69e7f04e08f848"
            ],
            [
                "7038c8ae1431bc8a"
            ],
            [
                "b605e17f5908ad0a"
            ],
            [
                "d22cea9359b74507"
            ],
            [
                "7ac846a82a99a44a"
            ],
            [
                "e5ec1c00ebbe802c"
            ],
            [
                "4d911b131ed9573c"
            ],
            [
                "03567dd7135a0139"
            ],
            [
                "8a448c802663d99e"
            ],
            [
                "ff4d5d68c6b912f5"
            ]
        ]
    },
    {
        "id": "ee9b01be9c7a2bf5",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "receive Vars",
        "info": "",
        "x": 210,
        "y": 320,
        "wires": []
    },
    {
        "id": "4c69e7f04e08f848",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "room_id",
        "func": "// FLOAT GET\nlet room_id = flow.get('room_id');\n\n// SET\nroom_id = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('room_id', room_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b33d1a42d928871b",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "GET & SET Flow Vars",
        "info": "",
        "x": 560,
        "y": 60,
        "wires": []
    },
    {
        "id": "b605e17f5908ad0a",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\n// SET\nmin_temp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('min_temp', min_temp);\n\n// MSG\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d22cea9359b74507",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "max_temp",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp');\n\n// SET\nmax_temp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('max_temp', max_temp);\n\n// MSG\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "7038c8ae1431bc8a",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\n\n// SET\ntemp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('temp', temp);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4d911b131ed9573c",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_humidity",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_humidity');\n\n// SET\nmin_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "03567dd7135a0139",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nmax_humidity = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e5ec1c00ebbe802c",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "humi",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\n\n// SET\nhumi = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('humi', humi);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7ac846a82a99a44a",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\noutdoor_temp = parseFloat(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_temp', outdoor_temp);\n\n// MSG\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8a448c802663d99e",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\noutdoor_humi = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_humi', outdoor_humi);\n\n// MSG\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "020fd11765025ebc",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "OFF",
        "info": "",
        "x": 1710,
        "y": 340,
        "wires": []
    },
    {
        "id": "373189c947926dbd",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "ON",
        "info": "",
        "x": 1890,
        "y": 340,
        "wires": []
    },
    {
        "id": "aafd6979e406cfc0",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_temp_diff",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet min_temp_diff = flow.get('min_temp_diff');\n\n// SET\nif(temp !== min_temp) {\n    if(temp > min_temp) {\n        min_temp_diff = { payload: `${(temp - min_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        min_temp_diff = { payload: `${(min_temp - temp).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// SET VARIABLEN\nflow.set('min_temp_diff', min_temp_diff);\n\n// MSG\nmsg = min_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 760,
        "wires": [
            [
                "088d95df9bf2976b"
            ]
        ]
    },
    {
        "id": "088d95df9bf2976b",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "max_temp_diff",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet max_temp = flow.get('max_temp');\nlet max_temp_diff = flow.get('max_temp_diff');\n\n// SET\nif(temp !== max_temp) {\n    if(temp > max_temp) {\n        max_temp_diff = temp - max_temp;\n        max_temp_diff = { payload: `${(temp - max_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        max_temp_diff = { payload: `${(max_temp - temp).toFixed(2)}`, tendenz: `<`}\n    }\n}\n\n// SET VARIABLEN\nflow.set('max_temp_diff', max_temp_diff);\n\n// MSG\nmsg = max_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            [
                "2146726bccbb36f9"
            ]
        ]
    },
    {
        "id": "2d290dd55accbd2e",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "tendenz",
        "func": "// GET VARIABLEN\nlet min_temp_diff = flow.get('min_temp_diff');\n\nmin_temp_diff = min_temp_diff.payload;\n\n\nlet max_temp_diff = flow.get('max_temp_diff');\nmax_temp_diff = max_temp_diff.payload;\n\nlet tendenz = flow.get('tendenz') || {};\nlet result = '';\n\nif(min_temp_diff < max_temp_diff) {\n    result = `nÃ¤her an min_temp`;\n    tendenz = { payload: `${min_temp_diff}`, topic: `tendenz`, tendenz: `min`}\n} else {\n    result = `nÃ¤her an max_temp`;\n    tendenz = { payload: `${max_temp_diff}`, topic: `tendenz`, tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('tendenz', tendenz);\n\n//msg.payload = min_temp_diff;\n\nmsg = tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "a1f2e397f2aca9e2",
        "type": "delay",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 1860,
        "wires": [
            [
                "2d290dd55accbd2e",
                "0c149abbd4ad9300"
            ]
        ]
    },
    {
        "id": "0c149abbd4ad9300",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "minMax tendenz",
        "func": "// GET VARIABLEN\nlet min_temp_diff = flow.get('min_temp_diff');\nlet max_temp_diff = flow.get('max_temp_diff');\nlet min_max_tendenz = flow.get('min_max_tendenz') || {};\n\n// SET\nmin_max_tendenz = { payload: 0.00, mm_tendenz: `=` }\n\nif(min_temp_diff.payload < max_temp_diff.payload) {\n    //result = `nÃ¤her an min_temp`;\n    let str = min_temp_diff.payload;\n    min_max_tendenz = { payload: parseFloat(min_temp_diff.payload), mm_tendenz: `min`}\n} else {\n    //result = `nÃ¤her an max_temp`;\n    min_max_tendenz = { payload: parseFloat(max_temp_diff.payload), mm_tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('min_max_tendenz', min_max_tendenz);\n\n// MSG\nmsg = min_max_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1700,
        "wires": [
            [
                "783137cad90e3653",
                "1bd3c8a0c40819a3",
                "699f5f4dfa249e76"
            ]
        ]
    },
    {
        "id": "783137cad90e3653",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "mm_tendenz",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1630,
        "y": 1520,
        "wires": [
            [
                "efbadeedb09cfd6b"
            ],
            [
                "56eda2f6c8d42f88"
            ]
        ]
    },
    {
        "id": "56eda2f6c8d42f88",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "max tendenz",
        "func": "// GET VARIABLEN\nlet max_temp_diff = flow.get('max_temp_diff');\nlet max_temp_diff_tendenz = max_temp_diff.tendenz;\n\n// SET\nlet output = 0.00;\n\nif(max_temp_diff_tendenz.payload >= 0.50) {\n    output = 0.50;\n}\n\n// MSG\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1560,
        "wires": [
            [
                "c965d84314f0ba05"
            ]
        ]
    },
    {
        "id": "28b66947ead5f666",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0.00",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "0.50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2130,
        "y": 1480,
        "wires": [
            [
                "ff0eb470b4b7e3c2",
                "c9844c66ab2237c2",
                "9e087fd042834ab2"
            ],
            [
                "dd7706bfcffb6a75",
                "e440fada9a6db9b1",
                "aea613651b501087"
            ]
        ]
    },
    {
        "id": "efbadeedb09cfd6b",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min tendenz",
        "func": "// GET VARIABLEN\nlet min_temp_diff = flow.get('min_temp_diff');\nlet min_temp_diff_tendenz = min_temp_diff.tendenz;\n\n// SET\nlet output = 0.00;\n\nif(min_temp_diff.payload >= 0.50) {\n    output = 0.50;\n}\n\n// MSG\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1480,
        "wires": [
            [
                "28b66947ead5f666"
            ]
        ]
    },
    {
        "id": "ff0eb470b4b7e3c2",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2452.0069580078125,
        "y": 1419.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "dd7706bfcffb6a75",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2452.0069580078125,
        "y": 1639.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "c965d84314f0ba05",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0.00",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "0.50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2132.0069580078125,
        "y": 1559.6666870117188,
        "wires": [
            [
                "d5d802745e56ef10",
                "e17a33a73329aa4a"
            ],
            [
                "bfeb706d81527d7a",
                "68f310d354833016"
            ]
        ]
    },
    {
        "id": "0988dedf0bdbd227",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "min/max",
        "info": "",
        "x": 1640,
        "y": 1480,
        "wires": []
    },
    {
        "id": "c9844c66ab2237c2",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2432.0069580078125,
        "y": 1499.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "e440fada9a6db9b1",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2432.0069580078125,
        "y": 1719.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "d5d802745e56ef10",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2452.0069580078125,
        "y": 1799.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "bfeb706d81527d7a",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2452.0069580078125,
        "y": 1879.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "e17a33a73329aa4a",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2432.0069580078125,
        "y": 1839.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "68f310d354833016",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2432.0069580078125,
        "y": 1919.6666870117188,
        "wires": [
            []
        ]
    },
    {
        "id": "1c46ef29bbfbf56e",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "0.00/0.50",
        "info": "",
        "x": 2142.0069580078125,
        "y": 1439.6666870117188,
        "wires": []
    },
    {
        "id": "9eb86372d45613dd",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "0",
        "info": "",
        "x": 2332.0069580078125,
        "y": 1339.6666870117188,
        "wires": []
    },
    {
        "id": "9a7c8fe8a2bd840f",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "1",
        "info": "",
        "x": 2332.0069580078125,
        "y": 1559.6666870117188,
        "wires": []
    },
    {
        "id": "a8dcf88d7d5df859",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "Kurzes LÃ¼ften",
        "info": "",
        "x": 2412.0069580078125,
        "y": 1379.6666870117188,
        "wires": []
    },
    {
        "id": "b832bd5f301e950e",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "off",
        "info": "",
        "x": 2652.0069580078125,
        "y": 1379.6666870117188,
        "wires": []
    },
    {
        "id": "7ae6fa228e5ac330",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "LÃ¼ften",
        "info": "",
        "x": 2392.0069580078125,
        "y": 1459.6666870117188,
        "wires": []
    },
    {
        "id": "817490b6bc1da6e1",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "off",
        "info": "",
        "x": 2652.0069580078125,
        "y": 1459.6666870117188,
        "wires": []
    },
    {
        "id": "0cff0120b0be77b6",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "Kurzes LÃ¼ften",
        "info": "",
        "x": 2412.0069580078125,
        "y": 1599.6666870117188,
        "wires": []
    },
    {
        "id": "36e23c3587bf331a",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "LÃ¼ften",
        "info": "",
        "x": 2392.0069580078125,
        "y": 1679.6666870117188,
        "wires": []
    },
    {
        "id": "629b5a4f23758ece",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "on",
        "info": "",
        "x": 2652.0069580078125,
        "y": 1599.6666870117188,
        "wires": []
    },
    {
        "id": "a159ad3008ce691a",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "on",
        "info": "",
        "x": 2652.0069580078125,
        "y": 1679.6666870117188,
        "wires": []
    },
    {
        "id": "1bd3c8a0c40819a3",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "temp >= min_temp && <= max_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(temp >= min_temp && temp <= max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1600,
        "wires": [
            [
                "66e9b1124453d67e"
            ]
        ]
    },
    {
        "id": "66e9b1124453d67e",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1600,
        "wires": [
            [
                "9af3bfb269a5d75c",
                "81dc95a5d7905a7e"
            ],
            [
                "e86f5d7607add148"
            ]
        ]
    },
    {
        "id": "47a2754b650c9fbf",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "0/1",
        "info": "",
        "x": 1310,
        "y": 1560,
        "wires": []
    },
    {
        "id": "9e087fd042834ab2",
        "type": "debug",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2150,
        "y": 1360,
        "wires": []
    },
    {
        "id": "aea613651b501087",
        "type": "debug",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 1340,
        "wires": []
    },
    {
        "id": "53d5a309473c7c4f",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "temp > min_temp && temp < max_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(temp > min_temp && temp < max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "9af3bfb269a5d75c",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "temp < min_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\n\n// SET\nresult = 0;\n\nif(temp < min_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 1140,
        "wires": [
            [
                "ac8c6ee47c469a7c"
            ]
        ]
    },
    {
        "id": "81dc95a5d7905a7e",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "temp > max_temp",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(temp > max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 1200,
        "wires": [
            [
                "4bef2f5bd4884391"
            ]
        ]
    },
    {
        "id": "09fc3753b9561916",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_temp > min_temp",
        "func": "// FLOAT GET\nlet outdoor_temp  = flow.get('outdoor_temp ');\nlet min_temp = flow.get('min_temp');\n\n// SET\nresult = 0;\n\nif(outdoor_temp > min_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 1140,
        "wires": [
            [
                "1e5163cbee05558d"
            ]
        ]
    },
    {
        "id": "ac8c6ee47c469a7c",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1890,
        "y": 1140,
        "wires": [
            [
                "09fc3753b9561916"
            ]
        ]
    },
    {
        "id": "77157b3b500cee96",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "1",
        "info": "",
        "x": 1890,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1e5163cbee05558d",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2330,
        "y": 1140,
        "wires": [
            [
                "abeb2c8f9c93b84a",
                "23df624e7e6463db"
            ]
        ]
    },
    {
        "id": "abeb2c8f9c93b84a",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "5ef7d2ec63093fb0",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "on",
        "info": "",
        "x": 2510,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4bef2f5bd4884391",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1890,
        "y": 1200,
        "wires": [
            [
                "fca68e8630e1ab70"
            ]
        ]
    },
    {
        "id": "fca68e8630e1ab70",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_temp < max_temp",
        "func": "// FLOAT GET\nlet outdoor_temp  = flow.get('outdoor_temp ');\nlet max_temp = flow.get('max_temp');\n\n// SET\nresult = 0;\n\nif(outdoor_temp < max_temp) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 1200,
        "wires": [
            [
                "4dde218e39c070b0"
            ]
        ]
    },
    {
        "id": "4dde218e39c070b0",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2330,
        "y": 1200,
        "wires": [
            [
                "aa4777429d5e1901",
                "3fdf9f2c138fd3f3"
            ]
        ]
    },
    {
        "id": "aa4777429d5e1901",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2550,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "613b01698cbba621",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "1",
        "info": "",
        "x": 2330,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3fdf9f2c138fd3f3",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2570,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "23df624e7e6463db",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2570,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "699f5f4dfa249e76",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "humi >= min_humidity && <= max_humidity",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nresult = 0;\n\nif(humi >= min_humidity && humi <= max_humidity) {\n    result = 1;\n}\n\n// MSG\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1680,
        "wires": [
            [
                "e924a7bb710a1601"
            ]
        ]
    },
    {
        "id": "e924a7bb710a1601",
        "type": "switch",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1680,
        "wires": [
            [],
            [
                "e86f5d7607add148"
            ]
        ]
    },
    {
        "id": "e86f5d7607add148",
        "type": "debug",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ff4d5d68c6b912f5",
        "type": "change",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temp_ok",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "outdoor_temp_ok",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "min_temp_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "max_temp_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "min_max_t_tendenz",
                "pt": "flow",
                "to": "{ payload: \"0.00\", mm_tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "min_outdoor_temp_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "max_outdoor_temp_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "min_max_to_tendenz",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "opt_temp_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "humi_ok",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "outdoor_humi_ok",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "min_humi_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "max_humi_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "min_max_h_tendenz",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "min_outdoor_humi_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "max_outdoor_humi_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "min_max_ho_tendenz",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "opt_humi_diff",
                "pt": "flow",
                "to": "{ payload: \"0.00\", tendenz: `=`}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "opt_humi",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "opt_temp",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "temp_tendenz",
                "pt": "flow",
                "to": "opt",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "humi_tendenz",
                "pt": "flow",
                "to": "opt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "2146726bccbb36f9",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_max_t_tendenz",
        "func": "// GET VARIABLEN\nlet min_temp_diff = flow.get('min_temp_diff');\nlet max_temp_diff = flow.get('max_temp_diff');\nlet min_max_t_tendenz = flow.get('min_max_t_tendenz');\n\n// SET\nif(min_temp_diff.payload < max_temp_diff.payload) {\n    min_max_t_tendenz = { payload: parseFloat(min_temp_diff.payload), mmt_tendenz: `min`}\n} else {\n    min_max_t_tendenz = { payload: parseFloat(max_temp_diff.payload), mmt_tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('min_max_t_tendenz', min_max_t_tendenz);\n\n// MSG\nmsg = min_max_t_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "13ea1bce4aa69dde",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_humi_diff",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet min_humi_diff = flow.get('min_humi_diff');\n\n// SET\nif(humi !== min_humidity) {\n    if(humi > min_humidity) {\n        min_humi_diff = { payload: `${(humi - min_humidity).toFixed(2)}`, tendenz: `>`}\n    } else {\n        min_humi_diff = { payload: `${(min_humidity - humi).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// FLOW SET\nflow.set('min_humi_diff', min_humi_diff);\n\n// MSG\nmsg = min_humi_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1200,
        "wires": [
            [
                "761a6166e552b8ec"
            ]
        ]
    },
    {
        "id": "761a6166e552b8ec",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "max_humi_diff",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\nlet max_humidity = flow.get('max_humidity');\nlet max_humi_diff = flow.get('max_humi_diff');\n\n// SET\nif(humi !== max_humi_diff) {\n    if(humi > max_humi_diff) {\n        max_humi_diff = { payload: `${(humi - max_humidity).toFixed(2)}`, tendenz: `>`}\n    } else {\n        max_humi_diff = { payload: `${(max_humidity - humi).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// FLOW SET\nflow.set('max_humi_diff', max_humi_diff);\n\n// MSG\nmsg = max_humi_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1200,
        "wires": [
            [
                "bb5414f26aa54ef2"
            ]
        ]
    },
    {
        "id": "93d5904d919f04a7",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "SET FLOW Vars",
        "info": "",
        "x": 540,
        "y": 480,
        "wires": []
    },
    {
        "id": "bb5414f26aa54ef2",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_max_h_tendenz",
        "func": "// GET VARIABLEN\nlet min_humi_diff = flow.get('min_humi_diff');\nlet max_humi_diff = flow.get('max_humi_diff');\nlet min_max_h_tendenz = flow.get('min_max_h_tendenz');\n\n// SET\nif(min_humi_diff.payload < max_humi_diff.payload) {\n    //result = `nÃ¤her an min_temp`;\n    min_max_h_tendenz = { payload: parseFloat(min_humi_diff.payload), mmh_tendenz: `min`}\n} else {\n    //result = `nÃ¤her an max_temp`;\n    min_max_h_tendenz = { payload: parseFloat(max_humi_diff.payload), mmh_tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('min_max_h_tendenz', min_max_h_tendenz);\n\n// MSG\nmsg = min_max_h_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1200,
        "wires": [
            [
                "a68b70e3e288a15a"
            ]
        ]
    },
    {
        "id": "8f450dbb3eac21c8",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "temp_ok",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet temp_ok = flow.get('temp_ok');\n\n// SET\nif(temp >= min_temp && temp <= max_temp) {\n    temp_ok = 1;\n}\n\n// FLOW SET\nflow.set('temp_ok', temp_ok);\n\n// MSG\nmsg.payload = temp_ok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 680,
        "wires": [
            [
                "1fbc590fcb4a2312"
            ]
        ]
    },
    {
        "id": "24a19b6389c93e72",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "humi_ok",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\nlet humi_ok = flow.get('humi_ok');\n\n// SET\nif(humi >= min_humidity && humi <= max_humidity) {\n    humi_ok = 1;\n}\n\n// FLOW SET\nflow.set('humi_ok', humi_ok);\n\n// MSG\nmsg.payload = humi_ok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1120,
        "wires": [
            [
                "ad7edba7ff30548d"
            ]
        ]
    },
    {
        "id": "2e823635e7b4872a",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "temp > min_temp",
        "info": "",
        "x": 400,
        "y": 720,
        "wires": []
    },
    {
        "id": "f17fcb4b4a43c79e",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "temp > max_temp",
        "info": "",
        "x": 730,
        "y": 720,
        "wires": []
    },
    {
        "id": "5abbc35a9cd7ea5d",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "min_temp_diff< max_temp_diff",
        "info": "",
        "x": 1030,
        "y": 720,
        "wires": []
    },
    {
        "id": "849ab5ba8617dac0",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "humi > min_humidity",
        "info": "",
        "x": 410,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ef7dde5df419dc56",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "humi > max_humi_diff",
        "info": "",
        "x": 740,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1fbc590fcb4a2312",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_temp_ok",
        "func": "// FLOAT GET\nlet outdoor_temp = flow.get('outdoor_temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet outdoor_temp_ok = flow.get('temp_ok');\n\n// SET\nif(outdoor_temp >= min_temp && outdoor_temp <= max_temp) {\n    outdoor_temp_ok = 1;\n}\n\n// FLOW SET\nflow.set('outdoor_temp_ok', outdoor_temp_ok);\n\n// MSG\nmsg.payload = outdoor_temp_ok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "4ce859e0e9e4e9f8",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_temp > min_temp",
        "info": "",
        "x": 430,
        "y": 800,
        "wires": []
    },
    {
        "id": "29860a70d4eb9ea3",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "temp >= min_temp && <= max_temp",
        "info": "",
        "x": 460,
        "y": 640,
        "wires": []
    },
    {
        "id": "c94da5fda66e40b3",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_temp >= min_temp && <= max_temp",
        "info": "",
        "x": 1070,
        "y": 640,
        "wires": []
    },
    {
        "id": "e40c969e339956e6",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "humi >= min_humidity && <= max_humidity",
        "info": "",
        "x": 480,
        "y": 1080,
        "wires": []
    },
    {
        "id": "19c2a772453b5c2b",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "min_humi_diff < max_humi_diff",
        "info": "",
        "x": 1030,
        "y": 1160,
        "wires": []
    },
    {
        "id": "0f79e26c6467b178",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_temp > max_temp",
        "info": "",
        "x": 750,
        "y": 800,
        "wires": []
    },
    {
        "id": "0ed32d92bafeb42f",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_outdoor_temp_diff",
        "func": "// FLOAT GET\nlet outdoor_temp = flow.get('outdoor_temp');\nlet min_temp = flow.get('min_temp');\nlet min_outdoor_temp_diff = flow.get('min_outdoor_temp_diff');\n\n// SET\nif(outdoor_temp !== min_temp) {\n    if(outdoor_temp > min_temp) {\n        min_outdoor_temp_diff = { payload: `${(outdoor_temp - min_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        min_outdoor_temp_diff = { payload: `${(min_temp - outdoor_temp).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// SET VARIABLEN\nflow.set('min_outdoor_temp_diff', min_outdoor_temp_diff);\n\n// MSG\nmsg = min_outdoor_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 840,
        "wires": [
            [
                "a347d45b71e15a2f"
            ]
        ]
    },
    {
        "id": "a347d45b71e15a2f",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "max_outdoor_temp_diff",
        "func": "// FLOAT GET\nlet outdoor_temp  = flow.get('outdoor_temp');\nlet max_temp = flow.get('max_temp');\nlet max_outdoor_temp_diff = flow.get('max_outdoor_temp_diff');\n\n// SET\nif(outdoor_temp !== max_temp) {\n    if(outdoor_temp > max_temp) {\n        max_outdoor_temp_diff = { payload: `${(outdoor_temp - max_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        max_outdoor_temp_diff = { payload: `${(max_temp - outdoor_temp).toFixed(2)}`, tendenz: `<`}\n    }\n}\n\n// SET VARIABLEN\nflow.set('max_outdoor_temp_diff', max_outdoor_temp_diff);\n\n// MSG\nmsg = max_outdoor_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 840,
        "wires": [
            [
                "a444ae7ff35b9aa3"
            ]
        ]
    },
    {
        "id": "a444ae7ff35b9aa3",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_max_to_tendenz",
        "func": "// GET VARIABLEN\nlet min_outdoor_temp_diff = flow.get('min_outdoor_temp_diff');\nlet max_outdoor_temp_diff = flow.get('max_outdoor_temp_diff');\nlet min_max_to_tendenz = flow.get('min_max_to_tendenz');\n\n// SET\nif(min_outdoor_temp_diff.payload < max_outdoor_temp_diff.payload) {\n    min_max_to_tendenz = { payload: parseFloat(min_outdoor_temp_diff.payload), mmto_tendenz: `min`}\n} else {\n    min_max_to_tendenz = { payload: parseFloat(max_outdoor_temp_diff.payload), mmto_tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('min_max_to_tendenz', min_max_to_tendenz);\n\n// MSG\nmsg = min_max_to_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "de958524470d1a20",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "min_outdoor_temp_diff< max_outdoor_temp_diff",
        "info": "",
        "x": 1080,
        "y": 800,
        "wires": []
    },
    {
        "id": "ad7edba7ff30548d",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_humi_ok",
        "func": "// FLOAT GET\nlet outdoor_humi = flow.get('outdoor_humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\nlet outdoor_humi_ok = flow.get('outdoor_humi_ok');\n\n// SET\nif(outdoor_humi >= min_humidity && outdoor_humi <= max_humidity) {\n    outdoor_humi_ok = 1;\n}\n\n// FLOW SET\nflow.set('outdoor_humi_ok', outdoor_humi_ok);\n\n// MSG\nmsg.payload = outdoor_humi_ok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "3a1dbbc7bbf64d23",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_humi >= min_humidity &&outdoor_humi <= max_humidity",
        "info": "",
        "x": 1140,
        "y": 1080,
        "wires": []
    },
    {
        "id": "41bf69a344a4855e",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "send Action",
        "func": "// FLOW GET\nlet temp_ok = flow.get('temp_ok');\nlet outdoor_temp_ok = flow.get('outdoor_temp_ok');\nlet min_temp_diff = flow.get('min_temp_diff');\nlet max_temp_diff = flow.get('max_temp_diff');\nlet min_max_t_tendenz = flow.get('min_max_t_tendenz');\nlet min_outdoor_temp_diff = flow.get('min_outdoor_temp_diff');\nlet max_outdoor_temp_diff = flow.get('max_outdoor_temp_diff');\nlet min_max_to_tendenz = flow.get('min_max_to_tendenz');\nlet opt_temp_diff = flow.get('opt_temp_diff');\nlet temp_tendenz = flow.get('temp_tendenz');\n\nlet humi_ok = flow.get('humi_ok');\nlet outdoor_humi_ok = flow.get('outdoor_humi_ok');\nlet min_humi_diff = flow.get('min_humi_diff');\nlet max_humi_diff = flow.get('max_humi_diff');\nlet min_max_h_tendenz = flow.get('min_max_h_tendenz');\nlet min_outdoor_humi_diff = flow.get('min_outdoor_humi_diff');\nlet max_outdoor_humi_diff = flow.get('max_outdoor_humi_diff');\nlet min_max_ho_tendenz = flow.get('min_max_ho_tendenz');\nlet opt_humi_diff = flow.get('opt_humi_diff');\nlet humi_tendenz = flow.get('humi_tendenz');\n\n\n// SET\nlet msg1 = { payload: temp_ok, topic: `temp_ok`};\nlet msg2 = { payload: outdoor_temp_ok, topic: `outdoor_temp_ok`};\nlet msg3 = { payload: min_temp_diff, topic: `min_temp_diff`};\nlet msg4 = { payload: max_temp_diff, topic: `max_temp_diff`};\nlet msg5 = { payload: min_max_t_tendenz, topic: `min_max_t_tendenz`};\nlet msg6 = { payload: min_outdoor_temp_diff, topic: `min_outdoor_temp_diff`};\nlet msg7 = { payload: max_outdoor_humi_diff, topic: `max_outdoor_humi_diff`};\nlet msg8 = { payload: min_max_to_tendenz, topic: `min_max_to_tendenz`};\nlet msg9 = { payload: opt_temp_diff, topic: `opt_temp_diff`};\nlet msg10 = { payload: temp_tendenz, topic: `temp_tendenz`};\n\nlet msg11 = { payload: humi_ok, topic: `humi_ok`};\nlet msg12 = { payload: outdoor_humi_ok, topic: `outdoor_humi_ok`};\nlet msg13 = { payload: min_humi_diff, topic: `min_humi_diff`};\nlet msg14 = { payload: max_humi_diff, topic: `max_humi_diff`};\nlet msg15 = { payload: min_max_h_tendenz, topic: `min_max_h_tendenz`};\nlet msg16 = { payload: min_outdoor_humi_diff, topic: `min_outdoor_humi_diff`};\nlet msg17 = { payload: max_outdoor_humi_diff, topic: `max_outdoor_humi_diff`};\nlet msg18 = { payload: min_max_ho_tendenz, topic: `min_max_ho_tendenz`};\nlet msg19 = { payload: opt_humi_diff, topic: `opt_humi_diff`};\nlet msg20 = { payload: humi_tendenz, topic: `humi_tendenz`};\n\nlet msg21 = { payload: 1, topic: `start`};\n\n\n// MSG\nreturn [msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg11, msg12, msg13, msg14, msg15, msg16, msg17, msg18, msg19, msg20, msg21];",
        "outputs": 21,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1580,
        "wires": [
            [
                "f95cbd5f864a13d8",
                "73feab91bd923b0e"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ],
            [
                "f95cbd5f864a13d8"
            ]
        ]
    },
    {
        "id": "f95cbd5f864a13d8",
        "type": "link out",
        "z": "9a8fcf0ce4aab871",
        "name": "send Room3/Action",
        "mode": "link",
        "links": [
            "04493871fe8fc52b"
        ],
        "x": 700,
        "y": 1580,
        "wires": [],
        "l": true
    },
    {
        "id": "ce44ecb7264f2df4",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "((max_temp - min_temp) / 2) + min_temp",
        "info": "",
        "x": 480,
        "y": 880,
        "wires": []
    },
    {
        "id": "7d59184445fa6a35",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "((max_humi - min_humi) / 2) + min_humi",
        "info": "",
        "x": 480,
        "y": 1320,
        "wires": []
    },
    {
        "id": "2d4094443507e99a",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_humi > min_humi",
        "info": "",
        "x": 430,
        "y": 1240,
        "wires": []
    },
    {
        "id": "a68b70e3e288a15a",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_outdoor_humi_diff",
        "func": "// FLOAT GET\nlet outdoor_humi = flow.get('outdoor_humi');\nlet min_humidity = flow.get('min_humidity');\nlet min_outdoor_humi_diff = flow.get('min_outdoor_humi_diff');\n\n// SET\nif(outdoor_humi !== min_humidity) {\n    if(outdoor_humi > min_humidity) {\n        min_outdoor_humi_diff = { payload: (outdoor_humi - min_humidity).toFixed(2), tendenz: `>`}\n    } else {\n        min_outdoor_humi_diff = { payload: (min_humidity - outdoor_humi).toFixed(2), tendenz: `<`};\n    }\n}\n\n// SET VARIABLEN\nflow.set('min_outdoor_humi_diff', min_outdoor_humi_diff);\n\n// MSG\nmsg = min_outdoor_humi_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1280,
        "wires": [
            [
                "c40e427efbe064e8"
            ]
        ]
    },
    {
        "id": "c40e427efbe064e8",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "max_outdoor_humi_diff",
        "func": "// FLOAT GET\nlet outdoor_humi  = flow.get('outdoor_humi');\nlet max_humidity = flow.get('max_humidity');\nlet max_outdoor_humi_diff = flow.get('max_outdoor_humi_diff');\n\n// SET\nif(outdoor_humi !== max_humidity) {\n    if(outdoor_humi > max_humidity) {\n        max_outdoor_humi_diff = { payload: (outdoor_humi - max_humidity).toFixed(2), tendenz: `>`}\n    } else {\n        max_outdoor_humi_diff = { payload: (max_humidity - outdoor_humi).toFixed(2), tendenz: `<`}\n    }\n}\n\n// SET VARIABLEN\nflow.set('max_outdoor_humi_diff', max_outdoor_humi_diff);\n\n// MSG\nmsg = max_outdoor_humi_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1280,
        "wires": [
            [
                "b60d348e546e2108"
            ]
        ]
    },
    {
        "id": "c79405ba11a5af3e",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "outdoor_humi > max_humi",
        "info": "",
        "x": 750,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ec17d2bfb5834db2",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "min_outdoor_humi_diff < max_outdoor_humi_diff",
        "info": "",
        "x": 1080,
        "y": 1240,
        "wires": []
    },
    {
        "id": "b60d348e546e2108",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "min_max_ho_tendenz",
        "func": "// GET VARIABLEN\nlet min_outdoor_humi_diff = flow.get('min_outdoor_humi_diff');\nlet max_outdoor_humi_diff = flow.get('max_outdoor_humi_diff');\nlet min_max_ho_tendenz = flow.get('min_max_ho_tendenz');\n\n// SET\nif(min_outdoor_humi_diff.payload < max_outdoor_humi_diff.payload) {\n    min_max_ho_tendenz = { payload: parseFloat(min_outdoor_humi_diff.payload), mmho_tendenz: `min`}\n} else {\n    min_max_ho_tendenz = { payload: parseFloat(max_outdoor_humi_diff.payload), mmho_tendenz: `max`}\n}\n\n// SET VARIABLEN\nflow.set('min_max_ho_tendenz', min_max_ho_tendenz);\n\n// MSG\nmsg = min_max_ho_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1280,
        "wires": [
            [
                "e9a2a242156c20b4"
            ]
        ]
    },
    {
        "id": "3da869c562b0f37a",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "Temperatur",
        "info": "",
        "x": 350,
        "y": 580,
        "wires": []
    },
    {
        "id": "927fed4a61066e55",
        "type": "comment",
        "z": "9a8fcf0ce4aab871",
        "name": "Luftfeuchtigkeit",
        "info": "",
        "x": 360,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8ad4608f46bf92d5",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "opt_temp_diff",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet opt_temp = flow.get('opt_temp');\nlet opt_temp_diff = flow.get('opt_temp_diff');\n\n// SET\nopt_temp = parseFloat(((max_temp - min_temp) / 2) + min_temp);\n\nif(temp !== opt_temp) {\n    if(temp > opt_temp) {\n        opt_temp_diff = { payload: `${(temp - opt_temp).toFixed(2)}`, tendenz: `>`}\n    } else {\n        opt_temp_diff = { payload: `${(opt_temp - temp).toFixed(2)}`, tendenz: `<`};\n    }\n}\n\n// FLOW SET\nflow.set('opt_temp_diff', opt_temp_diff);\n\n// MSG\nmsg.payload = opt_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 920,
        "wires": [
            [
                "88b2d109ca9edf4a"
            ]
        ]
    },
    {
        "id": "e9a2a242156c20b4",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "opt_humi_diff",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\nlet opt_humi = flow.get('opt_humi');\nlet opt_humi_diff = flow.get('opt_humi_diff');\n\n// SET\nopt_humi = parseFloat(((max_humidity - min_humidity) / 2) + min_humidity);\n\nif(humi !== opt_humi) {\n    if(humi > opt_humi) {\n        opt_humi_diff = { payload: (humi - opt_humi).toFixed(2), tendenz: `>`}\n    } else {\n        opt_humi_diff = { payload: (opt_humi - humi).toFixed(2), tendenz: `<`};\n    }\n}\n\n// FLOW SET\nflow.set('opt_humi_diff', opt_humi_diff);\n\n// MSG\nmsg.payload = opt_humi_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1360,
        "wires": [
            [
                "e8d4ffee85f19614"
            ]
        ]
    },
    {
        "id": "88b2d109ca9edf4a",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "temp_tendenz",
        "func": "// FLOAT GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\nlet temp_tendenz = flow.get('temp_tendenz');\n\n// SET\nif(temp < min_temp) {\n    temp_tendenz = `min`;\n}\n\nif(temp > max_temp) {\n    temp_tendenz = `max`;\n}\n// FLOW SET\nflow.set('temp_tendenz', temp_tendenz);\n\n// MSG\nmsg.payload = temp_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "e8d4ffee85f19614",
        "type": "function",
        "z": "9a8fcf0ce4aab871",
        "name": "humi_tendenz",
        "func": "// FLOAT GET\nlet humi = flow.get('humi');\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\nlet humi_tendenz = flow.get('humi_tendenz');\n\n// SET\nif(humi < min_humidity) {\n    humi_tendenz = `min`;\n}\n\nif(humi > max_humidity) {\n    humi_tendenz = `max`;\n}\n// FLOW SET\nflow.set('humi_tendenz', humi_tendenz);\n\n// MSG\nmsg.payload = humi_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1360,
        "wires": [
            [
                "41bf69a344a4855e"
            ]
        ]
    },
    {
        "id": "73feab91bd923b0e",
        "type": "debug",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1480,
        "wires": []
    },
    {
        "id": "78a6724aca173eb9",
        "type": "complete",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "scope": [
            "ff4d5d68c6b912f5"
        ],
        "uncaught": false,
        "x": 190,
        "y": 680,
        "wires": [
            [
                "8f450dbb3eac21c8"
            ]
        ]
    },
    {
        "id": "fc893288a3907481",
        "type": "complete",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "scope": [
            "1fbc590fcb4a2312"
        ],
        "uncaught": false,
        "x": 190,
        "y": 760,
        "wires": [
            [
                "aafd6979e406cfc0"
            ]
        ]
    },
    {
        "id": "3a4a594c02fe0ad1",
        "type": "complete",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "scope": [
            "2146726bccbb36f9"
        ],
        "uncaught": false,
        "x": 190,
        "y": 840,
        "wires": [
            [
                "0ed32d92bafeb42f"
            ]
        ]
    },
    {
        "id": "68e1b8a96f2f9cda",
        "type": "complete",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "scope": [
            "a444ae7ff35b9aa3"
        ],
        "uncaught": false,
        "x": 190,
        "y": 920,
        "wires": [
            [
                "8ad4608f46bf92d5"
            ]
        ]
    },
    {
        "id": "77a5f4c958f6b70f",
        "type": "complete",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "scope": [
            "88b2d109ca9edf4a"
        ],
        "uncaught": false,
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "24a19b6389c93e72"
            ]
        ]
    },
    {
        "id": "100a72ee1b1f8bd0",
        "type": "complete",
        "z": "9a8fcf0ce4aab871",
        "name": "",
        "scope": [
            "ad7edba7ff30548d"
        ],
        "uncaught": false,
        "x": 190,
        "y": 1200,
        "wires": [
            [
                "13ea1bce4aa69dde"
            ]
        ]
    },
    {
        "id": "06a52f44a6613ad1",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "receive Action",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "temp_ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_temp_ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_temp_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_temp_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_max_t_tendenz",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_outdoor_temp_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_outdoor_temp_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_max_to_tendenz",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "opt_temp_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "temp_tendenz",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humi_ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outdoor_humi_ok",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_humi_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_humi_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_max_h_tendenz",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_outdoor_humi_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max_outdoor_humi_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "min_max_ho_tendenz",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "opt_humi_diff",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "humi_tendenz",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 21,
        "x": 260,
        "y": 440,
        "wires": [
            [
                "4b0c9a55f6fd14cc"
            ],
            [
                "48e76c83162914d8"
            ],
            [
                "c7f5f8ece236d554"
            ],
            [
                "ffdd9e269ee4043c"
            ],
            [
                "718363204f2ff88a"
            ],
            [
                "599d01fc68989f25"
            ],
            [
                "31e64aa33e98cb32"
            ],
            [
                "1ef144f61ce7fdf1"
            ],
            [
                "a7fd2a41f760a479"
            ],
            [
                "16f4fd9ce995f12a"
            ],
            [
                "354ef0c85056a982"
            ],
            [
                "e1107471ddb00c5b"
            ],
            [
                "792e55fa78de0f8a"
            ],
            [
                "12f87d60d35c4ce5"
            ],
            [
                "f22a88de3b4c7822"
            ],
            [
                "b08a1d2f292ef6c6"
            ],
            [
                "ac572761dfea3141"
            ],
            [
                "fa2a7ef4bb8354cc"
            ],
            [
                "de3b7880f98d0330"
            ],
            [
                "a3df183cef519538"
            ],
            [
                "057f0f6f50eccc75"
            ]
        ]
    },
    {
        "id": "04493871fe8fc52b",
        "type": "link in",
        "z": "558c0d9f62951a13",
        "name": "from Room3/control NEU",
        "links": [
            "f95cbd5f864a13d8"
        ],
        "x": 250,
        "y": 160,
        "wires": [
            [
                "06a52f44a6613ad1"
            ]
        ],
        "l": true
    },
    {
        "id": "4b0c9a55f6fd14cc",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "temp_ok",
        "func": "// FLOAT GET\nlet temp_ok = flow.get('temp_ok');\n\n// SET\ntemp_ok = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('temp_ok', temp_ok);\n\n// MSG\nmsg.payload = temp_ok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 40,
        "wires": [
            [
                "46c411989334fc27"
            ]
        ]
    },
    {
        "id": "48e76c83162914d8",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "outdoor_temp_ok",
        "func": "// FLOAT GET\nlet outdoor_temp_ok = flow.get('outdoor_temp_ok');\n\n// SET\noutdoor_temp_ok = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_temp_ok', outdoor_temp_ok);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 80,
        "wires": [
            [
                "fb0d34c7b4abfae8"
            ]
        ]
    },
    {
        "id": "057f0f6f50eccc75",
        "type": "change",
        "z": "558c0d9f62951a13",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "cool",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "air",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "humidify",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "163f51a9767f21a7",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "come in",
        "info": "",
        "x": 190,
        "y": 120,
        "wires": []
    },
    {
        "id": "eab08def0cabd1b7",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "SET FLOW Actions",
        "info": "",
        "x": 1050,
        "y": 880,
        "wires": []
    },
    {
        "id": "c09258fe61297ea4",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "receive Vars",
        "info": "",
        "x": 250,
        "y": 260,
        "wires": []
    },
    {
        "id": "c7f5f8ece236d554",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_temp_diff",
        "func": "// FLOAT GET\nlet min_temp_diff = flow.get('min_temp_diff');\n\n// SET\nmin_temp_diff = msg.payload;\n\n// FLOW SET\nflow.set('min_temp_diff', min_temp_diff);\n\n// MSG\nmsg.payload = min_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ffdd9e269ee4043c",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "max_temp_diff",
        "func": "// FLOAT GET\nlet max_temp_diff = flow.get('max_temp_diff');\n\n// SET\nmax_temp_diff = msg.payload;\n\n// FLOW SET\nflow.set('max_temp_diff', max_temp_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "718363204f2ff88a",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_max_t_tendenz",
        "func": "// FLOAT GET\nlet min_max_t_tendenz = flow.get('min_max_t_tendenz');\n\n// SET\nmin_max_t_tendenz = msg.payload;\n\n// FLOW SET\nflow.set('min_max_t_tendenz', min_max_t_tendenz);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "599d01fc68989f25",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_outdoor_temp_diff",
        "func": "// FLOAT GET\nlet min_outdoor_temp_diff = flow.get('min_outdoor_temp_diff');\n\n// SET\nmin_outdoor_temp_diff = msg.payload.tendenz;\n\n// FLOW SET\nflow.set('min_outdoor_temp_diff', min_outdoor_temp_diff);\n\n// MSG\nmsg.payload = min_outdoor_temp_diff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 240,
        "wires": [
            [
                "b14e4e0ec7b3e5a3"
            ]
        ]
    },
    {
        "id": "31e64aa33e98cb32",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "max_outdoor_temp_diff",
        "func": "// FLOAT GET\nlet max_outdoor_temp_diff = flow.get('max_outdoor_temp_diff');\n\n// SET\nmax_outdoor_temp_diff = msg.payload.tendenz;\n\n// FLOW SET\nflow.set('max_outdoor_temp_diff', max_outdoor_temp_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "1b1ae28136ec3f39"
            ]
        ]
    },
    {
        "id": "1ef144f61ce7fdf1",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_max_to_tendenz",
        "func": "// FLOAT GET\nlet min_max_to_tendenz = flow.get('min_max_to_tendenz');\n\n// SET\nmin_max_to_tendenz = msg.payload;\n\n// FLOW SET\nflow.set('min_max_to_tendenz', min_max_to_tendenz);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a7fd2a41f760a479",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "opt_temp_diff",
        "func": "// FLOAT GET\nlet opt_temp_diff = flow.get('opt_temp_diff');\n\n// SET\nopt_temp_diff = msg.payload;\n\n// FLOW SET\nflow.set('opt_temp_diff', opt_temp_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "354ef0c85056a982",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "humi_ok",
        "func": "// FLOAT GET\nlet humi_ok = flow.get('humi_ok');\n\n// SET\nhumi_ok = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('humi_ok', humi_ok);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e1107471ddb00c5b",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "outdoor_humi_ok",
        "func": "// FLOAT GET\nlet outdoor_humi_ok = flow.get('outdoor_humi_ok');\n\n// SET\noutdoor_humi_ok = parseInt(msg.payload);\n\n// FLOW SET\nflow.set('outdoor_humi_ok', outdoor_humi_ok);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "792e55fa78de0f8a",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_humi_diff",
        "func": "// FLOAT GET\nlet min_humi_diff = flow.get('min_humi_diff');\n\n// SET\nmin_humi_diff = msg.payload;\n\n// FLOW SET\nflow.set('min_humi_diff', min_humi_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "12f87d60d35c4ce5",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "max_humi_diff",
        "func": "// FLOAT GET\nlet max_humi_diff = flow.get('max_humi_diff');\n\n// SET\nmax_humi_diff = msg.payload;\n\n// FLOW SET\nflow.set('max_humi_diff', max_humi_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f22a88de3b4c7822",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_max_h_tendenz",
        "func": "// FLOAT GET\nlet min_max_h_tendenz = flow.get('min_max_h_tendenz');\n\n// SET\nmin_max_h_tendenz = msg.payload;\n\n// FLOW SET\nflow.set('min_max_h_tendenz', min_max_h_tendenz);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b08a1d2f292ef6c6",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_outdoor_humi_diff",
        "func": "// FLOAT GET\nlet min_outdoor_humi_diff = flow.get('min_outdoor_humi_diff');\n\n// SET\nmin_outdoor_humi_diff = msg.payload;\n\n// FLOW SET\nflow.set('min_outdoor_humi_diff', min_outdoor_humi_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "ac572761dfea3141",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "max_outdoor_humi_diff",
        "func": "// FLOAT GET\nlet max_outdoor_humi_diff = flow.get('max_outdoor_humi_diff');\n\n// SET\nmax_outdoor_humi_diff = msg.payload;\n\n// FLOW SET\nflow.set('max_outdoor_humi_diff', max_outdoor_humi_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fa2a7ef4bb8354cc",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "min_max_ho_tendenz",
        "func": "// FLOAT GET\nlet min_max_ho_tendenz = flow.get('min_max_ho_tendenz');\n\n// SET\nmin_max_ho_tendenz = msg.payload;\n\n// FLOW SET\nflow.set('min_max_ho_tendenz', min_max_ho_tendenz);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "de3b7880f98d0330",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "opt_humi_diff",
        "func": "// FLOAT GET\nlet opt_humi_diff = flow.get('opt_humi_diff');\n\n// SET\nopt_humi_diff = msg.payload;\n\n// FLOW SET\nflow.set('opt_humi_diff', opt_humi_diff);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "741afddcc4d9fb59",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "temp_ok ==",
        "property": "temp_ok",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 1380,
        "wires": [
            [
                "a9c0a0075ba81967",
                "509204928ec54339"
            ],
            [
                "4b28b9a06da12d71",
                "cd32ea4b5e2d01b3",
                "3b5e9f15b773eb86"
            ]
        ]
    },
    {
        "id": "a9c0a0075ba81967",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "temp_tendenz",
        "property": "temp_tendenz",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 580,
        "y": 1280,
        "wires": [
            [
                "094f9a90b0bdf2bd",
                "379a2e9be51f22e5"
            ],
            [
                "4ed9ced95b96092c",
                "8fda30fde11695df"
            ]
        ]
    },
    {
        "id": "16f4fd9ce995f12a",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "temp_tendenz",
        "func": "// FLOAT GET\nlet temp_tendenz = flow.get('temp_tendenz');\n\n// SET\ntemp_tendenz = msg.payload;\n\n// FLOW SET\nflow.set('temp_tendenz', temp_tendenz);\n\n// MSG\nmsg.payload = temp_tendenz;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "9d69b084ee2c922f"
            ]
        ]
    },
    {
        "id": "a3df183cef519538",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "humi_tendenz",
        "func": "// FLOAT GET\nlet humi_tendenz = flow.get('humi_tendenz');\n\n// SET\nhumi_tendenz = msg.payload;\n\n// FLOW SET\nflow.set('humi_tendenz', humi_tendenz);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "9c37f6c28317d2f6",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "min",
        "info": "",
        "x": 970,
        "y": 1260,
        "wires": []
    },
    {
        "id": "27dee3f0abe03511",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "window OFF",
        "info": "",
        "x": 1490,
        "y": 900,
        "wires": []
    },
    {
        "id": "908a4060503724aa",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "max",
        "info": "",
        "x": 970,
        "y": 1300,
        "wires": []
    },
    {
        "id": "a69f2b9b7555e8b0",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "cool ON",
        "info": "",
        "x": 800,
        "y": 1400,
        "wires": []
    },
    {
        "id": "12d57487f461410c",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "min_outdoor_temp_diff",
        "property": "min_outdoor_temp_diff",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": ">",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "<",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1640,
        "y": 1020,
        "wires": [
            [
                "0b518289f81cc768",
                "64cea942561529d8"
            ],
            [
                "44798253dc77a005"
            ]
        ]
    },
    {
        "id": "509204928ec54339",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1320,
        "wires": []
    },
    {
        "id": "668d33c8cb2f8e4d",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "min",
        "info": "",
        "x": 1930,
        "y": 860,
        "wires": []
    },
    {
        "id": "0b518289f81cc768",
        "type": "change",
        "z": "558c0d9f62951a13",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "451a4d23bcc6bef7",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "Heizen",
        "info": "",
        "x": 2170,
        "y": 900,
        "wires": []
    },
    {
        "id": "62fa1cee5992304c",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "Fenster",
        "info": "",
        "x": 1930,
        "y": 900,
        "wires": []
    },
    {
        "id": "7e4836fafcbfa575",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "&& !",
        "info": "",
        "x": 2050,
        "y": 900,
        "wires": []
    },
    {
        "id": "4b28b9a06da12d71",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "min_max_t_tendenz",
        "property": "min_max_t_tendenz",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "min",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "max",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 1580,
        "wires": [
            [
                "b4b7ae13ea9bac9e"
            ],
            [
                "01048f0d918ac05e"
            ]
        ]
    },
    {
        "id": "b4b7ae13ea9bac9e",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1640,
        "wires": []
    },
    {
        "id": "01048f0d918ac05e",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1700,
        "wires": []
    },
    {
        "id": "fbfd7263261cee55",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "max_outdoor_temp_diff",
        "property": "max_outdoor_temp_diff.tendenz",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": ">",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "<",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1560,
        "wires": [
            [
                "7ea1d0e47b987fb6"
            ],
            [
                "1abb1532a0e1b422"
            ]
        ]
    },
    {
        "id": "cd32ea4b5e2d01b3",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "temp_ok",
        "func": "// FLOAT GET\nlet temp_ok = flow.get('temp_ok');\n\n// MSG\nmsg.payload = temp_ok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1740,
        "wires": [
            [
                "498a17b497c0c03d"
            ]
        ]
    },
    {
        "id": "498a17b497c0c03d",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1740,
        "wires": []
    },
    {
        "id": "46c411989334fc27",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 40,
        "wires": []
    },
    {
        "id": "094f9a90b0bdf2bd",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1260,
        "wires": []
    },
    {
        "id": "64cea942561529d8",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 980,
        "wires": []
    },
    {
        "id": "44798253dc77a005",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 1040,
        "wires": []
    },
    {
        "id": "4ed9ced95b96092c",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1300,
        "wires": []
    },
    {
        "id": "72c2fee6575f4c3f",
        "type": "function",
        "z": "558c0d9f62951a13",
        "name": "temp_ok",
        "func": "// FLOAT GET\nlet temp_ok = flow.get('temp_ok');\n\n// MSG\nmsg.payload = temp_ok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "3b5e9f15b773eb86",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1620,
        "wires": []
    },
    {
        "id": "9d69b084ee2c922f",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 400,
        "wires": []
    },
    {
        "id": "b14e4e0ec7b3e5a3",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "82b9d9aeb1f2d123",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "> <",
        "info": "",
        "x": 1710,
        "y": 980,
        "wires": []
    },
    {
        "id": "7ea1d0e47b987fb6",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1560,
        "wires": []
    },
    {
        "id": "1abb1532a0e1b422",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 1640,
        "wires": []
    },
    {
        "id": "1b1ae28136ec3f39",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 280,
        "wires": []
    },
    {
        "id": "fb0d34c7b4abfae8",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 80,
        "wires": []
    },
    {
        "id": "652a0cfd63f9c3fd",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 120,
        "wires": []
    },
    {
        "id": "6f868968e7ed0ad9",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 160,
        "wires": []
    },
    {
        "id": "65d1cb37633cee90",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "outdoor_temp_ok",
        "property": "outdoor_temp_ok",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1090,
        "y": 1200,
        "wires": [
            [
                "f1fb09ef6ea3648a"
            ]
        ]
    },
    {
        "id": "3945a3072886dc61",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "/1",
        "info": "",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "46861dd1a8d958ad",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 1200,
        "wires": []
    },
    {
        "id": "e450fbc7ed964ffa",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "0/1",
        "info": "",
        "x": 350,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0b4ff6f6a333db91",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "min/max",
        "info": "",
        "x": 560,
        "y": 1240,
        "wires": []
    },
    {
        "id": "72efac48b9adbfb2",
        "type": "complete",
        "z": "558c0d9f62951a13",
        "name": "",
        "scope": [
            "057f0f6f50eccc75"
        ],
        "uncaught": false,
        "x": 190,
        "y": 1380,
        "wires": [
            [
                "741afddcc4d9fb59"
            ]
        ]
    },
    {
        "id": "c850708152d922ae",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "heat OFF",
        "info": "",
        "x": 1320,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6683429255e73610",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "heat ON",
        "info": "",
        "x": 800,
        "y": 1160,
        "wires": []
    },
    {
        "id": "379a2e9be51f22e5",
        "type": "change",
        "z": "558c0d9f62951a13",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "cool",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "air",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "humidify",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1200,
        "wires": [
            [
                "65d1cb37633cee90",
                "188d27757a839a74"
            ]
        ]
    },
    {
        "id": "f1fb09ef6ea3648a",
        "type": "change",
        "z": "558c0d9f62951a13",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "cool",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "air",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "humidify",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1200,
        "wires": [
            [
                "46861dd1a8d958ad"
            ]
        ]
    },
    {
        "id": "8fda30fde11695df",
        "type": "change",
        "z": "558c0d9f62951a13",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "cool",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "air",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "humidify",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1440,
        "wires": [
            [
                "7b571c5b18b02624",
                "d6ae7616c405ca7c"
            ]
        ]
    },
    {
        "id": "7b571c5b18b02624",
        "type": "switch",
        "z": "558c0d9f62951a13",
        "name": "outdoor_temp_ok",
        "property": "outdoor_temp_ok",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1090,
        "y": 1440,
        "wires": [
            [
                "2b27bed954dd8053"
            ]
        ]
    },
    {
        "id": "2b27bed954dd8053",
        "type": "change",
        "z": "558c0d9f62951a13",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "window_shorty",
                "pt": "flow",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "cool",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "air",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "humidify",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1440,
        "wires": [
            [
                "dc012bbedb605e26"
            ]
        ]
    },
    {
        "id": "99154f2004d8ac26",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "cool OFF",
        "info": "",
        "x": 1320,
        "y": 1360,
        "wires": []
    },
    {
        "id": "8fbf0b5d8fe26bc5",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "/1",
        "info": "",
        "x": 1050,
        "y": 1400,
        "wires": []
    },
    {
        "id": "08cb5db42f8dc275",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "window",
        "info": "",
        "x": 1430,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f9c9461a3c1d7cdf",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "window_shorty",
        "info": "",
        "x": 1580,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b500347b8efe168c",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "ON",
        "info": "",
        "x": 1310,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d8dd714228aade57",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "ON",
        "info": "",
        "x": 1310,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f57cb007c4b9367b",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "window",
        "info": "",
        "x": 1430,
        "y": 1400,
        "wires": []
    },
    {
        "id": "90e4e7cc4f3388a6",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "window_shorty",
        "info": "",
        "x": 1580,
        "y": 1400,
        "wires": []
    },
    {
        "id": "dc012bbedb605e26",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 1440,
        "wires": []
    },
    {
        "id": "188d27757a839a74",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d6ae7616c405ca7c",
        "type": "debug",
        "z": "558c0d9f62951a13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1360,
        "wires": []
    },
    {
        "id": "8a73ca35c4f79e68",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "min/max",
        "info": "",
        "x": 560,
        "y": 1540,
        "wires": []
    },
    {
        "id": "b0aa3e798a5ef8cd",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "0/",
        "info": "",
        "x": 550,
        "y": 1360,
        "wires": []
    },
    {
        "id": "8e639929b5c1af26",
        "type": "comment",
        "z": "558c0d9f62951a13",
        "name": "/1",
        "info": "",
        "x": 550,
        "y": 1420,
        "wires": []
    },
    {
        "id": "eaa6c775efeaf606",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "MQTT Subscriping",
        "info": "",
        "x": 170,
        "y": 100,
        "wires": []
    },
    {
        "id": "709f4eaf0a194cf2",
        "type": "mqtt in",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "shellies/shellyht-706823/sensor/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 140,
        "wires": [
            [
                "38dc20ab5c318bc2"
            ]
        ]
    },
    {
        "id": "38dc20ab5c318bc2",
        "type": "function",
        "z": "2b0de4698f35c235",
        "name": "ht2_current...",
        "func": "let info = msg.topic; \nlet ht2_current_temp = flow.get('ht2_current_temp') || 0;\nlet ht2_current_hum = flow.get('ht2_current_hum') || 0;\nlet ht2_current_bat = flow.get('ht2_current_bat') || 0;\n\nif(info == \"shellies/shellyht-706823/sensor/temperature\") {\n    ht2_current_temp = msg.payload\n}\n\nif(info == \"shellies/shellyht-706823/sensor/humidity\") {\n    ht2_current_hum = msg.payload;\n}\n\nif(info == \"shellies/shellyht-706823/sensor/battery\") {\n    ht2_current_bat = msg.payload;\n}\n\n// SET VARIABLEN\nflow.set('ht2_current_temp', ht2_current_temp);\nflow.set('ht2_current_hum', ht2_current_hum);\nflow.set('ht2_current_bat', ht2_current_bat);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 140,
        "wires": [
            [
                "af03b2876cb57d70"
            ]
        ]
    },
    {
        "id": "fe26ca1d42dbb921",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "INIT ONE Response",
        "info": "",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "af03b2876cb57d70",
        "type": "switch",
        "z": "2b0de4698f35c235",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "shellies/shellyht-706823/sensor/act_reasons",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "f886a7a826a65287"
            ]
        ]
    },
    {
        "id": "f886a7a826a65287",
        "type": "function",
        "z": "2b0de4698f35c235",
        "name": "INSERT INTO `sensor_data`",
        "func": "let ht2_current_temp = flow.get('ht2_current_temp') || 0;\nlet ht2_current_hum = flow.get('ht2_current_hum') || 0;\nlet ht2_current_bat = flow.get('ht2_current_bat') || 0;\n\nlet sql = \"INSERT INTO `sensor_data` (`sensor_id`, `temp`, `humi`, `battery`) VALUE ('1', '\" + ht2_current_temp + \"', '\" + ht2_current_hum + \"', '\" + ht2_current_bat + \"')\";\nmsg.topic = sql;\nmsg.payload = \"INSERT INTO `sensor_data`...\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 140,
        "wires": [
            [
                "dd75081ed2ac7525"
            ]
        ]
    },
    {
        "id": "8127a8bc441f7b72",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "Last Topic",
        "info": "",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "dd75081ed2ac7525",
        "type": "mysql",
        "z": "2b0de4698f35c235",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "b0184d08826da2e4",
                "467c1d5b47958cba"
            ]
        ]
    },
    {
        "id": "b0184d08826da2e4",
        "type": "mqtt out",
        "z": "2b0de4698f35c235",
        "name": "",
        "topic": "/auto/sensor/shellyht-706823",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1380,
        "y": 140,
        "wires": []
    },
    {
        "id": "75eb656e90e5ac3d",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "Publishing / Client",
        "info": "",
        "x": 1350,
        "y": 100,
        "wires": []
    },
    {
        "id": "987e3e1320750798",
        "type": "comment",
        "z": "2b0de4698f35c235",
        "name": "sensor_id=1",
        "info": "",
        "x": 830,
        "y": 100,
        "wires": []
    },
    {
        "id": "467c1d5b47958cba",
        "type": "link out",
        "z": "2b0de4698f35c235",
        "name": "shellyht-702F79",
        "mode": "link",
        "links": [
            "b5460721ea40e0e8"
        ],
        "x": 1275,
        "y": 200,
        "wires": []
    },
    {
        "id": "e1851edcc374a7db",
        "type": "inject",
        "z": "41d0abfd696e535f",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "5583cadc1a1f684f",
                "b7de6f4719139587"
            ]
        ]
    },
    {
        "id": "bdee10863a972f69",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "room_id",
        "func": "// FLOW GET\nlet room_id = flow.get('room_id');\n\n// MSG\nmsg.payload = room_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 120,
        "wires": [
            [
                "f0881bced662b460"
            ]
        ]
    },
    {
        "id": "f0881bced662b460",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "SELECT * FROM `room_settings`",
        "func": "msg.topic = \"SELECT * FROM `room_settings` WHERE `id` = '\" + msg.payload + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 120,
        "wires": [
            [
                "5571b27ff26b817b"
            ]
        ]
    },
    {
        "id": "5571b27ff26b817b",
        "type": "mysql",
        "z": "41d0abfd696e535f",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "3115ae2a71f6af8c"
            ]
        ]
    },
    {
        "id": "3115ae2a71f6af8c",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "Flow VARS room_settings",
        "func": "// FLOW GET && SET\nlet room_id = flow.get('room_id') || 2;\n\nlet min_temp = flow.get('min_temp') || 19;\nlet opt_temp = flow.get('opt_temp') || 21;\nlet max_temp = flow.get('max_temp') || 24;\n\nlet min_humidity = flow.get('min_humidity') || 40;\nlet max_humidity = flow.get('max_humidity') || 70;\n\nlet is_good_co2 = flow.get('is_good_co2') || 900;\nlet is_bad_co2 = flow.get('is_bad_co2') || 1400;\nlet is_alert_co2 = flow.get('is_alert_co2') || 1600;\n\nlet db_good = flow.get('db_good') || 40;\nlet db_bad = flow.get('db_bad') || 70;\n\n// SET\nmin_temp = msg.payload[0].min_temp;\nopt_temp = msg.payload[0].opt_temp;\nmax_temp = msg.payload[0].max_temp;\n\nmin_humidity = msg.payload[0].min_humidity;\nmax_humidity = msg.payload[0].max_humidity;\n\nis_good_co2 = msg.payload[0].is_good_co2;\nis_bad_co2 = msg.payload[0].is_bad_co2;\nis_alert_co2 = msg.payload[0].is_alert_co2;\n\ndb_good = msg.payload[0].db_good;\ndb_bad = msg.payload[0].db_bad;\n\n// FLOW SET\nflow.set('room_id', room_id);\n\nflow.set('min_temp', min_temp);\nflow.set('opt_temp', opt_temp);\nflow.set('max_temp', max_temp);\n\nflow.set('min_humidity', min_humidity);\nflow.set('max_humidity', max_humidity);\n\nflow.set('is_good_co2', is_good_co2);\nflow.set('is_bad_co2', is_bad_co2);\nflow.set('is_alert_co2', is_alert_co2);\n\nflow.set('db_good', db_good);\nflow.set('db_bad', db_bad);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "80a209755520e86a",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "sensor_id",
        "func": "// FLOW GET\nlet sensor_id = flow.get('sensor_id');\n\n// MSG\nmsg.payload = sensor_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "bc3fdce140b9c3e9"
            ]
        ]
    },
    {
        "id": "bc3fdce140b9c3e9",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 180,
        "wires": [
            [
                "631bf151832cdc49"
            ]
        ]
    },
    {
        "id": "631bf151832cdc49",
        "type": "mysql",
        "z": "41d0abfd696e535f",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1150,
        "y": 180,
        "wires": [
            [
                "5a11197dd2fb456b"
            ]
        ]
    },
    {
        "id": "5a11197dd2fb456b",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "Flow VARS sensor_data",
        "func": "// FLOW GET && SET\nlet sensor_id = flow.get('sensor_id') || 2;\n\nlet temp = flow.get('temp') || 0;\nlet humi = flow.get('humi') || 0;\nlet co = flow.get('co') || 0;\nlet db = flow.get('db') || 0;\nlet battery = flow.get('battery') || 100;\n\n// SET\ntemp = msg.payload[0].temp;\nhumi = msg.payload[0].humi;\nco = msg.payload[0].co;\ndb = msg.payload[0].db;\nbattery = msg.payload[0].battery;\n\n// FLOW SET\nflow.set('sensor_id', sensor_id);\n\nflow.set('temp', temp);\nflow.set('humi', humi);\nflow.set('co', co);\nflow.set('db', db);\nflow.set('battery', battery);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5583cadc1a1f684f",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "SET Room & Sensor ID",
        "func": "// FLOW GET\nlet room_id = flow.get('room_id') || 2;\nlet sensor_id = flow.get('sensor_id') || 1;\n\n// SET\nroom_id = 2;\nsensor_id = 1;\n\n// FLOW SET\nflow.set('room_id', room_id);\nflow.set('sensor_id', sensor_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "bdee10863a972f69",
                "80a209755520e86a"
            ]
        ]
    },
    {
        "id": "bf4bb0a305415ef5",
        "type": "inject",
        "z": "41d0abfd696e535f",
        "name": "10min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "5583cadc1a1f684f",
                "88e8745244e3ad85",
                "b7de6f4719139587"
            ]
        ]
    },
    {
        "id": "095d8280bbb0ad7f",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "Settings Temperatur",
        "info": "",
        "x": 370,
        "y": 360,
        "wires": []
    },
    {
        "id": "6ccce57fdc41ab2b",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "min_temp",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\n\n// MSG\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 400,
        "wires": [
            [
                "3a175cb75361e989",
                "c8d8c9b92989e535"
            ]
        ]
    },
    {
        "id": "750db21eebd423f7",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "max_temp",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp') || 24;\n\n// MSG\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "de82774712c82db2",
                "7e89ef10d4256664"
            ]
        ]
    },
    {
        "id": "3a175cb75361e989",
        "type": "ui_numeric",
        "z": "41d0abfd696e535f",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "afae9d74aa8939b3",
        "order": 5,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 630,
        "y": 400,
        "wires": [
            [
                "0d393011cc41fb67",
                "c8d8c9b92989e535"
            ]
        ]
    },
    {
        "id": "de82774712c82db2",
        "type": "ui_numeric",
        "z": "41d0abfd696e535f",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "afae9d74aa8939b3",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMax",
        "topicType": "str",
        "format": "{{value}}Â°C",
        "min": 0,
        "max": "50",
        "step": 1,
        "className": "",
        "x": 620,
        "y": 640,
        "wires": [
            [
                "14a9e85ae3836a21",
                "7e89ef10d4256664"
            ]
        ]
    },
    {
        "id": "c8d8c9b92989e535",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "tempMin",
        "func": "msg.topic = `tempMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 460,
        "wires": [
            [
                "de82774712c82db2"
            ]
        ]
    },
    {
        "id": "0d393011cc41fb67",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_temp = flow.get('min_temp');\nlet room_id = flow.get('room_id');\n\n// SET\nmin_temp = msg.payload;\n\n// FLOAT SET\nflow.set('min_temp', min_temp);\n\n// MSG\nmsg.payload = min_temp;\n\nmsg.topic = \"UPDATE `room_settings` SET `min_temp` = '\" + min_temp + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 400,
        "wires": [
            [
                "c2c8af039080ec4a",
                "ea8a2515e2263788",
                "251b2bf22d41c0fe",
                "207dc40db2e8db6b",
                "c5fdb1aee013b4fa"
            ]
        ]
    },
    {
        "id": "14a9e85ae3836a21",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet max_temp = flow.get('max_temp');\nlet room_id = flow.get('room_id');\n\n// SET\nmax_temp = msg.payload;\n\n// FLOAT SET\nflow.set('max_temp', max_temp);\n\n// MSG\nmsg.payload = max_temp;\n\nmsg.topic = \"UPDATE `room_settings` SET `max_temp` = '\" + max_temp + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 640,
        "wires": [
            [
                "c2c8af039080ec4a",
                "ea8a2515e2263788",
                "251b2bf22d41c0fe",
                "207dc40db2e8db6b",
                "c5fdb1aee013b4fa"
            ]
        ]
    },
    {
        "id": "c2c8af039080ec4a",
        "type": "mysql",
        "z": "41d0abfd696e535f",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 810,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4e34c345c3314d03",
        "type": "delay",
        "z": "41d0abfd696e535f",
        "name": "800ms",
        "pauseType": "delay",
        "timeout": "800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 130,
        "y": 780,
        "wires": [
            [
                "6ccce57fdc41ab2b",
                "750db21eebd423f7",
                "ea8a2515e2263788",
                "251b2bf22d41c0fe",
                "c5fdb1aee013b4fa",
                "207dc40db2e8db6b",
                "e56e8bcffbc6857a",
                "e6a0d791488e7cb8",
                "1eed1d5eef303b74",
                "bc50948f333029d5",
                "65f735b5a4846f0a",
                "51020fe8cebb7fc4",
                "a6e135b3b686e72d",
                "ded1ef97dc4c9aae",
                "2201f88bb794ef09",
                "4775dfb0e79145b4",
                "fd3a09d2741b02e4",
                "cde228b6ed1c6666",
                "ca3e0cdcd248e3ce",
                "b39c2adbd815f43c"
            ]
        ]
    },
    {
        "id": "88e8745244e3ad85",
        "type": "mqtt out",
        "z": "41d0abfd696e535f",
        "name": "",
        "topic": "/interval/room/2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "7e89ef10d4256664",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "tempMax",
        "func": "msg.topic = `tempMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 580,
        "wires": [
            [
                "3a175cb75361e989"
            ]
        ]
    },
    {
        "id": "ea8a2515e2263788",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "gauge Temp ui_control",
        "func": "// GLOBAL GET\nlet gauge_toleranz = global.get('gauge_toleranz');\n\n// FLOW GET\nlet temp = flow.get('temp');\n\nlet min_temp = flow.get('min_temp');\nlet opt_temp = flow.get('opt_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nlet start = min_temp - gauge_toleranz;\nlet end = max_temp + gauge_toleranz;\n\n// MSG\nmsg.topic = 'Â°C';\nmsg = {ui_control:{min:start, max:end, seg1:min_temp, seg2:max_temp}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 440,
        "wires": [
            [
                "e5603e6555886961",
                "43222b72c5ba6f1c"
            ]
        ]
    },
    {
        "id": "e5603e6555886961",
        "type": "ui_gauge",
        "z": "41d0abfd696e535f",
        "name": "gauge Temp",
        "group": "afae9d74aa8939b3",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1750,
        "y": 440,
        "wires": []
    },
    {
        "id": "251b2bf22d41c0fe",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Temp ui_control",
        "func": "// GLOBAL GET\nlet gauge_toleranz = global.get('gauge_toleranz');\n\n// FLOW GET\nlet temp = flow.get('temp');\nlet min_temp = flow.get('min_temp');\nlet max_temp = flow.get('max_temp');\n\n// SET\nlet start = min_temp - gauge_toleranz;\nlet end = max_temp + gauge_toleranz;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "dc33362410c14337"
            ]
        ]
    },
    {
        "id": "c5fdb1aee013b4fa",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Temp max_temp",
        "func": "// FLOW GET\nlet max_temp = flow.get('max_temp');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 560,
        "wires": [
            [
                "dc33362410c14337"
            ]
        ]
    },
    {
        "id": "207dc40db2e8db6b",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Temp min_temp",
        "func": "// FLOW GET\nlet min_temp = flow.get('min_temp');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 520,
        "wires": [
            [
                "dc33362410c14337"
            ]
        ]
    },
    {
        "id": "b7de6f4719139587",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "SET Outdoor",
        "func": "// FLOW GET\nlet outdoor_id = flow.get('outdoor_id') || 4;\n\n// SET\noutdoor_id = 4;\n\n// FLOW SET\nflow.set('outdoor_id', outdoor_id);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 240,
        "wires": [
            [
                "15825ee8093b52e8"
            ]
        ]
    },
    {
        "id": "15825ee8093b52e8",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "outdoor",
        "func": "// FLOW GET\nlet outdoor_id = flow.get('outdoor_id');\n\n// MSG\nmsg.payload = outdoor_id;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 240,
        "wires": [
            [
                "0e01aea1c95999e5"
            ]
        ]
    },
    {
        "id": "0e01aea1c95999e5",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT * FROM `sensor_data` WHERE `sensor_id` = '\" + msg.payload + \"' ORDER BY `sensor_data`.`updated` DESC LIMIT 0, 1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 240,
        "wires": [
            [
                "84b38ff353ad8151"
            ]
        ]
    },
    {
        "id": "84b38ff353ad8151",
        "type": "mysql",
        "z": "41d0abfd696e535f",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "0efbea25264cdf81"
            ]
        ]
    },
    {
        "id": "0efbea25264cdf81",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "Flow VARS sensor_data (Outdoor)",
        "func": "// FLOW GET && SET\nlet outdoor_temp = flow.get('outdoor_temp') || 0;\nlet outdoor_humi = flow.get('outdoor_humi') || 0;\n\n// SET\noutdoor_temp = msg.payload[0].temp;\noutdoor_humi = msg.payload[0].humi;\n\n// FLOW SET\nflow.set('outdoor_temp', outdoor_temp);\nflow.set('outdoor_humi', outdoor_humi);\n\n// MSG\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 240,
        "wires": [
            [
                "4e34c345c3314d03"
            ]
        ]
    },
    {
        "id": "e56e8bcffbc6857a",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// MSG\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 680,
        "wires": [
            [
                "1f5eeaa0e18766fb"
            ]
        ]
    },
    {
        "id": "1f5eeaa0e18766fb",
        "type": "ui_text",
        "z": "41d0abfd696e535f",
        "group": "ca150b96cb248dec",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "<h4>Temperatur</h4>",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1780,
        "y": 680,
        "wires": []
    },
    {
        "id": "e6a0d791488e7cb8",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "temp",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "bc69de9c3b4bfb66"
            ]
        ]
    },
    {
        "id": "1eed1d5eef303b74",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "outdoor_temp",
        "func": "// FLOW GET\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 800,
        "wires": [
            [
                "bc69de9c3b4bfb66"
            ]
        ]
    },
    {
        "id": "bc69de9c3b4bfb66",
        "type": "ui_chart",
        "z": "41d0abfd696e535f",
        "name": "chart Outdoor & Indoor",
        "group": "ca150b96cb248dec",
        "order": 2,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-20",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1780,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fd3a09d2741b02e4",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "text outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// MSG\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1180,
        "wires": [
            [
                "d8a33cee2966bc17"
            ]
        ]
    },
    {
        "id": "d8a33cee2966bc17",
        "type": "ui_text",
        "z": "41d0abfd696e535f",
        "group": "ca150b96cb248dec",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Headline humi",
        "label": "<h4>Luftfeuchtigkeit</h4>",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1760,
        "y": 1180,
        "wires": []
    },
    {
        "id": "dc33362410c14337",
        "type": "ui_chart",
        "z": "41d0abfd696e535f",
        "name": "chart Temp",
        "group": "afae9d74aa8939b3",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "65f735b5a4846f0a",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "min_humidity",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\n\n// MSG\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "1541116be8574d7b",
                "0680dce88dc7e8f5"
            ]
        ]
    },
    {
        "id": "51020fe8cebb7fc4",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "max_humidity",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\n\n// MSG\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1180,
        "wires": [
            [
                "0593776f8e1653d5",
                "5a6b2c465e04f1d1"
            ]
        ]
    },
    {
        "id": "0593776f8e1653d5",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "humiMax",
        "func": "msg.topic = `humiMax`;\nmsg = {ui_control:{max:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1140,
        "wires": [
            [
                "1541116be8574d7b"
            ]
        ]
    },
    {
        "id": "0680dce88dc7e8f5",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "humMin",
        "func": "msg.topic = `humMin`;\nmsg = {ui_control:{min:`${msg.payload}`},topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1000,
        "wires": [
            [
                "5a6b2c465e04f1d1"
            ]
        ]
    },
    {
        "id": "1541116be8574d7b",
        "type": "ui_numeric",
        "z": "41d0abfd696e535f",
        "name": "",
        "label": "Mindestens",
        "tooltip": "",
        "group": "dda6c71d7afc8b96",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 630,
        "y": 940,
        "wires": [
            [
                "0b52917168fd69ea",
                "0680dce88dc7e8f5"
            ]
        ]
    },
    {
        "id": "0b52917168fd69ea",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet min_humidity = flow.get('min_humidity');\nlet room_id = flow.get('room_id');\n\n// SET\nmin_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('min_humidity', min_humidity);\n\n// MSG\nmsg.payload = min_humidity;\n\nmsg.topic = \"UPDATE `room_settings` SET `min_humidity` = '\" + min_humidity + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 940,
        "wires": [
            [
                "623733b55942d861",
                "a6e135b3b686e72d",
                "ded1ef97dc4c9aae",
                "2201f88bb794ef09",
                "4775dfb0e79145b4"
            ]
        ]
    },
    {
        "id": "5ac5a51c87aff1d6",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "UPDATE `room_settings`",
        "func": "// FLOAT GET\nlet max_humidity = flow.get('max_humidity');\nlet room_id = flow.get('room_id');\n\n// SET\nmax_humidity = msg.payload;\n\n// FLOAT SET\nflow.set('max_humidity', max_humidity);\n\n// MSG\nmsg.max_humidity = max_humidity;\nmsg.topic = \"UPDATE `room_settings` SET `max_humidity` = '\" + max_humidity + \"' WHERE id = '\" + room_id + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1180,
        "wires": [
            [
                "623733b55942d861",
                "a6e135b3b686e72d",
                "ded1ef97dc4c9aae",
                "2201f88bb794ef09",
                "4775dfb0e79145b4"
            ]
        ]
    },
    {
        "id": "5a6b2c465e04f1d1",
        "type": "ui_numeric",
        "z": "41d0abfd696e535f",
        "name": "",
        "label": "Maximal",
        "tooltip": "",
        "group": "dda6c71d7afc8b96",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "tempOptMin",
        "topicType": "str",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "5ac5a51c87aff1d6",
                "0593776f8e1653d5"
            ]
        ]
    },
    {
        "id": "623733b55942d861",
        "type": "mysql",
        "z": "41d0abfd696e535f",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 810,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "ca3e0cdcd248e3ce",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart humi",
        "func": "// FLOW GET\nlet humi = flow.get('humi') || 0;\n\n// MSG\nmsg.topic = 'Indoor';\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 1300,
        "wires": [
            [
                "dd35345dfdeffca7"
            ]
        ]
    },
    {
        "id": "b39c2adbd815f43c",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart outdoor_humi",
        "func": "// FLOW GET\nlet outdoor_humi = flow.get('outdoor_humi');\n\n// MSG\nmsg.topic = 'Outdoor';\nmsg.payload = outdoor_humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1260,
        "wires": [
            [
                "dd35345dfdeffca7"
            ]
        ]
    },
    {
        "id": "bc50948f333029d5",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Temp ui_control",
        "func": "// FLOW GET\nlet temp = flow.get('temp');\nlet outdoor_temp = flow.get('outdoor_temp');\n\n// SET\nlet start = -20;\nlet end = 50;\n\nif(temp > outdoor_temp) {\n    start = Math.round(outdoor_temp - 5);\n    end = Math.round(temp + 1);\n} else {\n    start = Math.round(temp + 5);\n    end = Math.round(outdoor_temp - 1);\n}\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 720,
        "wires": [
            [
                "bc69de9c3b4bfb66"
            ]
        ]
    },
    {
        "id": "cde228b6ed1c6666",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\n//msg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1220,
        "wires": [
            [
                "dd35345dfdeffca7"
            ]
        ]
    },
    {
        "id": "a6e135b3b686e72d",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "gauge Temp ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity');\nlet max_humidity = flow.get('max_humidity');\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = '%';\nmsg = {ui_control:{min:start, max:end, seg1:min_humidity, seg2:max_humidity}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 960,
        "wires": [
            [
                "a23bcb62289e1ba0",
                "807a5b19b5ae997e"
            ]
        ]
    },
    {
        "id": "a23bcb62289e1ba0",
        "type": "ui_gauge",
        "z": "41d0abfd696e535f",
        "name": "gauge Humi",
        "group": "dda6c71d7afc8b96",
        "order": 2,
        "width": "6",
        "height": "3",
        "gtype": "donut",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1750,
        "y": 960,
        "wires": []
    },
    {
        "id": "89da67dd09c06124",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "Outdoor in Luftfeuchtigkeit",
        "info": "",
        "x": 1370,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ded1ef97dc4c9aae",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Humi ui_control",
        "func": "// FLOW GET\nlet humi = flow.get('humi');\n\nlet min_humidity = flow.get('min_humidity') || 40;\nlet max_humidity = flow.get('max_humidity') || 70;\n\n// SET\nlet start = 0;\nlet end = 100;\n\n// MSG\nmsg.topic = 'Aktuel';\nmsg = {ui_control:{ymin:start, ymax:end}, topic:`${msg.topic}`};\nmsg.payload = humi;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1000,
        "wires": [
            [
                "7a304efb36216f07"
            ]
        ]
    },
    {
        "id": "2201f88bb794ef09",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Temp min_temp",
        "func": "// FLOW GET\nlet min_humidity = flow.get('min_humidity');\n\n// MSG\nmsg.topic = 'min';\nmsg.payload = min_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1040,
        "wires": [
            [
                "7a304efb36216f07"
            ]
        ]
    },
    {
        "id": "4775dfb0e79145b4",
        "type": "function",
        "z": "41d0abfd696e535f",
        "name": "chart Temp max_temp",
        "func": "// FLOW GET\nlet max_humidity = flow.get('max_humidity');\n\n// MSG\nmsg.topic = 'max';\nmsg.payload = max_humidity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1080,
        "wires": [
            [
                "7a304efb36216f07"
            ]
        ]
    },
    {
        "id": "7a304efb36216f07",
        "type": "ui_chart",
        "z": "41d0abfd696e535f",
        "name": "chart Humi",
        "group": "dda6c71d7afc8b96",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#adc5e6",
            "#ff7f0e",
            "#ff7f0e",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1750,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "dd35345dfdeffca7",
        "type": "ui_chart",
        "z": "41d0abfd696e535f",
        "name": "chart Outdoor & Indoor humi",
        "group": "ca150b96cb248dec",
        "order": 4,
        "width": "6",
        "height": "3",
        "label": "",
        "chartType": "horizontalBar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0c3f64",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1800,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "b2628998218a6c46",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "Outdoor in Temperatur",
        "info": "",
        "x": 1360,
        "y": 640,
        "wires": []
    },
    {
        "id": "c91c9918b5f2a73f",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "Temperatur",
        "info": "",
        "x": 1330,
        "y": 400,
        "wires": []
    },
    {
        "id": "f2999de124bc04c5",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "SettingsLuftfeuchtigkeit",
        "info": "",
        "x": 380,
        "y": 900,
        "wires": []
    },
    {
        "id": "0d7fb7aa2c649a01",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "Luftfeuchtigkeit",
        "info": "",
        "x": 1340,
        "y": 920,
        "wires": []
    },
    {
        "id": "43222b72c5ba6f1c",
        "type": "ui_gauge",
        "z": "41d0abfd696e535f",
        "name": "gauge Temp Wohnzimmer",
        "group": "ad98f78e05e079c5",
        "order": 8,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "Â°C",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#afd1fd",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1790,
        "y": 360,
        "wires": []
    },
    {
        "id": "4c06e60e83112658",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "VIEW: Home",
        "info": "",
        "x": 1750,
        "y": 320,
        "wires": []
    },
    {
        "id": "7667e3c2689a061b",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "VIEW: Room (Self)",
        "info": "",
        "x": 1770,
        "y": 400,
        "wires": []
    },
    {
        "id": "85335e3fcb799c2a",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "VIEW: Home",
        "info": "",
        "x": 1750,
        "y": 840,
        "wires": []
    },
    {
        "id": "807a5b19b5ae997e",
        "type": "ui_gauge",
        "z": "41d0abfd696e535f",
        "name": "gauge Humi Wohnzimmer",
        "group": "ad98f78e05e079c5",
        "order": 9,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#e6e600",
            "#00b500",
            "#e6e600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1790,
        "y": 880,
        "wires": []
    },
    {
        "id": "841edccb3dfe27eb",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "VIEW: Room (Self)",
        "info": "",
        "x": 1770,
        "y": 920,
        "wires": []
    },
    {
        "id": "3022282fd9af1b8b",
        "type": "comment",
        "z": "41d0abfd696e535f",
        "name": "let room_id = flow.get('room_id') || 2; let sensor_id = flow.get('sensor_id') || 1;",
        "info": "let room_id = flow.get('room_id') || 2;\nlet sensor_id = flow.get('sensor_id') || 1;",
        "x": 910,
        "y": 60,
        "wires": []
    },
    {
        "id": "b5460721ea40e0e8",
        "type": "link in",
        "z": "41d0abfd696e535f",
        "name": "702F79",
        "links": [
            "467c1d5b47958cba"
        ],
        "x": 175,
        "y": 240,
        "wires": [
            [
                "5583cadc1a1f684f",
                "b7de6f4719139587"
            ]
        ]
    },
    {
        "id": "4dd5e452d0fe4dba",
        "type": "cronplus",
        "z": "ff130a5b5bc711f1",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 5 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 300,
        "wires": [
            [
                "835092c2caa0139d",
                "c7e00d6ae766f0fe",
                "c3b5adb7f0d74a09",
                "b3bd4ff481d78732",
                "3828cd7df779218b",
                "894b16f028158c66",
                "c789d4ba2a8ac2a7",
                "a3d5fd6f95bc5836",
                "08c8ebf19e6a7c23"
            ]
        ]
    },
    {
        "id": "47a084ab817968a6",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "INSERT",
        "info": "",
        "x": 840,
        "y": 140,
        "wires": []
    },
    {
        "id": "c3b5adb7f0d74a09",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "OW: INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet ow_current_temp = global.get('ow_current_temp') || 0;\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// OW\nlet ow_temp = context.get('ow_temp') || 0.00;\now_temp = ow_current_temp;\n\nlet ow_hum = context.get('ow_hum') || 0.00;\now_hum = ow_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < ow_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(ow_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(ow_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < ow_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(ow_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(ow_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('2', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 220,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "c7e00d6ae766f0fe",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "WB: INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet wb_current_temp = global.get('wb_current_temp') || 0;\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\n\n// WB\nlet wb_temp = context.get('wb_temp') || 0.00;\nwb_temp = wb_current_temp;\n\nlet wb_hum = context.get('wb_hum') || 0.00;\nwb_hum = wb_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < wb_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(wb_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(wb_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < wb_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(wb_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(wb_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nmsg.payload = wb_current_humidity;\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('3', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 260,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "b3bd4ff481d78732",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "WA: INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet wa_current_temp = global.get('wa_current_temp') || 0;\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\n\n// WB\nlet wa_temp = context.get('wa_temp') || 0.00;\nwa_temp = wa_current_temp;\n\nlet wa_hum = context.get('wa_hum') || 0.00;\nwa_hum = wa_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < wa_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(wa_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(wa_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < wa_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(wa_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(wa_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nmsg.payload = wa_current_humidity;\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('4', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 300,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "835092c2caa0139d",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/cron/compare_data/insert",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 510,
        "y": 180,
        "wires": []
    },
    {
        "id": "0322e9a2232a9749",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1210,
        "y": 240,
        "wires": [
            [
                "f0649a6fb732627f"
            ]
        ]
    },
    {
        "id": "4d1c2c4dd6dbf8d5",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1960,
        "y": 180,
        "wires": [
            [
                "d7605e113cb319f6"
            ]
        ]
    },
    {
        "id": "d7605e113cb319f6",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "Data from YR",
        "func": "msg.topic = \"SELECT co.temp, co.humi FROM `apis` AS `api` JOIN `compare_data` AS `co` ON co.api_id = api.id WHERE api.id = '1'\";\nmsg.payload = `yr`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2175.8958129882812,
        "y": 184.22222900390625,
        "wires": [
            [
                "2716d3c08c462192"
            ]
        ]
    },
    {
        "id": "2716d3c08c462192",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 2386.8958129882812,
        "y": 184.22222900390625,
        "wires": [
            [
                "017d381b4cf9a7b8"
            ]
        ]
    },
    {
        "id": "017d381b4cf9a7b8",
        "type": "json",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2570,
        "y": 180,
        "wires": [
            [
                "56b1e6e08d2a80a2"
            ]
        ]
    },
    {
        "id": "56b1e6e08d2a80a2",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "sum_temp",
        "func": "let list = msg.payload;\nlet sum_temp = 0;\n\nfor(let i=0; i < list.length; i++) {\n    sum_temp = sum_temp + list[i].temp;\n}\n\nmsg.payload = sum_temp.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 180,
        "wires": [
            [
                "6e89688406548b43"
            ]
        ]
    },
    {
        "id": "6e89688406548b43",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2950,
        "y": 180,
        "wires": []
    },
    {
        "id": "d035e41bbe09fb58",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2710,
        "y": 120,
        "wires": []
    },
    {
        "id": "100378d5be7c2e73",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `yr_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(temp) as `ow_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '2'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1240,
        "wires": [
            [
                "1bf367fde44d8e92"
            ]
        ]
    },
    {
        "id": "1bf367fde44d8e92",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1220,
        "wires": [
            [
                "cb5c676fd5f9f284"
            ]
        ]
    },
    {
        "id": "cb5c676fd5f9f284",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1240,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "f61247d38d88d87f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `ow_sum_temp",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(temp) as `ow_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '2'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1280,
        "wires": [
            [
                "fdd18a058e1c339c"
            ]
        ]
    },
    {
        "id": "fdd18a058e1c339c",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1280,
        "wires": [
            [
                "0530fc7b4c66e9aa"
            ]
        ]
    },
    {
        "id": "0530fc7b4c66e9aa",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\now_sum_temp = msg.payload[0].ow_sum_temp;\now_sum_temp = ow_sum_temp.toFixed(2);\now_sum_temp = `-${ow_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1280,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "2c7150e5f83d934f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1340,
        "wires": [
            [
                "49f9f789c0561e80"
            ]
        ]
    },
    {
        "id": "49f9f789c0561e80",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_temp",
        "func": "// GET VARIABLEN\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwb_sum_temp = msg.payload[0].wb_sum_temp;\nwb_sum_temp = wb_sum_temp.toFixed(2);\nwb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_temp', wb_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_temp);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1320,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "ed0f58e7cea930f3",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "HOUR",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "7b2c610b34574b1d",
                "f61247d38d88d87f",
                "100378d5be7c2e73",
                "26516b7b451f0db0",
                "7ef99ade1be61a8c",
                "f561a8614a172b3d",
                "4a1e8067f5140607",
                "ca1404be0d066a92"
            ]
        ]
    },
    {
        "id": "7b2c610b34574b1d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `wb_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT SUM(temp) as `wb_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '3'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1320,
        "wires": [
            [
                "2c7150e5f83d934f"
            ]
        ]
    },
    {
        "id": "dc26421c79597122",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "DAY",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 day)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1440,
        "wires": [
            [
                "100378d5be7c2e73",
                "f61247d38d88d87f",
                "7b2c610b34574b1d",
                "26516b7b451f0db0",
                "7ef99ade1be61a8c",
                "f561a8614a172b3d",
                "4a1e8067f5140607",
                "ca1404be0d066a92"
            ]
        ]
    },
    {
        "id": "9f2a8d0f8580bf32",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "MONTH",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 month)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1500,
        "wires": [
            [
                "100378d5be7c2e73",
                "f61247d38d88d87f",
                "7b2c610b34574b1d",
                "26516b7b451f0db0",
                "7ef99ade1be61a8c",
                "f561a8614a172b3d",
                "4a1e8067f5140607",
                "ca1404be0d066a92"
            ]
        ]
    },
    {
        "id": "26516b7b451f0db0",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "\"SELECT SUM(temp) as `wa_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT SUM(temp) as `wa_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '4'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1360,
        "wires": [
            [
                "74f6c022d9b9814c"
            ]
        ]
    },
    {
        "id": "74f6c022d9b9814c",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1400,
        "wires": [
            [
                "412970fa52a11cb3"
            ]
        ]
    },
    {
        "id": "412970fa52a11cb3",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_temp",
        "func": "// GET VARIABLEN\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwa_sum_temp = msg.payload[0].wa_sum_temp;\nwa_sum_temp = wa_sum_temp.toFixed(2);\nwa_sum_temp = `-${wa_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_temp', wa_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_temp);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1360,
        "wires": [
            [
                "73978670d8a7076e"
            ]
        ]
    },
    {
        "id": "7ef99ade1be61a8c",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiYR",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(humi) as yr_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '1'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "b86e948d6a3730da"
            ]
        ]
    },
    {
        "id": "b86e948d6a3730da",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1500,
        "wires": [
            [
                "f9b84431080e2fe6"
            ]
        ]
    },
    {
        "id": "f9b84431080e2fe6",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_hum",
        "func": "// GET VARIABLEN\nlet yr_sum_hum2 = flow.get('yr_sum_hum') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_hum = msg.payload[0].yr_sum_hum;\nyr_sum_hum = yr_sum_hum.toFixed(2);\nyr_sum_hum = `-${yr_sum_hum}:${msg.headers.sum}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_hum2', yr_sum_hum2);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_hum);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1520,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "9c6a1746d7031e29",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "HUMIDITY",
        "info": "",
        "x": 480,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f561a8614a172b3d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiOW",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(humi) as ow_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '2'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1560,
        "wires": [
            [
                "d83049c8ea6dfb37"
            ]
        ]
    },
    {
        "id": "d83049c8ea6dfb37",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1560,
        "wires": [
            [
                "0cc7023f1daa3ae1"
            ]
        ]
    },
    {
        "id": "0cc7023f1daa3ae1",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_hum",
        "func": "// GET VARIABLEN\nlet ow_sum_hum = flow.get('ow_sum_hum') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\now_sum_hum = msg.payload[0].ow_sum_hum;\now_sum_hum = ow_sum_hum.toFixed(2);\now_sum_hum = `-${ow_sum_hum}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_hum', ow_sum_hum);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_hum);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1560,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "4a1e8067f5140607",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiWB",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT SUM(humi) as wb_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1600,
        "wires": [
            [
                "df0243ef6bd9f1f4"
            ]
        ]
    },
    {
        "id": "df0243ef6bd9f1f4",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1620,
        "wires": [
            [
                "4bcd8f7a6c01d696"
            ]
        ]
    },
    {
        "id": "4bcd8f7a6c01d696",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_hum",
        "func": "// GET VARIABLEN\nlet wb_sum_hum = flow.get('wb_sum_hum') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwb_sum_hum = msg.payload[0].wb_sum_hum;\nwb_sum_hum = wb_sum_hum.toFixed(2);\nwb_sum_hum = `-${wb_sum_hum}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_hum', wb_sum_hum);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_hum);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1600,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "ca1404be0d066a92",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "bestHumiWA",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT SUM(humi) as wa_sum_hum FROM `compare_data` WHERE \" + query+ \" AND `api_id` = '4'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1640,
        "wires": [
            [
                "d1c464d5c4f2136d"
            ]
        ]
    },
    {
        "id": "d1c464d5c4f2136d",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1680,
        "wires": [
            [
                "7c1c77fb4ce22f60"
            ]
        ]
    },
    {
        "id": "7c1c77fb4ce22f60",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_hum",
        "func": "// GET VARIABLEN\nlet wa_sum_hum = flow.get('wa_sum_hum') || 0;\nlet api = msg.headers.sum;\n//let offerer = msg.headers.sum;\n\n// FUNKTION\nwa_sum_hum = msg.payload[0].wa_sum_hum;\nwa_sum_hum = wa_sum_hum.toFixed(2);\nwa_sum_hum = `-${wa_sum_hum}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_hum', wa_sum_hum);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_hum);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1640,
        "wires": [
            [
                "80e316de51758a76"
            ]
        ]
    },
    {
        "id": "6586d537d6997b26",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "TEMPERATUR",
        "info": "",
        "x": 500,
        "y": 1200,
        "wires": []
    },
    {
        "id": "73978670d8a7076e",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 1,
        "width": "6",
        "height": "3",
        "label": "Temperatur Â°C",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Â°C",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ffbf0f",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "80e316de51758a76",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "4f638b1b01f764cd",
        "order": 2,
        "width": "6",
        "height": "3",
        "label": "Luftfeuchte %",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#72b8fd",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "8915ae7c5e0d9e8b",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/cron/compare/hello",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 390,
        "y": 440,
        "wires": []
    },
    {
        "id": "fe4f3a386e59f65a",
        "type": "cronplus",
        "z": "ff130a5b5bc711f1",
        "name": "compare",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "compare",
                "topic": "compare",
                "payloadType": "str",
                "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
                "expressionType": "cron",
                "expression": "0 6 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 620,
        "wires": [
            [
                "8915ae7c5e0d9e8b",
                "f42915855d4b06df",
                "ce5912f0e9f07f4c"
            ]
        ]
    },
    {
        "id": "f42915855d4b06df",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 560,
        "wires": []
    },
    {
        "id": "0f3c28d6f2b40e07",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "text /cron/compare/hello",
        "label": "/cron/compare/hello",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 500,
        "wires": []
    },
    {
        "id": "3828cd7df779218b",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text /cron/compare_data/insert",
        "label": "/cron/compare_data/insert",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "894b16f028158c66",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "c789d4ba2a8ac2a7",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "next /cron/compare_data/insert",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "ce5912f0e9f07f4c",
        "type": "ui_text",
        "z": "ff130a5b5bc711f1",
        "group": "c5697714fb266cca",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "next desc /cron/compare/hello",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 430,
        "y": 540,
        "wires": []
    },
    {
        "id": "f0649a6fb732627f",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/cron/compare_data/insert/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1480,
        "y": 240,
        "wires": []
    },
    {
        "id": "a3d5fd6f95bc5836",
        "type": "delay",
        "z": "ff130a5b5bc711f1",
        "name": "2s",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "ed0f58e7cea930f3"
            ]
        ]
    },
    {
        "id": "9850fd95eb6c14ef",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2340,
        "wires": []
    },
    {
        "id": "7ee1c5f826b21f43",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1220,
        "wires": [
            [
                "ed0f58e7cea930f3"
            ]
        ]
    },
    {
        "id": "91e19817b7caa0c6",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_temp_1h",
        "func": "let sql = \"SELECT * FROM `yr_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1980,
        "wires": [
            [
                "35e9eeeaa2d60f79"
            ]
        ]
    },
    {
        "id": "a47cdec4909a0d00",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "x": 370,
        "y": 2700,
        "wires": [
            [
                "841601c6ccdeb208"
            ]
        ]
    },
    {
        "id": "35e9eeeaa2d60f79",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 1980,
        "wires": [
            [
                "f535bdb3560d9207",
                "a7ec37e18ae897a9",
                "f35bdf5cb26a4f20"
            ]
        ]
    },
    {
        "id": "841601c6ccdeb208",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 9,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "HOUR2",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2780,
        "wires": [
            [
                "91e19817b7caa0c6",
                "db149bfe027d51ad",
                "56d606156425b79c",
                "198d59bbfadaf85a",
                "d3aaa1e7c94b102b",
                "59ac5f7fbe724440",
                "727d77fab665d3b8",
                "45ef2b7266b948ae"
            ]
        ]
    },
    {
        "id": "f535bdb3560d9207",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2260,
        "wires": [
            [
                "5cf78e3730b938b9"
            ]
        ]
    },
    {
        "id": "db149bfe027d51ad",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_temp_1h`",
        "func": "let sql = \"SELECT * FROM `ow_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2040,
        "wires": [
            [
                "51927836d2086bb1"
            ]
        ]
    },
    {
        "id": "51927836d2086bb1",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2040,
        "wires": [
            [
                "695a7a8515fc863d"
            ]
        ]
    },
    {
        "id": "695a7a8515fc863d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\n\n// FUNKTION\now_sum_temp = msg.payload[0].ow_sum_temp;\now_sum_temp = ow_sum_temp.toFixed(2);\now_sum_temp = `-${ow_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2320,
        "wires": [
            [
                "5cf78e3730b938b9",
                "780b439ed13c88c3"
            ]
        ]
    },
    {
        "id": "89ec105b245e4e08",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "DAY2",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 day)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 2860,
        "wires": [
            [
                "3b7acb53dafe710d",
                "0ae198bc2dca6bf8",
                "d42d6c1dd21579cb",
                "cc52706ec8bb874e",
                "6e4579f681274c4a",
                "6f9774cf44caf4df",
                "b5b7523a5991796d",
                "612b3bbedd3832fc"
            ]
        ]
    },
    {
        "id": "3b7acb53dafe710d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_temp_1d",
        "func": "let sql = \"SELECT * FROM `yr_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2260,
        "wires": [
            [
                "6619e1677926c992"
            ]
        ]
    },
    {
        "id": "0ae198bc2dca6bf8",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_temp_1d`",
        "func": "let sql = \"SELECT * FROM `ow_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2320,
        "wires": [
            [
                "70ef16d2a4e59d03"
            ]
        ]
    },
    {
        "id": "6619e1677926c992",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2260,
        "wires": [
            [
                "f535bdb3560d9207",
                "f35bdf5cb26a4f20"
            ]
        ]
    },
    {
        "id": "70ef16d2a4e59d03",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2320,
        "wires": [
            [
                "695a7a8515fc863d"
            ]
        ]
    },
    {
        "id": "5cf78e3730b938b9",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 7,
        "width": "6",
        "height": "3",
        "label": "Temperatur Â°C",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Â°C",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ffbf0f",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1560,
        "y": 2340,
        "wires": [
            [
                "9850fd95eb6c14ef"
            ]
        ]
    },
    {
        "id": "56d606156425b79c",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_temp_1h`",
        "func": "let sql = \"SELECT * FROM `wb_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2100,
        "wires": [
            [
                "33c67d01dd0f4333"
            ]
        ]
    },
    {
        "id": "33c67d01dd0f4333",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2100,
        "wires": [
            [
                "bd61e61059bacf32"
            ]
        ]
    },
    {
        "id": "bd61e61059bacf32",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_temp",
        "func": "// GET VARIABLEN\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\n\n// FUNKTION\nwb_sum_temp = msg.payload[0].wb_sum_temp;\nwb_sum_temp = wb_sum_temp.toFixed(2);\nwb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_temp', wb_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_temp);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2380,
        "wires": [
            [
                "5cf78e3730b938b9"
            ]
        ]
    },
    {
        "id": "d42d6c1dd21579cb",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_temp_1d`",
        "func": "let sql = \"SELECT * FROM `wb_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2380,
        "wires": [
            [
                "40f7abc710c2cebe"
            ]
        ]
    },
    {
        "id": "40f7abc710c2cebe",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2380,
        "wires": [
            [
                "bd61e61059bacf32"
            ]
        ]
    },
    {
        "id": "198d59bbfadaf85a",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_temp_1h`",
        "func": "let sql = \"SELECT * FROM `wa_sum_temp_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2160,
        "wires": [
            [
                "f37e7a99ed6e65d9"
            ]
        ]
    },
    {
        "id": "f37e7a99ed6e65d9",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2160,
        "wires": [
            [
                "2a276ba23201a9eb"
            ]
        ]
    },
    {
        "id": "2a276ba23201a9eb",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_temp",
        "func": "// GET VARIABLEN\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\n\n// FUNKTION\nwa_sum_temp = msg.payload[0].wa_sum_temp;\nwa_sum_temp = wa_sum_temp.toFixed(2);\nwa_sum_temp = `-${wa_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_temp', wa_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_temp);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 2440,
        "wires": [
            [
                "5cf78e3730b938b9"
            ]
        ]
    },
    {
        "id": "cc52706ec8bb874e",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_temp_1d`",
        "func": "let sql = \"SELECT * FROM `wa_sum_temp_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2440,
        "wires": [
            [
                "2aa447d0ee94b724"
            ]
        ]
    },
    {
        "id": "2aa447d0ee94b724",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2440,
        "wires": [
            [
                "2a276ba23201a9eb"
            ]
        ]
    },
    {
        "id": "91f785fe9742d32e",
        "type": "ui_button",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "MONTH2",
        "tooltip": "",
        "color": "#333",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 month)",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 2940,
        "wires": [
            [
                "d576e12b014f2ce5",
                "258a92b69d4f4a3f",
                "d22dcae7ef3a5bbe",
                "d1dc15db4249248a",
                "fb16eb51eee69c9f",
                "d3c7fe675a3c5c4d",
                "065b0fe11503171b",
                "d00f9d4bd188fdbb"
            ]
        ]
    },
    {
        "id": "d576e12b014f2ce5",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_temp_1m",
        "func": "let sql = \"SELECT * FROM `yr_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2560,
        "wires": [
            [
                "20287b89c2540113"
            ]
        ]
    },
    {
        "id": "258a92b69d4f4a3f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_temp_1m`",
        "func": "let sql = \"SELECT * FROM `ow_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2620,
        "wires": [
            [
                "5369ac459efa6c3e"
            ]
        ]
    },
    {
        "id": "d22dcae7ef3a5bbe",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_temp_1m`",
        "func": "let sql = \"SELECT * FROM `wb_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2680,
        "wires": [
            [
                "5a37a519ad058eb2"
            ]
        ]
    },
    {
        "id": "d1dc15db4249248a",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_temp_1m`",
        "func": "let sql = \"SELECT * FROM `wa_sum_temp_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2740,
        "wires": [
            [
                "522a3d74ccba9c0f"
            ]
        ]
    },
    {
        "id": "20287b89c2540113",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2560,
        "wires": [
            [
                "f535bdb3560d9207"
            ]
        ]
    },
    {
        "id": "5369ac459efa6c3e",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2620,
        "wires": [
            [
                "695a7a8515fc863d"
            ]
        ]
    },
    {
        "id": "5a37a519ad058eb2",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2680,
        "wires": [
            [
                "bd61e61059bacf32"
            ]
        ]
    },
    {
        "id": "522a3d74ccba9c0f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2740,
        "wires": [
            [
                "2a276ba23201a9eb"
            ]
        ]
    },
    {
        "id": "5e5cc5e58ddaecc0",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "TEMPERATUR",
        "info": "",
        "x": 660,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b288c730afb6d9c8",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "HUMIDITY",
        "info": "",
        "x": 640,
        "y": 2860,
        "wires": []
    },
    {
        "id": "b8db6288473fb5cb",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 2220,
        "wires": []
    },
    {
        "id": "a7ec37e18ae897a9",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 1920,
        "wires": []
    },
    {
        "id": "780b439ed13c88c3",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2300,
        "wires": []
    },
    {
        "id": "d3aaa1e7c94b102b",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `yr_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2900,
        "wires": [
            [
                "8bbcedf30b3dd2d4"
            ]
        ]
    },
    {
        "id": "8bbcedf30b3dd2d4",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2900,
        "wires": [
            [
                "04c84f2ef314e78f",
                "b481ff84bbbd95ae"
            ]
        ]
    },
    {
        "id": "04c84f2ef314e78f",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 2840,
        "wires": []
    },
    {
        "id": "59ac5f7fbe724440",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `ow_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2960,
        "wires": [
            [
                "51e89abeeaa051d2"
            ]
        ]
    },
    {
        "id": "51e89abeeaa051d2",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 2960,
        "wires": [
            [
                "299aa726ac05c969",
                "1b85974faf1eac6b"
            ]
        ]
    },
    {
        "id": "299aa726ac05c969",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 2900,
        "wires": []
    },
    {
        "id": "727d77fab665d3b8",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `wb_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3020,
        "wires": [
            [
                "4c033639dcd9dd04"
            ]
        ]
    },
    {
        "id": "4c033639dcd9dd04",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3020,
        "wires": [
            [
                "5bdb0eb51b049271"
            ]
        ]
    },
    {
        "id": "45ef2b7266b948ae",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_humi_1h`",
        "func": "let sql = \"SELECT * FROM `wa_sum_humi_1h`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3080,
        "wires": [
            [
                "510e1f8a1b8a5889"
            ]
        ]
    },
    {
        "id": "510e1f8a1b8a5889",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3080,
        "wires": [
            [
                "9c670ea3ccd70e20"
            ]
        ]
    },
    {
        "id": "6e4579f681274c4a",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `ow_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3240,
        "wires": [
            [
                "e99c793959f89334"
            ]
        ]
    },
    {
        "id": "e99c793959f89334",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3240,
        "wires": [
            [
                "1b85974faf1eac6b"
            ]
        ]
    },
    {
        "id": "6f9774cf44caf4df",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `yr_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3180,
        "wires": [
            [
                "15125689ae87297d"
            ]
        ]
    },
    {
        "id": "15125689ae87297d",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3180,
        "wires": [
            [
                "b481ff84bbbd95ae"
            ]
        ]
    },
    {
        "id": "b5b7523a5991796d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `wb_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3300,
        "wires": [
            [
                "73aed26e2a9f3d15"
            ]
        ]
    },
    {
        "id": "73aed26e2a9f3d15",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3300,
        "wires": [
            [
                "5bdb0eb51b049271"
            ]
        ]
    },
    {
        "id": "612b3bbedd3832fc",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_humi_1d",
        "func": "let sql = \"SELECT * FROM `wa_sum_humi_1d`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3360,
        "wires": [
            [
                "43b3f28cd22d684d"
            ]
        ]
    },
    {
        "id": "43b3f28cd22d684d",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3360,
        "wires": [
            [
                "9c670ea3ccd70e20"
            ]
        ]
    },
    {
        "id": "1a9a14b319afbda7",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "group": "cc53f78006ac9146",
        "order": 8,
        "width": "6",
        "height": "3",
        "label": "Luftfeuchte %",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#72b8fd",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1600,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "b481ff84bbbd95ae",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_humi",
        "func": "// GET VARIABLEN\nlet yr_sum_humi = flow.get('yr_sum_humi') || 0;\n\n// FUNKTION\nyr_sum_humi = msg.payload[0].yr_sum_humi;\nyr_sum_humi = yr_sum_humi.toFixed(2);\nyr_sum_humi = `-${yr_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_humi', yr_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_humi);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3180,
        "wires": [
            [
                "1a9a14b319afbda7",
                "bbada1c7541bb108"
            ]
        ]
    },
    {
        "id": "1b85974faf1eac6b",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_humi",
        "func": "// GET VARIABLENi\nlet ow_sum_hum = flow.get('ow_sum_hum') || 0;\n\n// FUNKTION\now_sum_humi = msg.payload[0].ow_sum_humi;\now_sum_humi = ow_sum_humi.toFixed(2);\now_sum_humi = `-${ow_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_humi', ow_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_humi);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3240,
        "wires": [
            [
                "1a9a14b319afbda7"
            ]
        ]
    },
    {
        "id": "5bdb0eb51b049271",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_hum",
        "func": "// GET VARIABLEN\nlet wb_sum_humi = flow.get('wb_sum_humi') || 0;\n\n// FUNKTION\nwb_sum_humi = msg.payload[0].wb_sum_humi;\nwb_sum_humi = wb_sum_humi.toFixed(2);\nwb_sum_humi = `-${wb_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_humi', wb_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_humi);\nmsg.topic = 'wb';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3300,
        "wires": [
            [
                "1a9a14b319afbda7"
            ]
        ]
    },
    {
        "id": "9c670ea3ccd70e20",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_humi",
        "func": "// GET VARIABLEN\nlet wa_sum_humi = flow.get('wa_sum_humi') || 0;\n\n// FUNKTION\nwa_sum_humi = msg.payload[0].wa_sum_humi;\nwa_sum_humi = wa_sum_humi.toFixed(2);\nwa_sum_humi = `-${wa_sum_humi}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_humi', wa_sum_humi);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_humi);\nmsg.topic = 'wa';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 3360,
        "wires": [
            [
                "1a9a14b319afbda7"
            ]
        ]
    },
    {
        "id": "bbada1c7541bb108",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 3160,
        "wires": []
    },
    {
        "id": "fb16eb51eee69c9f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `yr_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `yr_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3460,
        "wires": [
            [
                "b5d1c8e14647ceb7"
            ]
        ]
    },
    {
        "id": "d3c7fe675a3c5c4d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `ow_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `ow_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3520,
        "wires": [
            [
                "d55f974d2cf1c54f"
            ]
        ]
    },
    {
        "id": "065b0fe11503171b",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wb_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `wb_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3580,
        "wires": [
            [
                "086a838e8e48d3ef"
            ]
        ]
    },
    {
        "id": "d00f9d4bd188fdbb",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `wa_sum_humi_1m",
        "func": "let sql = \"SELECT * FROM `wa_sum_humi_1m`\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3640,
        "wires": [
            [
                "aa2ede634bc361eb"
            ]
        ]
    },
    {
        "id": "b5d1c8e14647ceb7",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3460,
        "wires": [
            [
                "b481ff84bbbd95ae"
            ]
        ]
    },
    {
        "id": "d55f974d2cf1c54f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3520,
        "wires": [
            [
                "1b85974faf1eac6b"
            ]
        ]
    },
    {
        "id": "086a838e8e48d3ef",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3580,
        "wires": [
            [
                "5bdb0eb51b049271"
            ]
        ]
    },
    {
        "id": "aa2ede634bc361eb",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1010,
        "y": 3640,
        "wires": [
            [
                "9c670ea3ccd70e20"
            ]
        ]
    },
    {
        "id": "a8628ee5e8a4ed36",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 1980,
        "wires": [
            [
                "91e19817b7caa0c6"
            ]
        ]
    },
    {
        "id": "f35bdf5cb26a4f20",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].yr_sum_temp;\nyr_sum_temp = yr_sum_temp.toFixed(2);\nyr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2180,
        "wires": [
            [
                "b8db6288473fb5cb"
            ]
        ]
    },
    {
        "id": "49bc84b579dd3872",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "compare_ow",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet ow_current_temp = global.get('ow_current_temp') || 0;\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// OW\nlet ow_temp = context.get('ow_temp') || 0.00;\now_temp = JSON.parse(ow_current_temp).ow_temp;\n\nlet ow_hum = context.get('ow_hum') || 0.00;\now_hum = JSON.parse(ow_current_humidity).ow_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < ow_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(ow_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(ow_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < ow_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(ow_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(ow_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('2', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1027.1180419921875,
        "y": 79.88888549804688,
        "wires": [
            []
        ]
    },
    {
        "id": "08c8ebf19e6a7c23",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "YR: \"INSERT INTO `compare_data`",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet yr_current_temp = global.get('yr_current_temp') || 0;\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\n// YR\nlet yr_temp = context.get('yr_temp') || 0.00;\nyr_temp = yr_current_temp;\n\nlet yr_hum = context.get('yr_yhum') || 0.00;\nyr_hum = yr_current_humidity;\n\nlet sum_diff_temp = 0.00;\nlet sum_diff_hum = 0.00;\nlet temp = 'opt';\nlet hum = 'opt';\n\n// TEMP\nif(na_outdoor_temp < yr_temp) {\n    temp = 'up';\n    sum_diff_temp = parseFloat(yr_temp) - parseFloat(na_outdoor_temp);\n} else {\n    temp = 'down';\n    sum_diff_temp = parseFloat(na_outdoor_temp) - parseFloat(yr_temp);\n}\nsum_diff_temp = sum_diff_temp.toFixed(2);\n\n// HUMIDITY\nif(na_outdoor_hum < yr_hum) {\n    hum = 'up';\n    sum_diff_hum = parseFloat(yr_hum) - parseFloat(na_outdoor_hum);\n} else {\n    hum = 'down';\n    sum_diff_hum = parseFloat(na_outdoor_hum) - parseFloat(yr_hum);\n}\nsum_diff_hum = sum_diff_hum.toFixed(2);\n\nlet sql = \"INSERT INTO `compare_data` (`api_id`, `temp`, `diff_temp`, `humi`, `diff_humi`) VALUE ('1', '\" + sum_diff_temp + \"', '\" + temp + \"', '\" + sum_diff_hum + \"', '\" + hum + \"')\";\n\nmsg.topic = sql;\nmsg.payload = yr_temp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "0322e9a2232a9749"
            ]
        ]
    },
    {
        "id": "67ae88b22a26bcfe",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 500,
        "wires": []
    },
    {
        "id": "f25ef0c6f2cd348d",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `yr_sum_temp`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT SUM(temp) as `yr_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '1'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b4bd8fcdcfb47a9f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1290,
        "y": 560,
        "wires": [
            [
                "67ae88b22a26bcfe"
            ]
        ]
    },
    {
        "id": "3ce1a3f1fad74daa",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "updated >= DATE_SUB(NOW(),INTERVAL 1 hour)",
        "payloadType": "str",
        "x": 770,
        "y": 520,
        "wires": [
            [
                "f25ef0c6f2cd348d",
                "05f164f42c6b0ec8"
            ]
        ]
    },
    {
        "id": "05f164f42c6b0ec8",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT SUM(temp) as `ow_sum_temp",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT SUM(temp) as `ow_sum_temp` FROM `compare_data` WHERE \" + query + \" AND `api_id` = '2'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 580,
        "wires": [
            [
                "b4bd8fcdcfb47a9f"
            ]
        ]
    },
    {
        "id": "27013491b1d42b2f",
        "type": "debug",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 380,
        "wires": []
    },
    {
        "id": "69958cbef501b3e2",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1100,
        "y": 380,
        "wires": [
            [
                "73d4b811c8c5ce91"
            ]
        ]
    },
    {
        "id": "73d4b811c8c5ce91",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "GLOBAL",
        "func": "let na_outdoor_temp = global.get('na_outdoor_temp') || 0;\nlet na_outdoor_hum = global.get('na_outdoor_hum') || 0;\n\nlet yr_current_temp = global.get('yr_current_temp') || 0;\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\nmsg.payload = `${na_outdoor_temp} : ${yr_current_temp}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 380,
        "wires": [
            [
                "27013491b1d42b2f"
            ]
        ]
    },
    {
        "id": "a7a67db80860f1f2",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"1\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 1 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 840,
        "wires": [
            [
                "6d28437d6e116d9f"
            ]
        ]
    },
    {
        "id": "6e2c03093e79d53a",
        "type": "inject",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 860,
        "wires": [
            [
                "a7a67db80860f1f2",
                "b0b6fe7144a29263",
                "4de46ff0a453d73c",
                "71b845e944db0583",
                "3837d26f87d562ee",
                "f441eb3ccf31da5f"
            ]
        ]
    },
    {
        "id": "f8809afca47dcf39",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "yr_sum_temp",
        "func": "// GET VARIABLEN\nlet yr_sum_temp = flow.get('yr_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nyr_sum_temp = msg.payload[0].temperatur;\nyr_sum_temp = yr_sum_temp.toFixed(2);\n//yr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('yr_sum_temp', yr_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(yr_sum_temp);\nmsg.topic = 'yr';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 840,
        "wires": [
            [
                "0e19a26ac81dd983",
                "3503eb0b174c3e6e"
            ]
        ]
    },
    {
        "id": "b0b6fe7144a29263",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"2\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 2 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 900,
        "wires": [
            [
                "201f40eb65cc1469"
            ]
        ]
    },
    {
        "id": "2ceb50c55d997b9e",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "ow_sum_temp",
        "func": "// GET VARIABLEN\nlet ow_sum_temp = flow.get('ow_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\now_sum_temp = msg.payload[0].temperatur;\now_sum_temp = ow_sum_temp.toFixed(2);\n//ow_sum_temp = `-${ow_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('ow_sum_temp', ow_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(ow_sum_temp);\nmsg.topic = 'ow';\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 900,
        "wires": [
            [
                "0e19a26ac81dd983",
                "a184c0f46f7c4153"
            ]
        ]
    },
    {
        "id": "6d28437d6e116d9f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 840,
        "wires": [
            [
                "f8809afca47dcf39"
            ]
        ]
    },
    {
        "id": "4de46ff0a453d73c",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"3\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 3 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 960,
        "wires": [
            [
                "09b1a587f9eeb775"
            ]
        ]
    },
    {
        "id": "12a2f701b9883ca0",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wb_sum_temp",
        "func": "// GET VARIABLEN\nlet wb_sum_temp = flow.get('wb_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwb_sum_temp = msg.payload[0].temperatur;\nwb_sum_temp = wb_sum_temp.toFixed(2);\n//wb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wb_sum_temp', wb_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wb_sum_temp);\nmsg.topic = 'wb';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 960,
        "wires": [
            [
                "0e19a26ac81dd983",
                "6875c61d54c69d20"
            ]
        ]
    },
    {
        "id": "201f40eb65cc1469",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 900,
        "wires": [
            [
                "2ceb50c55d997b9e"
            ]
        ]
    },
    {
        "id": "09b1a587f9eeb775",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 960,
        "wires": [
            [
                "12a2f701b9883ca0"
            ]
        ]
    },
    {
        "id": "df83e6a1afc99ab2",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "Home / Api-Check",
        "info": "",
        "x": 1410,
        "y": 680,
        "wires": []
    },
    {
        "id": "0ae5ca30952bbff6",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "Check Diff",
        "info": "",
        "x": 1380,
        "y": 1260,
        "wires": []
    },
    {
        "id": "71b845e944db0583",
        "type": "mqtt out",
        "z": "ff130a5b5bc711f1",
        "name": "",
        "topic": "/interval/current_compare/api",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 540,
        "y": 660,
        "wires": []
    },
    {
        "id": "3837d26f87d562ee",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT `temperatur` FROM `api_data_current`",
        "func": "let query = context.get('query') || \"\";\nquery = msg.payload;\n\nmsg.headers = {\"sum\": \"4\"};\nmsg.topic = \"SELECT `temperatur` FROM `api_data_current` WHERE `api_id` = 4 ORDER BY `api_data_current`.`updated` DESC LIMIT 0, 1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1020,
        "wires": [
            [
                "eae858c895eaf41f"
            ]
        ]
    },
    {
        "id": "eae858c895eaf41f",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 1020,
        "wires": [
            [
                "394d14e6a6b60986"
            ]
        ]
    },
    {
        "id": "394d14e6a6b60986",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "wa_sum_temp",
        "func": "// GET VARIABLEN\nlet wa_sum_temp = flow.get('wa_sum_temp') || 0;\nlet offerer = msg.headers.sum;\n\n// FUNKTION\nwa_sum_temp = msg.payload[0].temperatur;\nwa_sum_temp = wa_sum_temp.toFixed(2);\n//wb_sum_temp = `-${wb_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('wa_sum_temp', wa_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(wa_sum_temp);\nmsg.topic = 'wa';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1020,
        "wires": [
            [
                "0e19a26ac81dd983",
                "cc3b892c40c86676"
            ]
        ]
    },
    {
        "id": "f441eb3ccf31da5f",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "SELECT * FROM `sensor_data`",
        "func": "msg.topic = \"SELECT `temp` FROM `sensor_data` WHERE sensor_id = '4' ORDER BY `updated` desc LIMIT 0, 1\";\nmsg.payload = `Netatmo Outdoor`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 780,
        "wires": [
            [
                "657e973f49860608"
            ]
        ]
    },
    {
        "id": "657e973f49860608",
        "type": "mysql",
        "z": "ff130a5b5bc711f1",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 890,
        "y": 780,
        "wires": [
            [
                "1ea3ab37456e7cdd"
            ]
        ]
    },
    {
        "id": "1ea3ab37456e7cdd",
        "type": "function",
        "z": "ff130a5b5bc711f1",
        "name": "sensor_sum_temp",
        "func": "// GET VARIABLEN\nlet sensor_sum_temp = flow.get('sensor_sum_temp') || 0;\n\n// FUNKTION\nsensor_sum_temp = msg.payload[0].temp;\n//sensor_sum_temp = sensor_sum_temp.toFixed(2);\n//yr_sum_temp = `-${yr_sum_temp}`;\n\n// SET VARIABLEN\nflow.set('sensor_sum_temp', sensor_sum_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = parseFloat(sensor_sum_temp);\nmsg.topic = 'sen';\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "0e19a26ac81dd983",
                "3503eb0b174c3e6e",
                "a184c0f46f7c4153",
                "6875c61d54c69d20",
                "cc3b892c40c86676"
            ]
        ]
    },
    {
        "id": "2c43b380943590e2",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "App-Vergleich",
        "info": "",
        "x": 1390,
        "y": 780,
        "wires": []
    },
    {
        "id": "a184c0f46f7c4153",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur OW",
        "group": "60f0ebd00e6b60cd",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#aec7e8",
            "#98df8a",
            "#ff7f0e",
            "#98df8a",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "6875c61d54c69d20",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur WB",
        "group": "65f8c5e11dd5d55d",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#98df8a",
            "#ff7f0e",
            "#98df8a",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "cc3b892c40c86676",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur WA",
        "group": "9fae8a7151b26655",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ca02c",
            "#94d986",
            "#ff7f0e",
            "#94d986",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "dea76a87f591efe7",
        "type": "comment",
        "z": "ff130a5b5bc711f1",
        "name": "App-Vergleich",
        "info": "",
        "x": 1631.2291259765625,
        "y": 684.3333129882812,
        "wires": []
    },
    {
        "id": "30a9bd9b40aee0ea",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur Â°C NOW",
        "group": "6843c9d76c2010bd",
        "order": 1,
        "width": "6",
        "height": "10",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1660,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "0e19a26ac81dd983",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur Â°C NOW",
        "group": "2e2cb0c53355f590",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1420,
        "y": 720,
        "wires": [
            [
                "30a9bd9b40aee0ea"
            ]
        ]
    },
    {
        "id": "3503eb0b174c3e6e",
        "type": "ui_chart",
        "z": "ff130a5b5bc711f1",
        "name": "Temperatur YR",
        "group": "275a2431d292dd0b",
        "order": 1,
        "width": "6",
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#93d885",
            "#ff7f0e",
            "#93d885",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1400,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "3afb01419e7d6bc0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "payload[0].forecast_time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1410,
        "y": 120,
        "wires": []
    },
    {
        "id": "33d6c9f469c07e09",
        "type": "inject",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 260,
        "wires": [
            [
                "cee62cde25d95489",
                "f19982e021d36c7b",
                "4cbc6a2333d9de15"
            ]
        ]
    },
    {
        "id": "dd47978c9bb4e2ac",
        "type": "debug",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "cee62cde25d95489",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_21h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_21h` WHERE `api_id` = 3\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "dd47978c9bb4e2ac",
                "4003e4b9f67b4a28"
            ]
        ]
    },
    {
        "id": "4003e4b9f67b4a28",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 200,
        "wires": [
            [
                "36c61ceab2a2958e",
                "328b2608062c4b3c",
                "34ea73fefcc0bdbb"
            ]
        ]
    },
    {
        "id": "36c61ceab2a2958e",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "FCT DATE SMALL",
        "func": "// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    fct = `${d}.${mon}.${y}`;\n    return fct;\n}\n\ncontent = fctDate(msg.payload[0].forecast_time);\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "3afb01419e7d6bc0"
            ]
        ]
    },
    {
        "id": "328b2608062c4b3c",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 200,
        "wires": []
    },
    {
        "id": "34ea73fefcc0bdbb",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 240,
        "wires": []
    },
    {
        "id": "e4856f39e172510e",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 3",
        "info": "",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "f19982e021d36c7b",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_21h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_21h` WHERE `api_id` = 2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 360,
        "wires": [
            [
                "cbad6b19f4d4175a"
            ]
        ]
    },
    {
        "id": "64c867ed11cb3c49",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 2",
        "info": "",
        "x": 580,
        "y": 320,
        "wires": []
    },
    {
        "id": "cbad6b19f4d4175a",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 360,
        "wires": [
            [
                "2f9441f053fe9dcc",
                "a01a5042bc7b8728"
            ]
        ]
    },
    {
        "id": "e736e96718b020b9",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "openweather",
        "label": "openweather",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 320,
        "wires": []
    },
    {
        "id": "2f9441f053fe9dcc",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 360,
        "wires": []
    },
    {
        "id": "a01a5042bc7b8728",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 10,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "16acd95ac73efab6",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "weatherbit",
        "label": "weatherbit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "dfb1952e0a9a0325",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "FCT DATETIME SMALL",
        "func": "// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${h}:${min}:${s} ${d}.${mon}.${y}`;\n    return fct;\n}\n\ncontent = fctDate(msg.payload[0].forecast_time);\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4cbc6a2333d9de15",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `outdoor_21h`",
        "func": "msg.topic = \"SELECT * FROM `outdoor_21h`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 520,
        "wires": [
            [
                "5597af7b2b81264a"
            ]
        ]
    },
    {
        "id": "75806f5dfc4d8d67",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`sensor_id` = 4",
        "info": "",
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "5597af7b2b81264a",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 520,
        "wires": [
            [
                "9040cfa365fb2b23",
                "2def69af6133987b"
            ]
        ]
    },
    {
        "id": "76435295be4e3a75",
        "type": "inject",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 820,
        "wires": [
            [
                "6f827d0880d161ef",
                "d3fe5444eeccf1de"
            ]
        ]
    },
    {
        "id": "cc9f61bb0096d226",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Sensor Outdoor",
        "label": "Sensor Outdoor",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "9040cfa365fb2b23",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "payload[0].temp",
        "label": "",
        "format": "{{msg.payload[0].temp}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 520,
        "wires": []
    },
    {
        "id": "2def69af6133987b",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "6163fec975554d91",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "payload[0].humi",
        "label": "",
        "format": "{{msg.payload[0].humi}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 560,
        "wires": []
    },
    {
        "id": "6537e7188953f0f3",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 3",
        "info": "",
        "x": 580,
        "y": 720,
        "wires": []
    },
    {
        "id": "6f827d0880d161ef",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_18h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_18h` WHERE `api_id` = 3\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 760,
        "wires": [
            [
                "8479f6b24627b70a"
            ]
        ]
    },
    {
        "id": "8479f6b24627b70a",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 760,
        "wires": [
            [
                "c642661445ba8ed5",
                "f4e7a9fd8720bf5e",
                "b3c99021d2145dc0"
            ]
        ]
    },
    {
        "id": "7571e560618e099d",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "weatherbit",
        "label": "weatherbit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 720,
        "wires": []
    },
    {
        "id": "f4e7a9fd8720bf5e",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 760,
        "wires": []
    },
    {
        "id": "b3c99021d2145dc0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 800,
        "wires": []
    },
    {
        "id": "c642661445ba8ed5",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "FCT DATE SMALL",
        "func": "// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    fct = `${d}.${mon}.${y}`;\n    return fct;\n}\n\ncontent = fctDate(msg.payload[0].forecast_time);\n\nmsg.payload = content;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 680,
        "wires": [
            [
                "7b02d74a9e7388e6"
            ]
        ]
    },
    {
        "id": "7b02d74a9e7388e6",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "payload[0].forecast_time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1410,
        "y": 680,
        "wires": []
    },
    {
        "id": "736ea761aa6e8ebe",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`sensor_id` = 4",
        "info": "",
        "x": 600,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e4e41f09a88df880",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `outdoor_18h`",
        "func": "msg.topic = \"SELECT * FROM `outdoor_18h`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "89333f4746a035b1"
            ]
        ]
    },
    {
        "id": "89333f4746a035b1",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 1060,
        "wires": [
            [
                "76976eca9b13f57f",
                "e930469903ad5216"
            ]
        ]
    },
    {
        "id": "76976eca9b13f57f",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "payload[0].temp",
        "label": "",
        "format": "{{msg.payload[0].temp}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e0b55b998db73099",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Sensor Outdoor",
        "label": "Sensor Outdoor",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e930469903ad5216",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "payload[0].humi",
        "label": "",
        "format": "{{msg.payload[0].humi}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d3fe5444eeccf1de",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `forecast_18h`",
        "func": "msg.topic = \"SELECT * FROM `forecast_18h` WHERE `api_id` = 2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 900,
        "wires": [
            [
                "1f99d51f07220907"
            ]
        ]
    },
    {
        "id": "8f315c461d54b545",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`api_id` = 2",
        "info": "",
        "x": 580,
        "y": 860,
        "wires": []
    },
    {
        "id": "1f99d51f07220907",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 900,
        "wires": [
            [
                "bea3d9db4d24da5a",
                "8c78469dfd0d07e9"
            ]
        ]
    },
    {
        "id": "afc5a14e7cf532e0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "openweather",
        "label": "openweather",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "bea3d9db4d24da5a",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "payload[0].temperatur",
        "label": "",
        "format": "{{msg.payload[0].temperatur}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 900,
        "wires": []
    },
    {
        "id": "8c78469dfd0d07e9",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "ad7a4b76b6c81f5b",
        "order": 10,
        "width": "3",
        "height": "1",
        "name": "payload[0].humidity",
        "label": "",
        "format": "{{msg.payload[0].humidity}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1150,
        "y": 940,
        "wires": []
    },
    {
        "id": "96ccf58d0468af77",
        "type": "comment",
        "z": "f53df285b1e5b9ec",
        "name": "`sensor_id` = 4",
        "info": "",
        "x": 600,
        "y": 1280,
        "wires": []
    },
    {
        "id": "3b59211a1802b448",
        "type": "function",
        "z": "f53df285b1e5b9ec",
        "name": "SELECT * FROM `outdoor_0h`",
        "func": "msg.topic = \"SELECT * FROM `outdoor_0h`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1320,
        "wires": [
            [
                "89881693d3e4262f"
            ]
        ]
    },
    {
        "id": "89881693d3e4262f",
        "type": "mysql",
        "z": "f53df285b1e5b9ec",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 910,
        "y": 1320,
        "wires": [
            [
                "d8b2d5ce91754ae8",
                "a8b0fc4426466d74"
            ]
        ]
    },
    {
        "id": "d8b2d5ce91754ae8",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "020fb88ae35ffb4a",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "payload[0].temp",
        "label": "",
        "format": "{{msg.payload[0].temp}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1320,
        "wires": []
    },
    {
        "id": "30479956c050b4f0",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "020fb88ae35ffb4a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Sensor Outdoor",
        "label": "Sensor Outdoor",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a8b0fc4426466d74",
        "type": "ui_text",
        "z": "f53df285b1e5b9ec",
        "group": "020fb88ae35ffb4a",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "payload[0].humi",
        "label": "",
        "format": "{{msg.payload[0].humi}}%",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 1360,
        "wires": []
    },
    {
        "id": "85195632490f1871",
        "type": "inject",
        "z": "f53df285b1e5b9ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 1320,
        "wires": [
            [
                "3b59211a1802b448"
            ]
        ]
    },
    {
        "id": "0097e6416d98f285",
        "type": "http request",
        "z": "f62f66d5823b7337",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.met.no/weatherapi/locationforecast/2.0/compact?lon=13.4580&lat=52.5105&altitude=90",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "c0d078144616ee92",
                "4088e88382076b83",
                "9b3808baabb97fe3"
            ]
        ]
    },
    {
        "id": "699774d28707a73f",
        "type": "inject",
        "z": "f62f66d5823b7337",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 220,
        "wires": [
            [
                "0097e6416d98f285"
            ]
        ]
    },
    {
        "id": "c0d078144616ee92",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties.meta.updated_at",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 240,
        "wires": []
    },
    {
        "id": "4088e88382076b83",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_clouds`, `air_pressure`, `wind_speed`, `wind_direction_deg`) VALUES ('1', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_temperature + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.relative_humidity + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.cloud_area_fraction + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_pressure_at_sea_level + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_speed + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_from_direction + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "26a99367a49ede11"
            ]
        ]
    },
    {
        "id": "26a99367a49ede11",
        "type": "mysql",
        "z": "f62f66d5823b7337",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "363356fbb90f6f29",
                "2b13a06a01edfea3"
            ]
        ]
    },
    {
        "id": "8c670596fcfb799a",
        "type": "mqtt out",
        "z": "f62f66d5823b7337",
        "name": "",
        "topic": "/cron/current_data/yr",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "3c36f5ae2a4cb93b",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "b8fba3477f3f2672",
        "type": "cronplus",
        "z": "f62f66d5823b7337",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "yr",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 1 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "0097e6416d98f285",
                "52581775394f6167",
                "fc2aa46806510d4d",
                "8c670596fcfb799a"
            ]
        ]
    },
    {
        "id": "51cd753c1d3a7676",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "fc2aa46806510d4d",
        "type": "ui_text",
        "z": "f62f66d5823b7337",
        "group": "95336c470a1da5f7",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/yr",
        "label": "/cron/current_data/yr",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "52581775394f6167",
        "type": "ui_text",
        "z": "f62f66d5823b7337",
        "group": "95336c470a1da5f7",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/yr",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 120,
        "wires": []
    },
    {
        "id": "d586ec97aa30e7aa",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "`api_id` = 1",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "b667a740e7c51a60",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "363356fbb90f6f29",
        "type": "mqtt out",
        "z": "f62f66d5823b7337",
        "name": "",
        "topic": "/cron/current_data/yr/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "9b3808baabb97fe3",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.properties.timeseries[0].data.next_1_hours.details.precipitation_amount",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 280,
        "wires": []
    },
    {
        "id": "2b13a06a01edfea3",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "SELECT * FROM `api_data_current`",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 1 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 680,
        "wires": [
            [
                "bfd7f818aed9862d"
            ]
        ]
    },
    {
        "id": "bfd7f818aed9862d",
        "type": "mysql",
        "z": "f62f66d5823b7337",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "aafd4e8d61be588e",
                "54cedf27ed56e259",
                "cb0b429ce31439e5"
            ]
        ]
    },
    {
        "id": "42cd19d4b3af337f",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "View: Hello / Outdoor",
        "info": "",
        "x": 960,
        "y": 780,
        "wires": []
    },
    {
        "id": "aafd4e8d61be588e",
        "type": "ui_text",
        "z": "f62f66d5823b7337",
        "group": "a2915d3249cfafbe",
        "order": 4,
        "width": "2",
        "height": "2",
        "name": "Temp YR Hello",
        "label": "YR",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}Â°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "e1b7b2c339a9d4ae",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "54cedf27ed56e259",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "yr_current_temp",
        "func": "// GET VARIABLEN\nlet yr_current_temp = global.get('yr_current_temp') || 0;\n\n// FUNKTION\nyr_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('yr_current_temp', yr_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 680,
        "wires": [
            [
                "51cd753c1d3a7676"
            ]
        ]
    },
    {
        "id": "cb0b429ce31439e5",
        "type": "function",
        "z": "f62f66d5823b7337",
        "name": "yr_current_humidity",
        "func": "// GET VARIABLEN\nlet yr_current_humidity = global.get('yr_current_humidity') || 0;\n\n// FUNKTION\nyr_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('yr_current_humidity', yr_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = yr_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 720,
        "wires": [
            [
                "5c051cb5d2465d89"
            ]
        ]
    },
    {
        "id": "e9126bbc1291e71f",
        "type": "inject",
        "z": "f62f66d5823b7337",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "2b13a06a01edfea3"
            ]
        ]
    },
    {
        "id": "1a8563fd73cf0538",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "`api_id` = 1",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "5c051cb5d2465d89",
        "type": "debug",
        "z": "f62f66d5823b7337",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "dc90b6f7a1d5053c",
        "type": "comment",
        "z": "f62f66d5823b7337",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "9526b1e6b5053e7d",
        "type": "function",
        "z": "90217cda5f3aeef5",
        "name": "INSERT INTO `api_data_forecast`",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_clouds`, `air_pressure`, `wind_speed`, `wind_direction_deg`) VALUES ('1', '\" + msg.payload.properties.timeseries[0].time + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_temperature + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.relative_humidity + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.cloud_area_fraction + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.air_pressure_at_sea_level + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_speed + \"', '\" + msg.payload.properties.timeseries[0].data.instant.details.wind_from_direction + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO `api_data_forecast`';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 180,
        "wires": [
            [
                "77011f87a597993c"
            ]
        ]
    },
    {
        "id": "77011f87a597993c",
        "type": "mysql",
        "z": "90217cda5f3aeef5",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "5f9fc01d51be2b29"
            ]
        ]
    },
    {
        "id": "9983289a95d6c00e",
        "type": "comment",
        "z": "90217cda5f3aeef5",
        "name": "FORECAST / INSERT",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "146243646f133373",
        "type": "http request",
        "z": "90217cda5f3aeef5",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.met.no/weatherapi/locationforecast/2.0/compact?lon=13.4580&lat=52.5105&altitude=90",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "9526b1e6b5053e7d"
            ]
        ]
    },
    {
        "id": "0bfab30fd1ece233",
        "type": "mqtt out",
        "z": "90217cda5f3aeef5",
        "name": "",
        "topic": "/cron/forecast_data/yr",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "7d8816fa2b6624a6",
        "type": "cronplus",
        "z": "90217cda5f3aeef5",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYRForecast",
                "topic": "yrForecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "45 23 */1 * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 180,
        "wires": [
            [
                "0bfab30fd1ece233",
                "94b9817431b267c0",
                "6bf2788fa7284912"
            ]
        ]
    },
    {
        "id": "12bd51f0298f6ba9",
        "type": "inject",
        "z": "90217cda5f3aeef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "146243646f133373"
            ]
        ]
    },
    {
        "id": "5f9fc01d51be2b29",
        "type": "mqtt out",
        "z": "90217cda5f3aeef5",
        "name": "",
        "topic": "/cron/forecast_data/yr/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 1370,
        "y": 180,
        "wires": []
    },
    {
        "id": "6bf2788fa7284912",
        "type": "ui_text",
        "z": "90217cda5f3aeef5",
        "group": "1f94dc0cd60b6d46",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/yr",
        "label": "/cron/forecast_data/yr",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 470,
        "y": 40,
        "wires": []
    },
    {
        "id": "94b9817431b267c0",
        "type": "ui_text",
        "z": "90217cda5f3aeef5",
        "group": "1f94dc0cd60b6d46",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/yr",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 480,
        "y": 80,
        "wires": []
    },
    {
        "id": "8f69156c1b02bf03",
        "type": "inject",
        "z": "90217cda5f3aeef5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2c8edd7f46311292",
        "type": "http request",
        "z": "b82b95c5cd6b861b",
        "name": "lat=52.5105&lon=13.4580",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?lat=52.5105&lon=13.4580&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 970,
        "y": 260,
        "wires": [
            [
                "ef6cb408f51d0a26"
            ]
        ]
    },
    {
        "id": "5d2b54dc0b44d70e",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "ef6cb408f51d0a26",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `wind_speed`, `wind_direction_deg`) VALUES ('2', '\" + msg.payload.main.temp + \"', '\" + msg.payload.main.humidity + \"', '\" + msg.payload.weather[0].description + \"', '\" + msg.payload.clouds.all + \"', '\" + msg.payload.main.pressure + \"', '\" + msg.payload.wind.speed + \"', '\" + msg.payload.wind.deg + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "fb38e38676539ae8"
            ]
        ]
    },
    {
        "id": "c6a33c3a2feca6f8",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "`api_id` = 2",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "fb38e38676539ae8",
        "type": "mysql",
        "z": "b82b95c5cd6b861b",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "694aa16d52c7f742",
                "1153f3789a4fe97f"
            ]
        ]
    },
    {
        "id": "4294385b249cdfb6",
        "type": "cronplus",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "yr",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 1 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "2c8edd7f46311292",
                "d635139beb748ea3",
                "f5f97fdc6e6fcb1a",
                "e581ef9752e84b92"
            ]
        ]
    },
    {
        "id": "f3ad32dcba2e1398",
        "type": "inject",
        "z": "b82b95c5cd6b861b",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "2c8edd7f46311292"
            ]
        ]
    },
    {
        "id": "e581ef9752e84b92",
        "type": "mqtt out",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "topic": "/cron/current_data/ow",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "f5f97fdc6e6fcb1a",
        "type": "ui_text",
        "z": "b82b95c5cd6b861b",
        "group": "95336c470a1da5f7",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/ow",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "d635139beb748ea3",
        "type": "ui_text",
        "z": "b82b95c5cd6b861b",
        "group": "95336c470a1da5f7",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/ow",
        "label": "/cron/current_data/ow",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "99be81588eae3afe",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "694aa16d52c7f742",
        "type": "mqtt out",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "topic": "/cron/current_data/ow/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "a48da9909695baa9",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "f2d6e99be34d408c",
        "type": "inject",
        "z": "b82b95c5cd6b861b",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "1153f3789a4fe97f"
            ]
        ]
    },
    {
        "id": "3d35a8af9c421642",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "`api_id` = 2",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "1153f3789a4fe97f",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "SELECT * FROM `api_data_current`",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 2 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 680,
        "wires": [
            [
                "bce3cecbf57ace44"
            ]
        ]
    },
    {
        "id": "bce3cecbf57ace44",
        "type": "mysql",
        "z": "b82b95c5cd6b861b",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "1a1910bbdc408269",
                "a563f3f673bef1c9",
                "48427d89b86c9217"
            ]
        ]
    },
    {
        "id": "19129fd5ec620185",
        "type": "debug",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "a751c199af52da91",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "View: Hello / Outdoor",
        "info": "",
        "x": 960,
        "y": 780,
        "wires": []
    },
    {
        "id": "48427d89b86c9217",
        "type": "ui_text",
        "z": "b82b95c5cd6b861b",
        "group": "a2915d3249cfafbe",
        "order": 5,
        "width": "2",
        "height": "2",
        "name": "Temp OW Hello",
        "label": "OW",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}Â°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "a4d4743a14fb5a29",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "1a1910bbdc408269",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "ow_current_temp",
        "func": "// GET VARIABLEN\nlet ow_current_temp = global.get('ow_current_temp') || 0;\n\n// FUNKTION\now_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('ow_current_temp', ow_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 680,
        "wires": [
            [
                "19129fd5ec620185"
            ]
        ]
    },
    {
        "id": "a563f3f673bef1c9",
        "type": "function",
        "z": "b82b95c5cd6b861b",
        "name": "ow_current_humidity",
        "func": "// GET VARIABLEN\nlet ow_current_humidity = global.get('ow_current_humidity') || 0;\n\n// FUNKTION\now_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('ow_current_humidity', ow_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "4b89155773c0d03c"
            ]
        ]
    },
    {
        "id": "4b89155773c0d03c",
        "type": "debug",
        "z": "b82b95c5cd6b861b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "32208f4a8f0fcd77",
        "type": "comment",
        "z": "b82b95c5cd6b861b",
        "name": "https://openweathermap.org/current",
        "info": "",
        "x": 1000,
        "y": 180,
        "wires": []
    },
    {
        "id": "4e472399c84eb734",
        "type": "http request",
        "z": "b6a2ad0c72d43d34",
        "name": "lat=13.4580&lon=52.5105",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "api.openweathermap.org/data/2.5/forecast?lat=13.4580&lon=52.5105&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "3dafa779826dd8fe",
                "bb290b5ee3592f5c",
                "ee1fc2b141ab884a"
            ]
        ]
    },
    {
        "id": "635e862dae957563",
        "type": "ui_text",
        "z": "b6a2ad0c72d43d34",
        "group": "c3da97eba3f6cdd7",
        "order": 1,
        "width": 6,
        "height": 10,
        "name": "Content",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 2000,
        "y": 800,
        "wires": []
    },
    {
        "id": "411e01d0402d759d",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "setForecast",
        "func": "// GET VARIABLEN\nlet forecast = flow.get('forecast') || {};\nlet limit = 8;\n\n// FUNKTION\nforecast = `{`;\n\nfor(let i=0; i < msg.payload.list.length && i <= limit; i++) {\n    \n    forecast = `${forecast}\n    \"${i}\": \n    [\n        \"${msg.payload.list[i].dt_txt}\", \n        \"${msg.payload.list[i].main.temp}\",\n        \"${msg.payload.list[i].main.humidity}\"\n    ]`;\n    \n    if(i < limit) {\n        forecast = `${forecast},`;\n    }\n}\n\nforecast = `${forecast}\n}`;\n\n// SET VARIABLEN\nflow.set('forecast', forecast);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = forecast;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 660,
        "wires": [
            [
                "0f145398465fbeff"
            ]
        ]
    },
    {
        "id": "0f145398465fbeff",
        "type": "json",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 970,
        "y": 800,
        "wires": [
            [
                "7f12f9751820fc18"
            ]
        ]
    },
    {
        "id": "7f12f9751820fc18",
        "type": "file",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "filename": "data/forecast",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1150,
        "y": 800,
        "wires": [
            [
                "8c8d12e1484a9899"
            ]
        ]
    },
    {
        "id": "8c8d12e1484a9899",
        "type": "file in",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "filename": "data/forecast",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1350,
        "y": 800,
        "wires": [
            [
                "7081bdd21d4e2688"
            ]
        ]
    },
    {
        "id": "7081bdd21d4e2688",
        "type": "json",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 800,
        "wires": [
            [
                "b07c238e2ab822b5"
            ]
        ]
    },
    {
        "id": "b07c238e2ab822b5",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "getForecast",
        "func": "// GET VARIABLEN\nlet forecastView = '';\n\n// FUNKTION\nfor (const [key, value] of Object.entries(msg.payload)) {\n  forecastView = forecastView + convert_date(value[0]) + `<br>`;\n  forecastView = forecastView + `<i class=\"fa fa-thermometer-half\" aria-hidden=\"true\"></i> ` + value[1] + `Â°C | `;\n  forecastView = forecastView + value[2] + `%<br><br>`;\n}\n\nfunction convert_date(intdate) {\n    const date = new Date(intdate);\n\n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    now = `${h}:${min} ${d}.${mon}.${y}`;\n    \n    return now;\n}\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = forecastView;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 800,
        "wires": [
            [
                "635e862dae957563"
            ]
        ]
    },
    {
        "id": "74f6545892d334a5",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "READ",
        "info": "",
        "x": 1330,
        "y": 760,
        "wires": []
    },
    {
        "id": "a9ffd70c32dc89fd",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Request",
        "info": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "f60f5d4e84747f17",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "WRITE",
        "info": "",
        "x": 1130,
        "y": 760,
        "wires": []
    },
    {
        "id": "5347dc66353cddb2",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "GET",
        "info": "",
        "x": 1790,
        "y": 760,
        "wires": []
    },
    {
        "id": "eb14b07b4a23d75b",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "SET",
        "info": "",
        "x": 1310,
        "y": 620,
        "wires": []
    },
    {
        "id": "797c6b2734b6ca81",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "View",
        "info": "",
        "x": 1990,
        "y": 720,
        "wires": []
    },
    {
        "id": "5379b371332862fa",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Convert",
        "info": "",
        "x": 970,
        "y": 760,
        "wires": []
    },
    {
        "id": "31f851579da3fddd",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Convert",
        "info": "",
        "x": 1630,
        "y": 760,
        "wires": []
    },
    {
        "id": "c8bf171f2d45336a",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 990,
        "y": 680,
        "wires": [
            [
                "8c8d12e1484a9899"
            ]
        ]
    },
    {
        "id": "c15d6621306f7b4f",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "INIT",
        "info": "",
        "x": 970,
        "y": 640,
        "wires": []
    },
    {
        "id": "bb290b5ee3592f5c",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`) VALUES ('2', '\" + msg.payload.list[1].dt_txt + \"', '\" + msg.payload.list[1].main.temp + \"', '\" + msg.payload.list[1].main.humidity + \"', '\" + msg.payload.list[1].weather[0].description + \"','\" + msg.payload.list[1].clouds.all + \"', '\" + msg.payload.list[1].main.pressure + \"', '\" + msg.payload.list[1].pop + \"', '\" + msg.payload.list[1].wind.speed + \"', '\" + msg.payload.list[1].wind.deg + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "4713dc648b8bdf83",
                "5ab90645f8abedf0"
            ]
        ]
    },
    {
        "id": "4713dc648b8bdf83",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "5ab90645f8abedf0",
        "type": "mysql",
        "z": "b6a2ad0c72d43d34",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1050,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d1d5627fbd1bf7e8",
        "type": "cronplus",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronOWForecast",
                "topic": "ow-forecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "12 0,3,6,9,12,15,18,21 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 180,
        "y": 340,
        "wires": [
            [
                "ffad4279e5111809",
                "4e472399c84eb734",
                "115d0e2d56b079d4",
                "05e14fb454358505"
            ]
        ]
    },
    {
        "id": "ffad4279e5111809",
        "type": "mqtt out",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "topic": "/cron/forecast_data/ow",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 420,
        "y": 240,
        "wires": []
    },
    {
        "id": "e2990b6f0c512cf5",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "3. Stunde",
        "info": "",
        "x": 640,
        "y": 280,
        "wires": []
    },
    {
        "id": "82ea8f3a6fdcce62",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Stunde: 0,3,6,9,12,15,18,21",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "ffaed8b75bf85a5a",
        "type": "mysql",
        "z": "b6a2ad0c72d43d34",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1050,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "89de4893ed67db82",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "6. Stunde",
        "info": "",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "3dafa779826dd8fe",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "70d5b1504f8dbdb1",
        "type": "http request",
        "z": "b6a2ad0c72d43d34",
        "name": "Berlin",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "api.openweathermap.org/data/2.5/forecast?lat={{{topic.lat}}}&lon={{{topic.lon}}}&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1050,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1f1fccdc29c6c415",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1061.2291259765625,
        "y": 384.8888854980469,
        "wires": []
    },
    {
        "id": "150ed1c96a6b574f",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "api.openweathermap.org/data/2.5/forecast?lat=13.4580&lon=52.5105&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "payloadType": "str",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "4e472399c84eb734"
            ]
        ]
    },
    {
        "id": "ee1fc2b141ab884a",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`) VALUES ('2', '\" + msg.payload.list[2].dt_txt + \"', '\" + msg.payload.list[2].main.temp + \"', '\" + msg.payload.list[2].main.humidity + \"', '\" + msg.payload.list[2].weather[0].description + \"','\" + msg.payload.list[2].clouds.all + \"', '\" + msg.payload.list[2].main.pressure + \"', '\" + msg.payload.list[2].pop + \"', '\" + msg.payload.list[2].wind.speed + \"', '\" + msg.payload.list[2].wind.deg + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": [
            [
                "1f1fccdc29c6c415",
                "ffaed8b75bf85a5a"
            ]
        ]
    },
    {
        "id": "96d604375ff8af9c",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "api.openweathermap.org/data/2.5/forecast?lat=13.4580&lon=52.5105&exclude=hourly&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "payloadType": "str",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "f039f410bdbb1b8a"
            ]
        ]
    },
    {
        "id": "59d2e4be1733a522",
        "type": "mysql",
        "z": "b6a2ad0c72d43d34",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 670,
        "y": 560,
        "wires": [
            [
                "354f0e7e999b8a74"
            ]
        ]
    },
    {
        "id": "f039f410bdbb1b8a",
        "type": "function",
        "z": "b6a2ad0c72d43d34",
        "name": "SELECT `api_data_forecast` ...",
        "func": "msg.topic = \"SELECT * FROM `api_data_forecast` WHERE `api_id` = 2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "59d2e4be1733a522"
            ]
        ]
    },
    {
        "id": "354f0e7e999b8a74",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 560,
        "wires": []
    },
    {
        "id": "05e14fb454358505",
        "type": "ui_text",
        "z": "b6a2ad0c72d43d34",
        "group": "1f94dc0cd60b6d46",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/ow",
        "label": "/cron/forecast_data/ow",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "115d0e2d56b079d4",
        "type": "ui_text",
        "z": "b6a2ad0c72d43d34",
        "group": "1f94dc0cd60b6d46",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/ow",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "58924adca05e55da",
        "type": "http request",
        "z": "b6a2ad0c72d43d34",
        "name": "lat=13.4580&lon=52.5105",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=13.4580&lon=52.5105&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 390,
        "y": 980,
        "wires": [
            [
                "4bdab55ec08df45a"
            ]
        ]
    },
    {
        "id": "83c4161e4ae8f746",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "Request",
        "info": "",
        "x": 340,
        "y": 940,
        "wires": []
    },
    {
        "id": "a0a2523c52f7ac8c",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "https://openweathermap.org/api/hourly-forecast",
        "info": "",
        "x": 460,
        "y": 900,
        "wires": []
    },
    {
        "id": "f4f1b7dd9c9d0cb3",
        "type": "comment",
        "z": "b6a2ad0c72d43d34",
        "name": "https://openweathermap.org/forecast5",
        "info": "",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "42b1fc3e5532a3b8",
        "type": "inject",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 980,
        "wires": [
            [
                "58924adca05e55da"
            ]
        ]
    },
    {
        "id": "4bdab55ec08df45a",
        "type": "debug",
        "z": "b6a2ad0c72d43d34",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 980,
        "wires": []
    },
    {
        "id": "48277557288d1e06",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys_sunrise",
        "func": "// GET VARIABLEN\nlet sys_sunrise = flow.get('sys_sunrise') || 0;\n\n// FUNKTION\nsys_sunrise = msg.payload.sunrise;\n\n// SET VARIABLEN\nflow.set('sys_sunrise', sys_sunrise);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys_sunrise;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1060,
        "wires": [
            [
                "3d10a8765ff07baa"
            ]
        ]
    },
    {
        "id": "328a9c2fcddea503",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys_sunset",
        "func": "// GET VARIABLEN\nlet sys_sunset = flow.get('sys_sunset') || 0;\n\n// FUNKTION\nsys_sunset = msg.payload.sunset;\n\n// SET VARIABLEN\nflow.set('sys_sunset', sys_sunset);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys_sunset;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1100,
        "wires": [
            [
                "f00a189b5d453d95"
            ]
        ]
    },
    {
        "id": "5a649fac7fc948a7",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "sys",
        "func": "// GET VARIABLEN\nlet sys = flow.get('sys') || 0;\n\n// FUNKTION\nsys = msg.payload.sys;\n\n// SET VARIABLEN\nflow.set('sys', sys);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sys;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1020,
        "wires": [
            [
                "48277557288d1e06",
                "328a9c2fcddea503"
            ]
        ]
    },
    {
        "id": "db8196e2a58b061e",
        "type": "http request",
        "z": "ddd61edf8d8f5ce2",
        "name": "Berlin",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?q=Berlin&appid=b162164351c05deadf7a675ec65987be&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 430,
        "y": 800,
        "wires": [
            [
                "7d78cb4c0a316aa1",
                "c3bbe56e3fd921aa",
                "812ee0d99229456e",
                "5a649fac7fc948a7",
                "88ded4fad3d03744",
                "2ceb1d162a097e37",
                "dd580be66d435bae",
                "85c23d534094847b",
                "a38fa710235fcae4",
                "80f50b86215efe48"
            ]
        ]
    },
    {
        "id": "812ee0d99229456e",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main",
        "func": "// GET VARIABLEN\nlet main = flow.get('main') || 0;\n\n// FUNKTION\nmain = msg.payload.main;\n\n// SET VARIABLEN\nflow.set('main', main);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "6fbc41ee6e77ea24",
                "56ab50748b931c65",
                "35eb680bd848b9b7"
            ]
        ]
    },
    {
        "id": "7d78cb4c0a316aa1",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather",
        "func": "// GET VARIABLEN\nlet weather = flow.get('weather') || 0;\n\n// FUNKTION\nweather = msg.payload.weather[0];\n\n// SET VARIABLEN\nflow.set('weather', weather);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 620,
        "wires": [
            [
                "aad5ed3437dd4c01",
                "1e6515eec4565317",
                "83dd913f9d5c4ff9"
            ]
        ]
    },
    {
        "id": "c3bbe56e3fd921aa",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind",
        "func": "// GET VARIABLEN\nlet wind = flow.get('wind') || 0;\n\n// FUNKTION\nwind = msg.payload.wind;\n\n// SET VARIABLEN\nflow.set('wind', wind);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 740,
        "wires": [
            [
                "6d6970e4b24398db",
                "b279c1e1495b48da"
            ]
        ]
    },
    {
        "id": "2ceb1d162a097e37",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all",
        "func": "// GET VARIABLEN\nlet clouds_all = flow.get('clouds_all') || 0;\n\n// FUNKTION\nclouds_all = msg.payload.clouds.all;\n\n// SET VARIABLEN\nflow.set('clouds_all', clouds_all);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = clouds_all;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 860,
        "wires": [
            [
                "cf40801eef0ad09e"
            ]
        ]
    },
    {
        "id": "88ded4fad3d03744",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "name",
        "func": "// GET VARIABLEN\nlet name = flow.get('name') || 0;\n\n// FUNKTION\nname = msg.payload.name;\n\n// SET VARIABLEN\nflow.set('name', name);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = name;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 980,
        "wires": [
            [
                "46e6fbeff51aefe7"
            ]
        ]
    },
    {
        "id": "dd580be66d435bae",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord",
        "func": "// GET VARIABLEN\nlet coord = flow.get('coord') || 0;\n\n// FUNKTION\ncoord = msg.payload.coord;\n\n// SET VARIABLEN\nflow.set('coord', coord);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "2330772a5a5ed9ec",
                "297b168802b4a64a"
            ]
        ]
    },
    {
        "id": "dfce64c56dfea1a6",
        "type": "inject",
        "z": "ddd61edf8d8f5ce2",
        "name": "60 Minuten",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 60,
        "y": 440,
        "wires": [
            [
                "db8196e2a58b061e",
                "3a20fb083ad87a15"
            ]
        ]
    },
    {
        "id": "6fbc41ee6e77ea24",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity",
        "func": "// GET VARIABLEN\nlet main_humidity = flow.get('main_humidity') || 0;\n\n// FUNKTION\nmain_humidity = msg.payload.humidity;\n\n// SET VARIABLEN\nflow.set('main_humidity', main_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 340,
        "wires": [
            [
                "37615a29a00329cb",
                "c88a615761a0bce4",
                "a3cf79842064010e",
                "088ee34d32558547",
                "00a21318c440bff0"
            ]
        ]
    },
    {
        "id": "56ab50748b931c65",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp",
        "func": "// GET VARIABLEN\nlet main_temp = flow.get('main_temp') || 0;\n\n// FUNKTION\nmain_temp = msg.payload.temp;\n\n// SET VARIABLEN\nflow.set('main_temp', main_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 220,
        "wires": [
            [
                "7338a014aa5d7a30",
                "fba9e3d4b7a32d7c",
                "66f5f701db52321e",
                "9d8316e460c6d437",
                "4a7792fb4da6f19c"
            ]
        ]
    },
    {
        "id": "35eb680bd848b9b7",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure",
        "func": "// GET VARIABLEN\nlet main_pressure = flow.get('main_pressure') || 0;\n\n// FUNKTION\nmain_pressure = msg.payload.pressure;\n\n// SET VARIABLEN\nflow.set('main_pressure', main_pressure);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = main_pressure;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 380,
        "wires": [
            [
                "67dd73ff2b4ac974",
                "70373dc283a85ab4"
            ]
        ]
    },
    {
        "id": "aad5ed3437dd4c01",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_main",
        "func": "// GET VARIABLEN\nlet weather_main = flow.get('weather_main') || 0;\n\n// FUNKTION\nweather_main = msg.payload.main;\n\n// SET VARIABLEN\nflow.set('weather_main', weather_main);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_main;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 580,
        "wires": [
            [
                "9d8173ee77d5baae"
            ]
        ]
    },
    {
        "id": "1e6515eec4565317",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_description",
        "func": "// GET VARIABLEN\nlet weather_main = flow.get('weather_description') || 0;\n\n// FUNKTION\nweather_description = msg.payload.description;\n\n// SET VARIABLEN\nflow.set('weather_description', weather_description);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_description;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "83dd913f9d5c4ff9",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "weather_icon",
        "func": "// GET VARIABLEN\nlet weather_icon = flow.get('weather_icon') || 0;\n\n// FUNKTION\nweather_icon = msg.payload.icon;\n\n// SET VARIABLEN\nflow.set('weather_icon', weather_icon);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = weather_icon;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "6d6970e4b24398db",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed",
        "func": "// GET VARIABLEN\nlet wind_speed = flow.get('wind_speed') || 0;\n\n// FUNKTION\nwind_speed = msg.payload.speed;\n\n// SET VARIABLEN\nflow.set('wind_speed', wind_speed);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind_speed;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 740,
        "wires": [
            [
                "da1598ab397e9daf",
                "1f4e9f5ca177a4fb"
            ]
        ]
    },
    {
        "id": "b279c1e1495b48da",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_deg",
        "func": "// GET VARIABLEN\nlet wind_speed = flow.get('wind_deg') || 0;\n\n// FUNKTION\nwind_deg = msg.payload.deg;\n\n// SET VARIABLEN\nflow.set('wind_deg', wind_deg);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wind_deg;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 780,
        "wires": [
            [
                "5502778a80f45e82"
            ]
        ]
    },
    {
        "id": "2330772a5a5ed9ec",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord_lon",
        "func": "// GET VARIABLEN\nlet coord_lon = flow.get('coord_lon') || 0;\n\n// FUNKTION\ncoord_lon = msg.payload.lon;\n\n// SET VARIABLEN\nflow.set('coord_lon', coord_lon);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord_lon;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1160,
        "wires": [
            [
                "9fedbbcfbb6eecaa"
            ]
        ]
    },
    {
        "id": "297b168802b4a64a",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "coord_lat",
        "func": "// GET VARIABLEN\nlet coord_lat = flow.get('coord_lat') || 0;\n\n// FUNKTION\ncoord_lat = msg.payload.lat;\n\n// SET VARIABLEN\nflow.set('coord_lat', coord_lat);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = coord_lat;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "37b7fce468461e6f"
            ]
        ]
    },
    {
        "id": "9d8173ee77d5baae",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "e70d0760bcc08d3a",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "weather_main_text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1210,
        "y": 580,
        "wires": []
    },
    {
        "id": "7338a014aa5d7a30",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_gauge",
        "group": "28f7dbdd3547c09e",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} Â°C",
        "min": "-20",
        "max": "50",
        "colors": [
            "#2a50ea",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "30",
        "className": "",
        "x": 1210,
        "y": 220,
        "wires": []
    },
    {
        "id": "37615a29a00329cb",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_gauge",
        "group": "f697df7ca894247c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} %",
        "min": 0,
        "max": "100",
        "colors": [
            "#4b6470",
            "#00b400",
            "#e7770d"
        ],
        "seg1": "40",
        "seg2": "80",
        "className": "",
        "x": 1220,
        "y": 380,
        "wires": []
    },
    {
        "id": "c88a615761a0bce4",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_chart",
        "group": "f697df7ca894247c",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "da1598ab397e9daf",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_gauge",
        "group": "7177e1bbce7a0779",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{msg.payload}} m/s",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "8",
        "seg2": "12",
        "className": "",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "89f5412216e665f9",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all_gauge",
        "group": "e70d0760bcc08d3a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "% freier Himmel",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "10",
        "seg2": "50",
        "className": "",
        "x": 1210,
        "y": 900,
        "wires": []
    },
    {
        "id": "1f4e9f5ca177a4fb",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_chart",
        "group": "7177e1bbce7a0779",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fba9e3d4b7a32d7c",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_chart",
        "group": "28f7dbdd3547c09e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0798ce47f6aa3654",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "clouds_all_chart",
        "group": "e70d0760bcc08d3a",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "5502778a80f45e82",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "7177e1bbce7a0779",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "wind_deg",
        "label": "",
        "format": "{{msg.payload}} Â°",
        "layout": "row-center",
        "className": "",
        "x": 1180,
        "y": 760,
        "wires": []
    },
    {
        "id": "46e6fbeff51aefe7",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "name",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "city_name",
        "x": 310,
        "y": 980,
        "wires": []
    },
    {
        "id": "9fedbbcfbb6eecaa",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "coord_lon",
        "label": "",
        "format": "lon : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1180,
        "y": 1160,
        "wires": []
    },
    {
        "id": "37b7fce468461e6f",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 5,
        "width": "6",
        "height": "1",
        "name": "coord_lat",
        "label": "",
        "format": "lat : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1180,
        "y": 1200,
        "wires": []
    },
    {
        "id": "091892704ce5b1c9",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "sys_sunrise",
        "label": "",
        "format": "sunrise : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cfffe8fe3f29a9b9",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "sys_sunset",
        "label": "",
        "format": "sunset : {{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1190,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3a20fb083ad87a15",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new Date",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nconst date = new Date();\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "848ffdb9bb12c7d4"
            ]
        ]
    },
    {
        "id": "848ffdb9bb12c7d4",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "f136cc64cd7db2e1",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "DateTime",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 320,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cf40801eef0ad09e",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "func": "// GET VARIABLEN\nlet change = flow.get('change') || 0;\n\n// FUNKTION\nchange = 100 - Number(msg.payload); \n\n// SET VARIABLEN\nflow.set('change', change);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = change;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 860,
        "wires": [
            [
                "c43783c9fee726ef",
                "89f5412216e665f9",
                "0798ce47f6aa3654"
            ]
        ]
    },
    {
        "id": "c43783c9fee726ef",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 940,
        "wires": []
    },
    {
        "id": "67dd73ff2b4ac974",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure_gauge",
        "group": "325d7857240a0cc6",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}} hPa",
        "min": "990",
        "max": "1030",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b400"
        ],
        "seg1": "1000",
        "seg2": "1010",
        "className": "",
        "x": 1220,
        "y": 460,
        "wires": []
    },
    {
        "id": "70373dc283a85ab4",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_pressure",
        "group": "325d7857240a0cc6",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "990",
        "ymax": "1030",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3d10a8765ff07baa",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new DateSunrise",
        "func": "// GET VARIABLEN\nlet sunrise = flow.get('sunrise') || 0;\n\n// FUNKTION\nconst date = new Date(msg.payload * 1000);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nsunrise = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('sunrise', sunrise);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sunrise;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1060,
        "wires": [
            [
                "091892704ce5b1c9"
            ]
        ]
    },
    {
        "id": "f00a189b5d453d95",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "new DateSunset",
        "func": "// GET VARIABLEN\nlet sunset = flow.get('sunset') || 0;\n\n// FUNKTION\nconst date = new Date(msg.payload * 1000);\n\nlet d = date.getDate();\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours();\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nsunset = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('sunset', sunset);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = sunset;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1100,
        "wires": [
            [
                "cfffe8fe3f29a9b9"
            ]
        ]
    },
    {
        "id": "85c23d534094847b",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 700,
        "wires": []
    },
    {
        "id": "c6ba937f717b1144",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : Weather",
        "info": "",
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "66f5f701db52321e",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_temp_chart",
        "group": "4421ea5d2f4fae8e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "40",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a3cf79842064010e",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "main_humidity_chart",
        "group": "4421ea5d2f4fae8e",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1580,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a2647b70a0149068",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : wetterchecker",
        "info": "",
        "x": 1570,
        "y": 260,
        "wires": []
    },
    {
        "id": "9d8316e460c6d437",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "temperature_gauge",
        "group": "4421ea5d2f4fae8e",
        "order": 1,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "-20",
        "max": "50",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "13",
        "seg2": "30",
        "className": "",
        "x": 1570,
        "y": 380,
        "wires": []
    },
    {
        "id": "088ee34d32558547",
        "type": "ui_gauge",
        "z": "ddd61edf8d8f5ce2",
        "name": "humidity_gauge",
        "group": "4421ea5d2f4fae8e",
        "order": 4,
        "width": "1",
        "height": "1",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "",
        "min": "0",
        "max": "100",
        "colors": [
            "#3f62ee",
            "#00b500",
            "#d78c09"
        ],
        "seg1": "40",
        "seg2": "60",
        "className": "",
        "x": 1560,
        "y": 420,
        "wires": []
    },
    {
        "id": "00a21318c440bff0",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "4421ea5d2f4fae8e",
        "order": 5,
        "width": "5",
        "height": "1",
        "name": "main_humidity_text",
        "label": "Luftfeuchtigkeit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1550,
        "y": 120,
        "wires": []
    },
    {
        "id": "4a7792fb4da6f19c",
        "type": "ui_text",
        "z": "ddd61edf8d8f5ce2",
        "group": "4421ea5d2f4fae8e",
        "order": 2,
        "width": "5",
        "height": "1",
        "name": "main_temp_text",
        "label": "Temperatur",
        "format": "{{msg.payload}} Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 1530,
        "y": 160,
        "wires": []
    },
    {
        "id": "132d945df2db4526",
        "type": "comment",
        "z": "ddd61edf8d8f5ce2",
        "name": "View : wetterchecker",
        "info": "",
        "x": 1550,
        "y": 80,
        "wires": []
    },
    {
        "id": "a38fa710235fcae4",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "msg.payload.rain[\"1h\"]",
        "func": "// GET VARIABLEN\nlet rain = flow.get('rain') || 0;\n\n// FUNKTION\nif (typeof variable === 'undefined') {\n    rain = 0;\n} else {\n    rain = msg.payload.rain[\"1h\"];\n}\n\n// SET VARIABLEN\nflow.set('rain', rain);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = rain;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1260,
        "wires": [
            [
                "c4a190953547dfd6",
                "43811e6b4a782861"
            ]
        ]
    },
    {
        "id": "c4a190953547dfd6",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1260,
        "wires": []
    },
    {
        "id": "43811e6b4a782861",
        "type": "ui_chart",
        "z": "ddd61edf8d8f5ce2",
        "name": "wind_speed_chart",
        "group": "3bc48255336fdd1e",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 910,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "04a444f92205b34a",
        "type": "cronplus",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronOW",
                "topic": "ow",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "2 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 800,
        "wires": [
            [
                "d6cbec0653b8a1ef",
                "0116abc6b06d2474"
            ]
        ]
    },
    {
        "id": "d6cbec0653b8a1ef",
        "type": "function",
        "z": "ddd61edf8d8f5ce2",
        "name": "ow_cron",
        "func": "// GET VARIABLEN\nlet ow_cron = flow.get('ow_cron') || 0;\n\n// FUNKTION\now_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('ow_cron', ow_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ow_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 800,
        "wires": [
            [
                "db8196e2a58b061e",
                "3a20fb083ad87a15"
            ]
        ]
    },
    {
        "id": "80f50b86215efe48",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 800,
        "wires": []
    },
    {
        "id": "ceb27ffd3dafc8e0",
        "type": "inject",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 500,
        "wires": [
            [
                "db8196e2a58b061e"
            ]
        ]
    },
    {
        "id": "0116abc6b06d2474",
        "type": "debug",
        "z": "ddd61edf8d8f5ce2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 580,
        "wires": []
    },
    {
        "id": "9fc393f045c758ed",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherbit-v1-mashape.p.rapidapi.com\"};\nmsg.url = \"https://weatherbit-v1-mashape.p.rapidapi.com/current?lon=13.4105&lat=52.5244\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "a14a4c69cd41e9ae"
            ]
        ]
    },
    {
        "id": "a14a4c69cd41e9ae",
        "type": "http request",
        "z": "01666d2621fc3afa",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "8da987db4dabcd68",
                "8576431a98a60a11"
            ]
        ]
    },
    {
        "id": "1b5e4afa3b170a0f",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "92556ecc9f50d989",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "2382e0cc0f24b2e5",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "wb_current_temp",
        "func": "// GET VARIABLEN\nlet wb_current_temp = global.get('wb_current_temp') || 0;\n\n// FUNKTION\nwb_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('wb_current_temp', wb_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 680,
        "wires": [
            [
                "a68b3b7e77f976f2"
            ]
        ]
    },
    {
        "id": "a68b3b7e77f976f2",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "fb5eb9c38bcdf113",
        "type": "cronplus",
        "z": "01666d2621fc3afa",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWB",
                "topic": "wb",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 3 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "028b6f9bb80bfd66",
                "5f2a7f03c12f2e46",
                "93d45e2451e668ed",
                "9fc393f045c758ed"
            ]
        ]
    },
    {
        "id": "8da987db4dabcd68",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data [0].temp + \"', '\" + msg.payload.data [0].rh + \"', '\" + msg.payload.data [0].weather.description + \"', '\" + msg.payload.data [0].clouds + \"', '\" + msg.payload.data [0].pres + \"', '\" + msg.payload.data [0].precip + \"', '\" + msg.payload.data [0].wind_spd + \"', '\" + msg.payload.data [0].wind_dir + \"', '\" + msg.payload.data [0].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "4f5b2a493e889792"
            ]
        ]
    },
    {
        "id": "4f5b2a493e889792",
        "type": "mysql",
        "z": "01666d2621fc3afa",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "f5e7e6edfa60885a",
                "e24b6c4574aca3cf"
            ]
        ]
    },
    {
        "id": "8576431a98a60a11",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "028b6f9bb80bfd66",
        "type": "mqtt out",
        "z": "01666d2621fc3afa",
        "name": "",
        "topic": "/cron/current_data/wb",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "5f2a7f03c12f2e46",
        "type": "ui_text",
        "z": "01666d2621fc3afa",
        "group": "95336c470a1da5f7",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/wb",
        "label": "/cron/current_data/wb",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "93d45e2451e668ed",
        "type": "ui_text",
        "z": "01666d2621fc3afa",
        "group": "95336c470a1da5f7",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/wb",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "746a2473c46dd01c",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "RapidAPI",
        "info": "",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "f5e7e6edfa60885a",
        "type": "mqtt out",
        "z": "01666d2621fc3afa",
        "name": "",
        "topic": "/cron/current_data/wb/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "e24b6c4574aca3cf",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "SELECT * FROM `api_data_current",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 3 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "9f1008c633a21087",
                "94f0fc2acb99d80b"
            ]
        ]
    },
    {
        "id": "94f0fc2acb99d80b",
        "type": "mysql",
        "z": "01666d2621fc3afa",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "2382e0cc0f24b2e5",
                "c959aad206469eff",
                "4daa16807b8db93e"
            ]
        ]
    },
    {
        "id": "9f1008c633a21087",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "9767b3636b097349",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "`api_id` = 3",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "9d329da34e5462aa",
        "type": "inject",
        "z": "01666d2621fc3afa",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "e24b6c4574aca3cf"
            ]
        ]
    },
    {
        "id": "c959aad206469eff",
        "type": "function",
        "z": "01666d2621fc3afa",
        "name": "wb_current_humidity",
        "func": "// GET VARIABLEN\nlet wb_current_humidity = global.get('wb_current_humidity') || 0;\n\n// FUNKTION\nwb_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('wb_current_humidity', wb_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wb_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "491f812c84ffe9ad"
            ]
        ]
    },
    {
        "id": "491f812c84ffe9ad",
        "type": "debug",
        "z": "01666d2621fc3afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "4daa16807b8db93e",
        "type": "ui_text",
        "z": "01666d2621fc3afa",
        "group": "a2915d3249cfafbe",
        "order": 6,
        "width": "2",
        "height": "2",
        "name": "Temp WB Hello",
        "label": "WB",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}Â°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "50c6549f0b8b650a",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "View Hello/Home",
        "info": "",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "92e1e9e59233080c",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "386aa6dfe47111f4",
        "type": "inject",
        "z": "01666d2621fc3afa",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "9fc393f045c758ed"
            ]
        ]
    },
    {
        "id": "add64d088b234d32",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "f0f1d58674035bfd",
        "type": "comment",
        "z": "01666d2621fc3afa",
        "name": "`api_id` = 3",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "49c2061c3168a071",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherbit-v1-mashape.p.rapidapi.com\"};\nmsg.url = \"https://weatherbit-v1-mashape.p.rapidapi.com/forecast/hourly?lon=13.4105&lat=52.5244&hours=48\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "185c15b17a957edf"
            ]
        ]
    },
    {
        "id": "4f5691fe8ad5e9c6",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "470c2b470e9db4d2",
        "type": "inject",
        "z": "ae83296a545602f0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "49c2061c3168a071"
            ]
        ]
    },
    {
        "id": "185c15b17a957edf",
        "type": "http request",
        "z": "ae83296a545602f0",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 260,
        "wires": [
            [
                "4f5691fe8ad5e9c6",
                "9b11afd59e4b05c4",
                "bd10af24b7bc892c",
                "c9baf1e1e698c51d",
                "91e9a4b1f0d0631d",
                "de619e243015aa7a"
            ]
        ]
    },
    {
        "id": "9b11afd59e4b05c4",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[0].timestamp_local + \"', '\" + msg.payload.data [0].temp + \"', '\" + msg.payload.data [0].rh + \"', '\" + msg.payload.data [0].weather.description + \"', '\" + msg.payload.data [0].clouds + \"', '\" + msg.payload.data [0].pres + \"', '\" + msg.payload.data [0].precip + \"', '\" + msg.payload.data [0].wind_spd + \"', '\" + msg.payload.data [0].wind_dir + \"', '\" + msg.payload.data [0].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "dc5302f12011c8bf"
            ]
        ]
    },
    {
        "id": "dc5302f12011c8bf",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 260,
        "wires": []
    },
    {
        "id": "bd10af24b7bc892c",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[1].timestamp_local + \"', '\" + msg.payload.data [1].temp + \"', '\" + msg.payload.data [1].rh + \"', '\" + msg.payload.data [1].weather.description + \"', '\" + msg.payload.data [1].clouds + \"', '\" + msg.payload.data [1].pres + \"', '\" + msg.payload.data [1].precip + \"', '\" + msg.payload.data [1].wind_spd + \"', '\" + msg.payload.data [1].wind_dir + \"', '\" + msg.payload.data [1].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 320,
        "wires": [
            [
                "a484c4838378abde"
            ]
        ]
    },
    {
        "id": "a484c4838378abde",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 320,
        "wires": []
    },
    {
        "id": "c9baf1e1e698c51d",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[2].timestamp_local + \"', '\" + msg.payload.data [2].temp + \"', '\" + msg.payload.data [2].rh + \"', '\" + msg.payload.data [2].weather.description + \"', '\" + msg.payload.data [2].clouds + \"', '\" + msg.payload.data [2].pres + \"', '\" + msg.payload.data [2].precip + \"', '\" + msg.payload.data [2].wind_spd + \"', '\" + msg.payload.data [2].wind_dir + \"', '\" + msg.payload.data [2].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "628cdf1ac1aa1f2f"
            ]
        ]
    },
    {
        "id": "628cdf1ac1aa1f2f",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 380,
        "wires": []
    },
    {
        "id": "b0d77ed5542de934",
        "type": "cronplus",
        "z": "ae83296a545602f0",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWBForecast",
                "topic": "wb-forecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "13 0,3,6,9,12,15,18,21 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 260,
        "wires": [
            [
                "a46db28ff780bd4c",
                "49c2061c3168a071",
                "3fe1057a27298120",
                "4e2c102da491e778"
            ]
        ]
    },
    {
        "id": "a46db28ff780bd4c",
        "type": "debug",
        "z": "ae83296a545602f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "15c985fbcb50f08c",
        "type": "mysql",
        "z": "ae83296a545602f0",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1290,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe1057a27298120",
        "type": "mqtt out",
        "z": "ae83296a545602f0",
        "name": "",
        "topic": "/cron/forecast_data/wb",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "58454b2cbd92f170",
        "type": "ui_text",
        "z": "ae83296a545602f0",
        "group": "1f94dc0cd60b6d46",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/wb",
        "label": "/cron/forecast_data/wb",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "4e2c102da491e778",
        "type": "ui_text",
        "z": "ae83296a545602f0",
        "group": "1f94dc0cd60b6d46",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/wb",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "91e9a4b1f0d0631d",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[2].timestamp_local + \"', '\" + msg.payload.data [2].temp + \"', '\" + msg.payload.data [2].rh + \"', '\" + msg.payload.data [2].weather.description + \"', '\" + msg.payload.data [2].clouds + \"', '\" + msg.payload.data [2].pres + \"', '\" + msg.payload.data [2].precip + \"', '\" + msg.payload.data [2].wind_spd + \"', '\" + msg.payload.data [2].wind_dir + \"', '\" + msg.payload.data [2].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 500,
        "wires": [
            [
                "15c985fbcb50f08c"
            ]
        ]
    },
    {
        "id": "e01ee066b9986337",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "3 Stunden",
        "info": "",
        "x": 820,
        "y": 460,
        "wires": []
    },
    {
        "id": "4caa60968d25233a",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "6 Stunden",
        "info": "",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "de619e243015aa7a",
        "type": "function",
        "z": "ae83296a545602f0",
        "name": "INSERT INTO `api_data_forecast` ...",
        "func": "let sql = \"INSERT INTO `api_data_forecast` (`api_id`, `forecast_time`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('3', '\" + msg.payload.data[5].timestamp_local + \"', '\" + msg.payload.data [5].temp + \"', '\" + msg.payload.data [5].rh + \"', '\" + msg.payload.data [5].weather.description + \"', '\" + msg.payload.data [5].clouds + \"', '\" + msg.payload.data [5].pres + \"', '\" + msg.payload.data [5].precip + \"', '\" + msg.payload.data [5].wind_spd + \"', '\" + msg.payload.data [5].wind_dir + \"', '\" + msg.payload.data [5].wind_cdir + \"')\";\nmsg.topic = sql;\nmsg.payload = 'INSERT INTO api_data_forecast';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 620,
        "wires": [
            [
                "adf50d6b307d04dd"
            ]
        ]
    },
    {
        "id": "adf50d6b307d04dd",
        "type": "mysql",
        "z": "ae83296a545602f0",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 1290,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c70df6e5db23b886",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "Stunde: 0,3,6,9,12,15,18,21",
        "info": "",
        "x": 180,
        "y": 320,
        "wires": []
    },
    {
        "id": "301ab170130c44b4",
        "type": "comment",
        "z": "ae83296a545602f0",
        "name": "RapidAPI",
        "info": "",
        "x": 440,
        "y": 300,
        "wires": []
    },
    {
        "id": "646b01f96609ebbe",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"};\nmsg.url = \"https://weatherapi-com.p.rapidapi.com/current.json?q=52.5244,13.4105\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "3f79909836ed09f1"
            ]
        ]
    },
    {
        "id": "3f79909836ed09f1",
        "type": "http request",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "13b963269b6532f9",
                "b24347fd0df09d2a"
            ]
        ]
    },
    {
        "id": "13b963269b6532f9",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "7b785326b7600a34",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "Request",
        "info": "",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "e1a53dfb4bf6bced",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "GLOBAL",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "6775d5cad1537bbd",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "wa_current_temp",
        "func": "// GET VARIABLEN\nlet wa_current_temp = global.get('wa_current_temp') || 0;\n\n// FUNKTION\nwa_current_temp = msg.payload[0].temperatur;\n\n// SET VARIABLEN\nglobal.set('wa_current_temp', wa_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 680,
        "wires": [
            [
                "34a188623c90fb94"
            ]
        ]
    },
    {
        "id": "34a188623c90fb94",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "6220cde3df7d1ddc",
        "type": "cronplus",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWA",
                "topic": "wa",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 4 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 260,
        "wires": [
            [
                "4adfa4f3cca88bc6",
                "11d2160728b0c29f",
                "646b01f96609ebbe"
            ]
        ]
    },
    {
        "id": "f77d1706f7e71d10",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "wa_current_humidity",
        "func": "// GET VARIABLEN\nlet wa_current_humidity = global.get('wa_current_humidity') || 0;\n\n// FUNKTION\nwa_current_humidity = msg.payload[0].humidity;\n\n// SET VARIABLEN\nglobal.set('wa_current_humidity', wa_current_humidity);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = wa_current_humidity;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 720,
        "wires": [
            [
                "13fb44c0f8577813"
            ]
        ]
    },
    {
        "id": "13fb44c0f8577813",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 720,
        "wires": []
    },
    {
        "id": "b24347fd0df09d2a",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "INSERT INTO `api_data_current` ...",
        "func": "let sql = \"INSERT INTO `api_data_current` (`api_id`, `temperatur`, `humidity`, `sky_description`, `sky_clouds`, `air_pressure`, `probability_of_precipitation`, `wind_speed`, `wind_direction_deg`, `wind_direction_name`) VALUES ('4', '\" + msg.payload.current.temp_c + \"', '\" + msg.payload.current.humidity + \"', '\" + msg.payload.current.condition.text + \"', '\" + msg.payload.current.cloud + \"', '\" + msg.payload.current.pressure_mb + \"', '\" + msg.payload.current.precip_mm + \"', '\" + msg.payload.current.wind_kph + \"', '\" + msg.payload.current.wind_degree + \"', '\" + msg.payload.current.wind_dir + \"')\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "46dc28dc70d512ca"
            ]
        ]
    },
    {
        "id": "46dc28dc70d512ca",
        "type": "mysql",
        "z": "e0f5a1e129ae9af8",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "04e251b254551083",
                "dce437525469387e"
            ]
        ]
    },
    {
        "id": "4adfa4f3cca88bc6",
        "type": "mqtt out",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "topic": "/cron/current_data/wa",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "89aa646e09c7b7e6",
        "type": "ui_text",
        "z": "e0f5a1e129ae9af8",
        "group": "95336c470a1da5f7",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "text /cron/current_data/wa",
        "label": "/cron/current_data/wa",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "11d2160728b0c29f",
        "type": "ui_text",
        "z": "e0f5a1e129ae9af8",
        "group": "95336c470a1da5f7",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "next /cron/current_data/wa",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "a8b2746f4a305584",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "RapidAPI",
        "info": "",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "cabb991b65a5ad9e",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "View Hello/Home",
        "info": "",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "6ddde058a55e3c99",
        "type": "ui_text",
        "z": "e0f5a1e129ae9af8",
        "group": "a2915d3249cfafbe",
        "order": 7,
        "width": "2",
        "height": "2",
        "name": "Temp WA Hello",
        "label": "WA",
        "format": "<br>{{msg.payload[0].temperatur.toFixed(2)}}Â°C",
        "layout": "col-center",
        "className": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "04e251b254551083",
        "type": "mqtt out",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "topic": "/cron/current_data/wa/success",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "818f7f8dfa7e1598",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "CURRENT / INSERT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "ecf79461f7d2addb",
        "type": "inject",
        "z": "e0f5a1e129ae9af8",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "646b01f96609ebbe"
            ]
        ]
    },
    {
        "id": "8ad6cd684f954955",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "CURRENT / SELECT",
        "info": "",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "e00535b0c43750bc",
        "type": "inject",
        "z": "e0f5a1e129ae9af8",
        "name": "CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "dce437525469387e"
            ]
        ]
    },
    {
        "id": "f2c5ee85b1f26e5d",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "`api_id` = 4",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "dce437525469387e",
        "type": "function",
        "z": "e0f5a1e129ae9af8",
        "name": "SELECT * FROM `api_data_current",
        "func": "let sql = \"SELECT * FROM `api_data_current` WHERE `api_id` = 4 ORDER BY `updated` DESC LIMIT 0, 1\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "8b27c03cd277cb33",
                "64ca7d4b915473a2"
            ]
        ]
    },
    {
        "id": "8b27c03cd277cb33",
        "type": "debug",
        "z": "e0f5a1e129ae9af8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "64ca7d4b915473a2",
        "type": "mysql",
        "z": "e0f5a1e129ae9af8",
        "mydb": "919f4e44dec380e0",
        "name": "",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "6775d5cad1537bbd",
                "f77d1706f7e71d10",
                "6ddde058a55e3c99"
            ]
        ]
    },
    {
        "id": "33f4cd32b65f6380",
        "type": "comment",
        "z": "e0f5a1e129ae9af8",
        "name": "`api_id` = 4",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "9b37197c57f31216",
        "type": "cronplus",
        "z": "3f73221af720ea53",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronWAForecast",
                "topic": "wa-forecast",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "14 0,3,6,9,12,15,18,21 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "3f0de05484619258",
                "edd9007134aeca76"
            ]
        ]
    },
    {
        "id": "13932704051c97da",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "Stunde: 0,3,6,9,12,15,18,21",
        "info": "",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "3f0de05484619258",
        "type": "mqtt out",
        "z": "3f73221af720ea53",
        "name": "",
        "topic": "/cron/forecast_data/wb",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 640,
        "y": 180,
        "wires": []
    },
    {
        "id": "edd9007134aeca76",
        "type": "ui_text",
        "z": "3f73221af720ea53",
        "group": "1f94dc0cd60b6d46",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "next /cron/forecast_data/wa",
        "label": "",
        "format": "{{msg.cronplus.status.nextDateTZ}}",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "4ed7a15508549d70",
        "type": "ui_text",
        "z": "3f73221af720ea53",
        "group": "1f94dc0cd60b6d46",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "text /cron/forecast_data/wa",
        "label": "/cron/forecast_data/wa",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "862b03615eeaee4e",
        "type": "function",
        "z": "3f73221af720ea53",
        "name": "msg.method",
        "func": "let home_lon = global.get('home_lon');\nlet home_lat = global.get('home_lat');\n\nmsg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"};\nmsg.url = \"https://weatherapi-com.p.rapidapi.com/forecast.json?q=\" + home_lon + \",\" + home_lat + \"\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "a65871d8beccdce7"
            ]
        ]
    },
    {
        "id": "77c752633dc06737",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "a0aba6ac36449a3d",
        "type": "inject",
        "z": "3f73221af720ea53",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 400,
        "wires": [
            [
                "862b03615eeaee4e"
            ]
        ]
    },
    {
        "id": "a65871d8beccdce7",
        "type": "http request",
        "z": "3f73221af720ea53",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 870,
        "y": 340,
        "wires": [
            [
                "77c752633dc06737",
                "f5f0fd80eb6d4592",
                "94dc6edf24d6373f",
                "b75680d017321a9b"
            ]
        ]
    },
    {
        "id": "f92a9fa320f5baa8",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "Request",
        "info": "",
        "x": 860,
        "y": 300,
        "wires": []
    },
    {
        "id": "63b5c7fccb1ed714",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "Method",
        "info": "",
        "x": 650,
        "y": 300,
        "wires": []
    },
    {
        "id": "f5f0fd80eb6d4592",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.forecast.forecastday[0].hour[0].time",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 460,
        "wires": []
    },
    {
        "id": "94dc6edf24d6373f",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.forecast.forecastday[0].hour[1].time",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 500,
        "wires": []
    },
    {
        "id": "b75680d017321a9b",
        "type": "debug",
        "z": "3f73221af720ea53",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.forecast.forecastday[0].hour[23].time",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 540,
        "wires": []
    },
    {
        "id": "5ec2f1929eef959a",
        "type": "comment",
        "z": "3f73221af720ea53",
        "name": "RapidAPI",
        "info": "",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "6b09622327b5bc11",
        "type": "inject",
        "z": "f04b5aab4dbbe0ce",
        "name": "1 Stunde",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "ac2aae5cb9302f1e"
            ]
        ]
    },
    {
        "id": "ac2aae5cb9302f1e",
        "type": "http request",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.weatherstack.com/current?access_key=84559252ac9f4227541753cc2f05924a&query=Berlin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "07954e9cee129f9e",
                "21f5e72e238425c1"
            ]
        ]
    },
    {
        "id": "07954e9cee129f9e",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "func": "msg.payload = msg.payload.current.temperature;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "41313722bc31bf0a",
                "abd8736b62f19848",
                "f9da677b5afe9f98"
            ]
        ]
    },
    {
        "id": "41313722bc31bf0a",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 280,
        "wires": []
    },
    {
        "id": "abd8736b62f19848",
        "type": "ui_text",
        "z": "f04b5aab4dbbe0ce",
        "group": "69fad70e826d02b4",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "weatherstack",
        "format": "{{msg.payload}}Â°C",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "092c1a89b5351c83",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "INIT",
        "info": "",
        "x": 290,
        "y": 200,
        "wires": []
    },
    {
        "id": "2f3cd8780bda46ca",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "Request",
        "info": "",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "46a7352a0f1a3064",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "SET",
        "info": "",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "dba96ba2e0e4adbc",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "View",
        "info": "",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "f9da677b5afe9f98",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "ws_current_temp",
        "func": "// GET VARIABLEN\nlet ws_current_temp = global.get('ws_current_temp') || 0;\n\n// FUNKTION\nws_current_temp = msg.payload;\nws_current_temp = `{\n    \"ws_temp\": ${ws_current_temp}, \n    \"time\": ${msg.topic}\n}`;\n\n// SET VARIABLEN\nglobal.set('ws_current_temp', ws_current_temp);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ws_current_temp;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "ac6f319af1e7e848"
            ]
        ]
    },
    {
        "id": "ac6f319af1e7e848",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 380,
        "wires": []
    },
    {
        "id": "0d99f7aba98aff48",
        "type": "comment",
        "z": "f04b5aab4dbbe0ce",
        "name": "GLOBAL",
        "info": "",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "2ae76b95f1044477",
        "type": "cronplus",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "outputField": "payload",
        "timeZone": "Europe/Berlin",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "cronYR",
                "topic": "ws",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 */1 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 300,
        "y": 320,
        "wires": [
            [
                "b1f687238f78ce0b"
            ]
        ]
    },
    {
        "id": "b1f687238f78ce0b",
        "type": "function",
        "z": "f04b5aab4dbbe0ce",
        "name": "ws_cron",
        "func": "// GET VARIABLEN\nlet ws_cron = flow.get('ws_cron') || 0;\n\n// FUNKTION\nws_cron = msg.payload;\n\n// SET VARIABLEN\nflow.set('ws_cron', ws_cron);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = ws_cron;\nmsg.topic = msg.payload;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "12dc50e3c6145960",
                "ac2aae5cb9302f1e"
            ]
        ]
    },
    {
        "id": "12dc50e3c6145960",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "21f5e72e238425c1",
        "type": "debug",
        "z": "f04b5aab4dbbe0ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "bf1846aab83c1cb8",
        "type": "OS",
        "z": "65981bb3f5fcad13",
        "name": "",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "987f3fc6a0cf9775"
            ]
        ]
    },
    {
        "id": "304d50880aaa6bb6",
        "type": "inject",
        "z": "65981bb3f5fcad13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "bf1846aab83c1cb8",
                "2396796470ea044b",
                "bd33ef6bb3bfe78a"
            ]
        ]
    },
    {
        "id": "987f3fc6a0cf9775",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "2396796470ea044b",
        "type": "Memory",
        "z": "65981bb3f5fcad13",
        "name": "",
        "scale": "Byte",
        "x": 500,
        "y": 480,
        "wires": [
            [
                "17c8a556c742ecb6"
            ]
        ]
    },
    {
        "id": "bd33ef6bb3bfe78a",
        "type": "NetworkIntf",
        "z": "65981bb3f5fcad13",
        "name": "",
        "x": 510,
        "y": 540,
        "wires": [
            [
                "c558cc6d10c48282"
            ]
        ]
    },
    {
        "id": "17c8a556c742ecb6",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 480,
        "wires": []
    },
    {
        "id": "c558cc6d10c48282",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "5a155cd8f4ce7ab0",
        "type": "exec",
        "z": "65981bb3f5fcad13",
        "command": "sudo ls /etc/systemd/system",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 600,
        "y": 920,
        "wires": [
            [
                "44e1687f78c6bd02"
            ],
            [],
            []
        ]
    },
    {
        "id": "9e40c2e718eb67be",
        "type": "inject",
        "z": "65981bb3f5fcad13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 900,
        "wires": [
            [
                "5a155cd8f4ce7ab0"
            ]
        ]
    },
    {
        "id": "44e1687f78c6bd02",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 920,
        "wires": []
    },
    {
        "id": "e396c667fee80249",
        "type": "inject",
        "z": "65981bb3f5fcad13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1580,
        "wires": [
            [
                "2126e5075f8c6a63"
            ]
        ]
    },
    {
        "id": "2126e5075f8c6a63",
        "type": "exec",
        "z": "65981bb3f5fcad13",
        "command": "sudo iwconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "a1f1c3cb3f6cbe36"
            ],
            [],
            []
        ]
    },
    {
        "id": "a1f1c3cb3f6cbe36",
        "type": "debug",
        "z": "65981bb3f5fcad13",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 857.1041870117188,
        "y": 1580.7777099609375,
        "wires": []
    },
    {
        "id": "d971e559aec57337",
        "type": "kasa",
        "z": "75ec988a5e12b304",
        "name": "192.168.178.36",
        "device": "192.168.178.36",
        "interval": 60000,
        "eventInterval": 15000,
        "payload": "getInfo",
        "payloadType": "info",
        "debug": true,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "f0913c68ab6def14"
            ]
        ]
    },
    {
        "id": "f0913c68ab6def14",
        "type": "debug",
        "z": "75ec988a5e12b304",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "912ff37c20b44a4f",
        "type": "inject",
        "z": "75ec988a5e12b304",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "d971e559aec57337"
            ]
        ]
    },
    {
        "id": "b2acfc87dc941b64",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 15,
        "width": "1",
        "height": "1",
        "name": "icon bar-chart",
        "label": "",
        "format": "<i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "5ed2ad5498b8a0af",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 10,
        "width": "1",
        "height": "1",
        "name": "icon battery-half",
        "label": "",
        "format": "<i class=\"fa fa-battery-half\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "9d5d70e4dd1a2809",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 12,
        "width": "1",
        "height": "1",
        "name": "icon fa-dot-circle-o",
        "label": "",
        "format": "<i class=\"fa fa-dot-circle-o\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 770,
        "y": 320,
        "wires": []
    },
    {
        "id": "d537bc2c48372187",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 14,
        "width": "1",
        "height": "1",
        "name": "icon fa-cog",
        "label": "",
        "format": "<i class=\"fa fa-cog\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "f65675a6c905fa16",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 13,
        "width": "1",
        "height": "1",
        "name": "icon fa-pie-chart",
        "label": "",
        "format": "<i class=\"fa fa-pie-chart\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 880,
        "y": 200,
        "wires": []
    },
    {
        "id": "a9d6db05e9783811",
        "type": "ui_text",
        "z": "71b91177c355c22a",
        "group": "9cbad506a0556217",
        "order": 15,
        "width": "1",
        "height": "1",
        "name": "icon bar-chart",
        "label": "",
        "format": "<i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>",
        "layout": "row-center",
        "className": "",
        "x": 560,
        "y": 360,
        "wires": []
    },
    {
        "id": "fe14e6cf546baf1c",
        "type": "inject",
        "z": "5790cdc8bcaea24e",
        "name": "1 Minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "minute",
        "payload": "0",
        "payloadType": "num",
        "x": 380,
        "y": 400,
        "wires": [
            [
                "72a028beb145d59f",
                "5588164fe967468b"
            ]
        ]
    },
    {
        "id": "72a028beb145d59f",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "6fcd0c5687864aac",
        "type": "ui_gauge",
        "z": "5790cdc8bcaea24e",
        "name": "timer",
        "group": "12b21ddaf27bd62f",
        "order": 12,
        "width": "6",
        "height": "4",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "colors": [
            "#00b500",
            "#d1ec04",
            "#f16f04"
        ],
        "seg1": "5",
        "seg2": "7",
        "className": "",
        "x": 810,
        "y": 400,
        "wires": []
    },
    {
        "id": "5588164fe967468b",
        "type": "function",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "func": "// GET VARIABLEN\nlet minute = global.get('minute') || 0;\n\n// FUNKTION\n//fctDate();\nif(minute < 9) {\n    minute = minute  + 1;\n} else {\n    minute = 0;\n}\n\n// SET VARIABLEN\nglobal.set('minute', minute);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = minute;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "821cce3674eda77f",
                "6fcd0c5687864aac"
            ]
        ]
    },
    {
        "id": "821cce3674eda77f",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "893e6a78511243dd",
        "type": "function",
        "z": "5790cdc8bcaea24e",
        "name": "new Date",
        "func": "// GET VARIABLEN\nlet fct = flow.get('fct') || 0;\nfct = 'Sat Sep 17 2022 18:13:15 GMT+0200 (MitteleuropÃ¤ische Sommerzeit)';\n// FUNKTION\nfunction fctDate(fct) {\n    const date = new Date(fct);\n    \n    let d = date.getDate();\n    d = ((d < 10) ? \"0\" + d : d);\n    \n    let mon = date.getMonth() + 1;\n    mon = ((mon < 10) ? \"0\" + mon : mon);\n    \n    const y = date.getFullYear();\n    \n    let h = date.getHours();\n    h = ((h < 10) ? \"0\" + h : h);\n    \n    let min = date.getMinutes();\n    min = ((min < 10) ? \"0\" + min : min);\n    \n    let s = date.getSeconds();\n    s = ((s < 10) ? \"0\" + s : s);\n    \n    fct = `${d}.${mon}.${y} ${h}:${min}:${s}`;\n    return fct;\n}\n\n// SET VARIABLEN\nflow.set('fct', fct);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = fct;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 566.8958129882812,
        "y": 545.888916015625,
        "wires": [
            [
                "c58c564a6ecf99c3"
            ]
        ]
    },
    {
        "id": "fd5ca78667ea6178",
        "type": "inject",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 560,
        "wires": [
            [
                "893e6a78511243dd"
            ]
        ]
    },
    {
        "id": "c58c564a6ecf99c3",
        "type": "debug",
        "z": "5790cdc8bcaea24e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 560,
        "wires": []
    },
    {
        "id": "c17c5ec9e1e1d3aa",
        "type": "function",
        "z": "d01c02834d8a7616",
        "name": "",
        "func": "//let result = finalResult = Object.assign(yr,wo);\n\nlet maxSpeed = {\n    \"yr\": 25.04,\n    \"wo\": 250.06\n};\n\n\nlet sortable = [];\n\nfor (var vehicle in maxSpeed) {\n    sortable.push([vehicle, maxSpeed[vehicle]]);\n}\n\nsortable.sort(function(a, b) {\n    return a[1] - b[1];\n});\n\n//let result = finalResult = Object.assign(yr,wo);\n\nmsg.payload = sortable;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "830857b53b30ac10"
            ]
        ]
    },
    {
        "id": "5539e8bff6374d01",
        "type": "inject",
        "z": "d01c02834d8a7616",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "c17c5ec9e1e1d3aa"
            ]
        ]
    },
    {
        "id": "830857b53b30ac10",
        "type": "debug",
        "z": "d01c02834d8a7616",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 480,
        "wires": []
    },
    {
        "id": "3322574ea2a15343",
        "type": "function",
        "z": "d01c02834d8a7616",
        "name": "",
        "func": "let Buch = { \n    \"yr\": [\n        {\"gfg\": \"gggg\"}\n        ],\n\t\"titel\" : \"Ab die Post\",\n\t\"value\" : \"344254565X\"\n}\n\nconst grade = {\n  \"score\": \"92\"  \n};\n\nlet result = finalResult = Object.assign(Buch,grade);\n\n//Buch = Buch.push({\"titel2\" : \"2Ab die Post\"});\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 539.8958129882812,
        "y": 544.888916015625,
        "wires": [
            []
        ]
    },
    {
        "id": "efabd99b0cd769a0",
        "type": "function",
        "z": "58922ec04b12f464",
        "name": "time1",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nnow = msg.payload;\n\n//new Date();\n\n//const date = new Date().toISOString();\n\n//toISOString()\n//toLocaleString()\n\n\nlet d = date.getDate(msg.payload);\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours(msg.payload);\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${d}.${mon}.${y} ${h}:${min}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = date;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 340,
        "wires": [
            [
                "c558b4e8e6b604db"
            ]
        ]
    },
    {
        "id": "c558b4e8e6b604db",
        "type": "debug",
        "z": "58922ec04b12f464",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 340,
        "wires": []
    },
    {
        "id": "884f07ef28136669",
        "type": "inject",
        "z": "58922ec04b12f464",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 340,
        "wires": [
            [
                "efabd99b0cd769a0"
            ]
        ]
    },
    {
        "id": "6d2d1e96fc0c2b9d",
        "type": "ui_date_picker",
        "z": "58922ec04b12f464",
        "name": "datepicker",
        "label": "",
        "group": "4345da5d2dd2dc78",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "94397f78ca6e1dd4"
            ]
        ]
    },
    {
        "id": "d164358a7960e79f",
        "type": "inject",
        "z": "58922ec04b12f464",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "6d2d1e96fc0c2b9d"
            ]
        ]
    },
    {
        "id": "d2afaf06d0a1cba5",
        "type": "debug",
        "z": "58922ec04b12f464",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 200,
        "wires": []
    },
    {
        "id": "534c5d85be271538",
        "type": "ui_text",
        "z": "58922ec04b12f464",
        "group": "4345da5d2dd2dc78",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "date picker text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1140,
        "y": 260,
        "wires": []
    },
    {
        "id": "94397f78ca6e1dd4",
        "type": "function",
        "z": "58922ec04b12f464",
        "name": "time1",
        "func": "// GET VARIABLEN\nlet now = flow.get('now') || 0;\n\n// FUNKTION\nnow = msg.payload;\n\n//new Date();\n// const date = new Date().toISOString();\nconst date = new Date(now);\n\n//toISOString()\n//toLocaleString()\n\n\nlet d = date.getDate(msg.payload);\nd = ((d < 10) ? \"0\" + d : d);\n\nlet mon = date.getMonth() + 1;\nmon = ((mon < 10) ? \"0\" + mon : mon);\n\nconst y = date.getFullYear();\n\nlet h = date.getHours(msg.payload);\nh = ((h < 10) ? \"0\" + h : h);\n\nlet min = date.getMinutes();\nmin = ((min < 10) ? \"0\" + min : min);\n\nlet s = date.getSeconds();\ns = ((s < 10) ? \"0\" + s : s);\n\nnow = `${y}-${mon}-${d} ${h}:${min}:${s}`;\n\n// SET VARIABLEN\nflow.set('now', now);\n\n// VARIABLEN UEBERGEBEN\nmsg.payload = now;\n\n// RETURN\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800.8958129882812,
        "y": 276.8888854980469,
        "wires": [
            [
                "534c5d85be271538",
                "d2afaf06d0a1cba5"
            ]
        ]
    },
    {
        "id": "dd868eae695bbc6d",
        "type": "http request",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.open-notify.org/iss-now.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "b9c3028be6ca90a7"
            ]
        ]
    },
    {
        "id": "0549bd69816299a8",
        "type": "inject",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "dd868eae695bbc6d"
            ]
        ]
    },
    {
        "id": "b9c3028be6ca90a7",
        "type": "debug",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "f99ffeeb5b6a9c8b",
        "type": "http request",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.nasa.gov/planetary/apod?api_key=M5QNJXrCmdIHm8YRk4V2F9Pb7qJpcqdid7ekkVcZ",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "817f60ca707fc064"
            ]
        ]
    },
    {
        "id": "f25c8e3478119865",
        "type": "inject",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 420,
        "wires": [
            [
                "f99ffeeb5b6a9c8b"
            ]
        ]
    },
    {
        "id": "817f60ca707fc064",
        "type": "debug",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "5d4e67b45f251cbd",
        "type": "http request",
        "z": "abd71d6eaafedaa3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "authType": "",
        "senderr": false,
        "x": 550,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "48e27ad35704a6b3",
        "type": "ui_form",
        "z": "ddc2d3725b628a90",
        "name": "",
        "label": "Chat",
        "group": "0c3e23847ca5c44f",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Message",
                "value": "msg",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "msg": ""
        },
        "payload": "",
        "submit": "SEND",
        "cancel": "CLEAR",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 670,
        "y": 400,
        "wires": [
            [
                "2a77229564ba2cf5",
                "268b3b1186b64376"
            ]
        ]
    },
    {
        "id": "2a77229564ba2cf5",
        "type": "debug",
        "z": "ddc2d3725b628a90",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 340,
        "wires": []
    },
    {
        "id": "268b3b1186b64376",
        "type": "mqtt out",
        "z": "ddc2d3725b628a90",
        "name": "",
        "topic": "msg",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7bef4fac1dad829",
        "x": 850,
        "y": 480,
        "wires": []
    },
    {
        "id": "897d9dfa45252ba0",
        "type": "mqtt in",
        "z": "ddc2d3725b628a90",
        "name": "",
        "topic": "msg/#",
        "qos": "0",
        "datatype": "json",
        "broker": "e7bef4fac1dad829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 850,
        "y": 580,
        "wires": [
            [
                "b703df2fc2217f28",
                "24b9fa9887eab9a2"
            ]
        ]
    },
    {
        "id": "b703df2fc2217f28",
        "type": "debug",
        "z": "ddc2d3725b628a90",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 580,
        "wires": []
    },
    {
        "id": "24b9fa9887eab9a2",
        "type": "ui_text",
        "z": "ddc2d3725b628a90",
        "group": "0c3e23847ca5c44f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "view",
        "label": "{{msg.payload.msg}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "5891490bd1966e44",
        "type": "comment",
        "z": "4cf46ae5bde8e96d",
        "name": "RapidAPI",
        "info": "",
        "x": 500,
        "y": 300,
        "wires": []
    },
    {
        "id": "820b802ee8b49d8f",
        "type": "function",
        "z": "4cf46ae5bde8e96d",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"webcamstravel.p.rapidapi.com\"};\nmsg.url = \"https://webcamstravel.p.rapidapi.com/webcams/list/nearby=52.5105,13.458,50\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 340,
        "wires": [
            [
                "23e123f483512663",
                "a50a39311a8b3e73"
            ]
        ]
    },
    {
        "id": "23e123f483512663",
        "type": "http request",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "e7b01fc32df0f488"
            ]
        ]
    },
    {
        "id": "e31153bf9a783407",
        "type": "comment",
        "z": "4cf46ae5bde8e96d",
        "name": "Request",
        "info": "",
        "x": 700,
        "y": 300,
        "wires": []
    },
    {
        "id": "9632b38d9589964c",
        "type": "inject",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 340,
        "wires": [
            [
                "820b802ee8b49d8f"
            ]
        ]
    },
    {
        "id": "e7b01fc32df0f488",
        "type": "debug",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "a50a39311a8b3e73",
        "type": "debug",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "54c81ca05f5557a8",
        "type": "inject",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "7ef0cf8ed36274fe"
            ]
        ]
    },
    {
        "id": "7ef0cf8ed36274fe",
        "type": "function",
        "z": "4cf46ae5bde8e96d",
        "name": "msg.method",
        "func": "msg.payload = \"Token\";\nmsg.headers = {\"X-RapidAPI-Key\": \"9029a422ebmsh0513a0d589737d7p12702cjsn83ef54c81645\", \"X-RapidAPI-Host\": \"webcamstravel.p.rapidapi.com\"};\nmsg.url = \"https://webcamstravel.p.rapidapi.com/webcams/list/webcam=1367307910\";\nmsg.method = \"GET\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "117fee2e9d81afa7"
            ]
        ]
    },
    {
        "id": "117fee2e9d81afa7",
        "type": "http request",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 460,
        "wires": [
            [
                "b9f5ad03c0cfe3f1"
            ]
        ]
    },
    {
        "id": "b9f5ad03c0cfe3f1",
        "type": "debug",
        "z": "4cf46ae5bde8e96d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 460,
        "wires": []
    },
    {
        "id": "073b1e2e64f9d0ac",
        "type": "mysql",
        "z": "2fca283a32ad4608",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 810,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "cc572fd7165db948",
        "type": "inject",
        "z": "2fca283a32ad4608",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "ac14096ab779c694"
            ]
        ]
    },
    {
        "id": "ac14096ab779c694",
        "type": "function",
        "z": "2fca283a32ad4608",
        "name": "DELETE FROM `msg`",
        "func": "let sql = \"DELETE FROM `msg` WHERE `updated` <= DATE_SUB(NOW(), INTERVAL 1 HOUR)\";\nmsg.topic = sql;\nmsg.payload = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 360,
        "wires": [
            [
                "82bc4260803f1166",
                "593f32f3db7f7280",
                "073b1e2e64f9d0ac"
            ]
        ]
    },
    {
        "id": "82bc4260803f1166",
        "type": "debug",
        "z": "2fca283a32ad4608",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "593f32f3db7f7280",
        "type": "debug",
        "z": "2fca283a32ad4608",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "4aea6f5063f935e3",
        "type": "mysql",
        "z": "c68bf3193e71610e",
        "mydb": "179277ed4e2f8253",
        "name": "",
        "x": 790,
        "y": 280,
        "wires": [
            [
                "740e867aed664593",
                "210e2760d418e2aa"
            ]
        ]
    },
    {
        "id": "740e867aed664593",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "5d07d43f8bf6e395",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "SELECT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "0f67a0a184c3efca"
            ]
        ]
    },
    {
        "id": "0f67a0a184c3efca",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "getSQL Query",
        "func": "msg.topic = \"SELECT * FROM `nodered`\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "6cbe7d40d558f27a",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "165e492e4664f317"
            ]
        ]
    },
    {
        "id": "165e492e4664f317",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "insertSQL Query",
        "func": "msg.topic = \"INSERT INTO `nodered` (`offerer`) VALUES ('ws')\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "bb53c9e95dcd0246",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "updateSQL Query",
        "func": "msg.topic = \"UPDATE `nodered` SET `offerer` = 'wa' WHERE id = '3'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "4aea6f5063f935e3"
            ]
        ]
    },
    {
        "id": "12c48c8e29fed744",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "bb53c9e95dcd0246"
            ]
        ]
    },
    {
        "id": "210e2760d418e2aa",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "",
        "func": "if (msg.payload.warningStatus === undefined) {\n    msg.payload = `SELECT ...`;\n} else {\n    msg.payload = msg.payload.warningStatus;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 280,
        "wires": [
            [
                "de016b4fde2d751b"
            ]
        ]
    },
    {
        "id": "de016b4fde2d751b",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "99a7a9ceae32fc56",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 560,
        "wires": [
            [
                "f88fca19ca0ce386"
            ]
        ]
    },
    {
        "id": "f88fca19ca0ce386",
        "type": "mysql",
        "z": "c68bf3193e71610e",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 910,
        "y": 560,
        "wires": [
            [
                "57465ea7283da963"
            ]
        ]
    },
    {
        "id": "6e39ee2872030312",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 3;",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "99a7a9ceae32fc56"
            ]
        ]
    },
    {
        "id": "57465ea7283da963",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 560,
        "wires": []
    },
    {
        "id": "9c2b111e4fafb943",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "deleteSQL Query",
        "func": "msg.topic = \"DELETE FROM `msg` WHERE `updated` <= DATE_SUB(NOW(), INTERVAL 30 DAY)\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "68def883313c706b",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "98421cbd3eb32902",
        "type": "inject",
        "z": "c68bf3193e71610e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 350,
        "y": 660,
        "wires": [
            [
                "fa6bd1c5c1958da3"
            ]
        ]
    },
    {
        "id": "fa6bd1c5c1958da3",
        "type": "subflow:9444fcba5df4f1f4",
        "z": "c68bf3193e71610e",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "c836505e4621e6a5"
            ]
        ]
    },
    {
        "id": "c836505e4621e6a5",
        "type": "switch",
        "z": "c68bf3193e71610e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 660,
        "wires": [
            [
                "c5e2433e370c3a09"
            ]
        ]
    },
    {
        "id": "c5e2433e370c3a09",
        "type": "function",
        "z": "c68bf3193e71610e",
        "name": "SELECT * FROM `msg`",
        "func": "msg.topic = \"SELECT * FROM `msg` WHERE `msg_topic` LIKE '/cron/%' ORDER BY updated desc LIMIT 0, 3\";\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 740,
        "wires": [
            [
                "783eb7ce96d31f02"
            ]
        ]
    },
    {
        "id": "783eb7ce96d31f02",
        "type": "mysql",
        "z": "c68bf3193e71610e",
        "mydb": "3440106554ffc41c",
        "name": "",
        "x": 630,
        "y": 740,
        "wires": [
            [
                "5dd312071346e73d"
            ]
        ]
    },
    {
        "id": "5dd312071346e73d",
        "type": "debug",
        "z": "c68bf3193e71610e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 740,
        "wires": []
    },
    {
        "id": "ba3d539b0b5e76be",
        "type": "inject",
        "z": "b080d8ed71d89bdd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 220,
        "wires": [
            [
                "f41d5f11cf4d3ae1"
            ]
        ]
    },
    {
        "id": "f41d5f11cf4d3ae1",
        "type": "link out",
        "z": "b080d8ed71d89bdd",
        "name": "test",
        "mode": "link",
        "links": [
            "d1e241df0b31b8c1"
        ],
        "x": 575,
        "y": 280,
        "wires": []
    },
    {
        "id": "46b07748fad44f9e",
        "type": "complete",
        "z": "b080d8ed71d89bdd",
        "name": "",
        "scope": [
            "f41d5f11cf4d3ae1"
        ],
        "uncaught": false,
        "x": 350,
        "y": 440,
        "wires": [
            [
                "f908dda9eded4209"
            ]
        ]
    },
    {
        "id": "f908dda9eded4209",
        "type": "debug",
        "z": "b080d8ed71d89bdd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 440,
        "wires": []
    },
    {
        "id": "4bb8df7054d7b324",
        "type": "catch",
        "z": "b080d8ed71d89bdd",
        "name": "",
        "scope": [
            "f41d5f11cf4d3ae1"
        ],
        "uncaught": false,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "0ec7fbafc9311624"
            ]
        ]
    },
    {
        "id": "0ec7fbafc9311624",
        "type": "debug",
        "z": "b080d8ed71d89bdd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "d1e241df0b31b8c1",
        "type": "link in",
        "z": "8e07d4af41ec64a6",
        "name": "in",
        "links": [
            "f41d5f11cf4d3ae1"
        ],
        "x": 495,
        "y": 340,
        "wires": [
            [
                "0e664e385448eff2"
            ]
        ]
    },
    {
        "id": "0e664e385448eff2",
        "type": "debug",
        "z": "8e07d4af41ec64a6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 340,
        "wires": []
    }
]